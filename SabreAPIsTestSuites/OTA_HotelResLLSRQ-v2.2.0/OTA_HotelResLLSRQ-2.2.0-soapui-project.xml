<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7bb701cd-10cd-4e84-842c-c66c1e0ce51e" activeEnvironment="Default" name="OTA_HotelResLLSRQ-2.2.0" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="19aaba75-c886-448c-ab47-dab592df83e9" wsaVersion="NONE" name="OTA_HotelResSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}OTA_HotelResSoapBinding" soapVersion="1_1" anonymous="optional" definition="https://files.developer.sabre.com/wsdl/tpfc/OTA_HotelResLLS2.2.0RQ.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://files.developer.sabre.com/wsdl/tpfc/OTA_HotelResLLS2.2.0RQ.wsdl"><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/OTA_HotelResLLS2.2.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="OTA_HotelResLLS2.2.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="OTA_HotelResInput">
    <wsdl:part name="header" element="eb:MessageHeader"/>
    <wsdl:part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:OTA_HotelResRQ"/>
  </wsdl:message>
  <wsdl:message name="OTA_HotelResOutput">
    <wsdl:part name="header" element="eb:MessageHeader"/>
    <wsdl:part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:OTA_HotelResRS"/>
  </wsdl:message>
  <wsdl:portType name="OTA_HotelResPortType">
    <wsdl:operation name="OTA_HotelResRQ">
      <wsdl:input message="sws:OTA_HotelResInput"/>
      <wsdl:output message="sws:OTA_HotelResOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OTA_HotelResSoapBinding" type="sws:OTA_HotelResPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="OTA_HotelResRQ">
      <soap:operation soapAction="OTA_HotelResLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:OTA_HotelResInput" part="header" use="literal"/>
        <soap:header message="sws:OTA_HotelResInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:OTA_HotelResOutput" part="header" use="literal"/>
        <soap:header message="sws:OTA_HotelResOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OTA_HotelResService">
    <wsdl:port name="OTA_HotelResPortType" binding="sws:OTA_HotelResSoapBinding">
      <soap:address location="https://sws-crt.cert.sabre.com/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/OTA_HotelResLLS2.2.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="OTA_HotelResLLS2.2.0RQ.xsd"/>
  &lt;include schemaLocation="OTA_HotelResLLS2.2.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/OTA_HotelResLLS2.2.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="OTA_HotelResRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Hotel">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BasicPropertyInfo">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ConfirmationNumber" minOccurs="0" type="xs:string"/>
                  </xs:sequence>
                  <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                  <xs:attribute name="InsertAfter" type="xs:integer" use="optional"/>
                  <xs:attribute name="RPH" type="xs:integer" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Customer" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Corporate" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ID" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CustLoyalty" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="ProgramID" type="xs:string" use="required"/>
                        <xs:attribute name="MembershipID" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ID" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Number" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="DCA_LongSell" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="BookedRate" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Amount" type="xs:string" use="required"/>
                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CancelPenalty" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="PolicyCode" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="DCA_Product" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="LongSellTimeIdentifier" minOccurs="0" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="Guarantee" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="CC_Info" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="PaymentCard">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="required"/>
                              <xs:attribute name="ExpireDate" type="xs:string" use="required"/>
                              <xs:attribute name="Number" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Surname" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                  </xs:sequence>
                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="GuestCounts" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Crib" minOccurs="0" type="xs:string"/>
                    <xs:element name="ExtraGuest" minOccurs="0" type="xs:string"/>
                    <xs:element name="RollAway" minOccurs="0" type="xs:string"/>
                  </xs:sequence>
                  <xs:attribute name="Count" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="POS" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Source">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="CompanyName" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Division" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RequestorID" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="RatePlanCandidates" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ContractNegotiatedRateCode" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="RoomType">
                <xs:complexType>
                  <xs:attribute name="NumberOfUnits" type="xs:integer" use="required"/>
                  <xs:attribute name="RoomTypeCode" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="SpecialPrefs" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                    <xs:element name="WrittenConfirmation" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="TimeSpan" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="End" type="sws:dateTime" use="required"/>
                  <xs:attribute name="Start" type="sws:dateTime" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.2.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be omitted. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/OTA_HotelResLLS2.2.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="OTA_HotelResRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="Hotel" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BasicPropertyInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ConfirmationNumber" minOccurs="0" type="xs:string"/>
                  </xs:sequence>
                  <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelCityCode" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelName" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Customer" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Client" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ID" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Corporate" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ID" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CustLoyalty" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ReserveUnderName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="Guarantee" minOccurs="0" type="xs:string"/>
              <xs:element name="POS" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Source" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="RequestorID" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="RoomRates" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="RoomRate" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AdditionalInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CancelPolicy" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Option" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Advance" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Cancellation" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Deposit" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Guarantee" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Other" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="HotelRateCode" minOccurs="0" type="xs:string"/>
                          <xs:element name="Rates" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Rate" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AdditionalGuestAmounts" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="AdditionalGuestAmount" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Charges" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="AdultRollAway" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Crib" type="xs:string" use="optional"/>
                                                      <xs:attribute name="ExtraPerson" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="NumExtraPersons" type="xs:string" use="optional"/>
                                                <xs:attribute name="NumRollaways" type="xs:string" use="optional"/>
                                                <xs:attribute name="NumCribs" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="HotelTotalPricing" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Disclaimer" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="RateRange" minOccurs="0" maxOccurs="8">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="EffectiveDate" type="sws:date" use="optional"/>
                                                <xs:attribute name="ExpireDate" type="sws:date" use="optional"/>
                                                <xs:attribute name="Surcharges" type="xs:string" use="optional"/>
                                                <xs:attribute name="Taxes" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TotalSurcharges" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="SurchargeFour" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="SurchargeOne" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="SurchargeThree" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="SurchargeTwo" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="4" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TotalTaxes" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Tax" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="TaxFieldOne" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="TaxFieldThree" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="TaxFieldTwo" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="4" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="30" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CancelPolicy" type="xs:string" use="optional"/>
                                    <xs:attribute name="ClientID" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="DCS_AuxRateCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="DepositRequired" type="xs:string" use="optional"/>
                                    <xs:attribute name="GuaranteeRequired" type="xs:string" use="optional"/>
                                    <xs:attribute name="LAP" type="xs:string" use="optional"/>
                                    <xs:attribute name="RateAccessCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="RateCategory" type="xs:string" use="optional"/>
                                    <xs:attribute name="RoomTypeCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="SpecialPrefs" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                    <xs:element name="WrittenConfirmation" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Ind" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
              <xs:element name="TimeSpan" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="Duration" type="xs:string" use="optional"/>
                  <xs:attribute name="End" type="sws:dateOrTime" use="optional"/>
                  <xs:attribute name="Start" type="sws:dateOrTime" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
            <xs:attribute name="NumberOfUnits" type="xs:string" use="optional"/>
            <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
            <xs:attribute name="Status" type="xs:string" use="optional"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	 Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint></con:endpoints><con:operation id="5f5576a9-4ea0-419f-acd2-d7cafdad0a45" isOneWay="false" action="OTA_HotelResLLSRQ" name="OTA_HotelResRQ" bindingOperationName="OTA_HotelResRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="abc4a67c-b375-4933-b7f2-9c26f0bcdadd" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:mes="http://www.ebxml.org/namespaces/messageHeader" xmlns:ns="http://webservices.sabre.com/sabreXML/2011/10">\r
   <soapenv:Header>\r
      <sec:Security>\r
         <!--Optional:-->\r
         <sec:UsernameToken>\r
            <!--Optional:-->\r
            <sec:Username>?</sec:Username>\r
            <!--Optional:-->\r
            <sec:Password>?</sec:Password>\r
            <!--0 to 2 repetitions:-->\r
            <sec:NewPassword>?</sec:NewPassword>\r
            <!--Optional:-->\r
            <Organization>?</Organization>\r
            <!--Optional:-->\r
            <Domain>?</Domain>\r
         </sec:UsernameToken>\r
         <!--Optional:-->\r
         <sec:SabreAth>?</sec:SabreAth>\r
         <!--Optional:-->\r
         <sec:BinarySecurityToken>?</sec:BinarySecurityToken>\r
      </sec:Security>\r
      <mes:MessageHeader mes:id="?" mes:version="?">\r
         <mes:From>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:From>\r
         <mes:To>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:To>\r
         <mes:CPAId>?</mes:CPAId>\r
         <mes:ConversationId>?</mes:ConversationId>\r
         <mes:Service mes:type="?">?</mes:Service>\r
         <mes:Action>?</mes:Action>\r
         <mes:MessageData>\r
            <mes:MessageId>?</mes:MessageId>\r
            <mes:Timestamp>?</mes:Timestamp>\r
            <!--Optional:-->\r
            <mes:RefToMessageId>?</mes:RefToMessageId>\r
            <!--Optional:-->\r
            <mes:TimeToLive>?</mes:TimeToLive>\r
            <!--Optional:-->\r
            <mes:Timeout>?</mes:Timeout>\r
         </mes:MessageData>\r
         <!--Optional:-->\r
         <mes:DuplicateElimination>?</mes:DuplicateElimination>\r
         <!--Zero or more repetitions:-->\r
         <mes:Description xml:lang="?">?</mes:Description>\r
         <!--You may enter ANY elements at this point-->\r
      </mes:MessageHeader>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <ns:OTA_HotelResRQ ReturnHostCommand="?" TimeStamp="?" Version="2.2.0">\r
         <ns:Hotel>\r
            <ns:BasicPropertyInfo ChainCode="?" HotelCode="?" InsertAfter="?" RPH="?">\r
               <!--Optional:-->\r
               <ns:ConfirmationNumber>?</ns:ConfirmationNumber>\r
            </ns:BasicPropertyInfo>\r
            <!--Optional:-->\r
            <ns:Customer NameNumber="?">\r
               <!--Optional:-->\r
               <ns:Corporate>\r
                  <ns:ID>?</ns:ID>\r
               </ns:Corporate>\r
               <!--Optional:-->\r
               <ns:CustLoyalty ProgramID="?" MembershipID="?"/>\r
               <!--Optional:-->\r
               <ns:ID>\r
                  <ns:Number>?</ns:Number>\r
               </ns:ID>\r
            </ns:Customer>\r
            <!--Optional:-->\r
            <ns:DCA_LongSell>\r
               <!--Optional:-->\r
               <ns:BookedRate Amount="?" CurrencyCode="?"/>\r
               <!--Optional:-->\r
               <ns:CancelPenalty PolicyCode="?"/>\r
               <!--Optional:-->\r
               <ns:DCA_Product Code="?"/>\r
               <!--Optional:-->\r
               <ns:LongSellTimeIdentifier>?</ns:LongSellTimeIdentifier>\r
            </ns:DCA_LongSell>\r
            <!--Optional:-->\r
            <ns:Guarantee Type="?">\r
               <!--Optional:-->\r
               <ns:CC_Info>\r
                  <ns:PaymentCard Code="?" ExpireDate="?" Number="?"/>\r
                  <ns:PersonName>\r
                     <ns:Surname>?</ns:Surname>\r
                  </ns:PersonName>\r
               </ns:CC_Info>\r
               <!--Optional:-->\r
               <ns:Text>?</ns:Text>\r
            </ns:Guarantee>\r
            <!--Optional:-->\r
            <ns:GuestCounts Count="?">\r
               <!--Optional:-->\r
               <ns:Crib>?</ns:Crib>\r
               <!--Optional:-->\r
               <ns:ExtraGuest>?</ns:ExtraGuest>\r
               <!--Optional:-->\r
               <ns:RollAway>?</ns:RollAway>\r
            </ns:GuestCounts>\r
            <!--Optional:-->\r
            <ns:POS>\r
               <ns:Source>\r
                  <!--Optional:-->\r
                  <ns:CompanyName Division="?"/>\r
                  <!--Optional:-->\r
                  <ns:RequestorID>?</ns:RequestorID>\r
               </ns:Source>\r
            </ns:POS>\r
            <!--Optional:-->\r
            <ns:RatePlanCandidates>\r
               <ns:ContractNegotiatedRateCode>?</ns:ContractNegotiatedRateCode>\r
            </ns:RatePlanCandidates>\r
            <ns:RoomType NumberOfUnits="?" RoomTypeCode="?"/>\r
            <!--Optional:-->\r
            <ns:SpecialPrefs>\r
               <!--Optional:-->\r
               <ns:Text>?</ns:Text>\r
               <!--Optional:-->\r
               <ns:WrittenConfirmation Ind="?"/>\r
            </ns:SpecialPrefs>\r
            <!--Optional:-->\r
            <ns:TimeSpan End="?" Start="?"/>\r
         </ns:Hotel>\r
      </ns:OTA_HotelResRQ>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA_HotelResLLSRQ"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="d8e6d998-afa1-4d95-9f94-dc37c5ed6389" wsaVersion="NONE" name="OTA_HotelAvailSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}OTA_HotelAvailSoapBinding" soapVersion="1_1" anonymous="optional" definition="https://files.developer.sabre.com/wsdl/tpfc/OTA_HotelAvailLLS2.2.1RQ.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://files.developer.sabre.com/wsdl/tpfc/OTA_HotelAvailLLS2.2.1RQ.wsdl"><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/OTA_HotelAvailLLS2.2.1RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="OTA_HotelAvailLLS2.2.1RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="OTA_HotelAvailInput">
    <wsdl:part name="header" element="eb:MessageHeader"/>
    <wsdl:part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:OTA_HotelAvailRQ"/>
  </wsdl:message>
  <wsdl:message name="OTA_HotelAvailOutput">
    <wsdl:part name="header" element="eb:MessageHeader"/>
    <wsdl:part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:OTA_HotelAvailRS"/>
  </wsdl:message>
  <wsdl:portType name="OTA_HotelAvailPortType">
    <wsdl:operation name="OTA_HotelAvailRQ">
      <wsdl:input message="sws:OTA_HotelAvailInput"/>
      <wsdl:output message="sws:OTA_HotelAvailOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OTA_HotelAvailSoapBinding" type="sws:OTA_HotelAvailPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="OTA_HotelAvailRQ">
      <soap:operation soapAction="OTA_HotelAvailLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:OTA_HotelAvailInput" part="header" use="literal"/>
        <soap:header message="sws:OTA_HotelAvailInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:OTA_HotelAvailOutput" part="header" use="literal"/>
        <soap:header message="sws:OTA_HotelAvailOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OTA_HotelAvailService">
    <wsdl:port name="OTA_HotelAvailPortType" binding="sws:OTA_HotelAvailSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/OTA_HotelAvailLLS2.2.1RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="OTA_HotelAvailLLS2.2.1RQ.xsd"/>
  &lt;include schemaLocation="OTA_HotelAvailLLS2.2.1RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/OTA_HotelAvailLLS2.2.1RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="OTA_HotelAvailRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="AvailRequestSegment">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AdditionalAvail" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Customer" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Corporate" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ID" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ID" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Number" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="GuestCounts" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="Count" type="xs:integer" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="HotelSearchCriteria" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Criterion" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Address" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CityName" minOccurs="0" type="xs:string"/>
                                <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                <xs:element name="PostalCode" minOccurs="0" type="xs:string"/>
                                <xs:element name="StreetNmbr" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Award" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Provider" type="xs:string" use="optional"/>
                              <xs:attribute name="Rating" type="xs:integer" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ContactNumbers" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ContactNumber">
                                  <xs:complexType>
                                    <xs:attribute name="Phone" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="CommissionProgram" minOccurs="0" maxOccurs="3" type="xs:string"/>
                          <xs:element name="HotelAmenity" minOccurs="0" maxOccurs="3" type="xs:string"/>
                          <xs:element name="HotelFeature" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="FireSafetyApproved" type="xs:boolean" use="optional"/>
                              <xs:attribute name="AirportTransportation" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="HotelRef" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                              <xs:attribute name="UnitOfMeasure" use="optional">
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:enumeration value="KM"/>
                                    <xs:enumeration value="MI"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="HotelCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                              <xs:attribute name="HotelName" type="xs:string" use="optional"/>
                              <xs:attribute name="Latitude" type="xs:string" use="optional"/>
                              <xs:attribute name="Longitude" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Package" minOccurs="0" maxOccurs="3" type="xs:string"/>
                          <xs:element name="PointOfInterest" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="CountryStateCode" type="xs:string" use="optional"/>
                                  <xs:attribute name="NonUS" type="xs:boolean" use="optional"/>
                                  <xs:attribute name="RPH" type="xs:integer" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PropertyType" minOccurs="0" maxOccurs="3" type="xs:string"/>
                          <xs:element name="RefPoint" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="DistanceDirection" type="xs:string" use="optional"/>
                              <xs:attribute name="GeoCode" type="xs:boolean" use="optional"/>
                              <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Index" use="optional">
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:enumeration value="A"/>
                                    <xs:enumeration value="C"/>
                                    <xs:enumeration value="R"/>
                                    <xs:enumeration value="S"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="Sort" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RoomAmenity" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="NumProperties" type="xs:integer" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="POS" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Source">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="BookingChannel">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CompanyName">
                                  <xs:complexType>
                                    <xs:attribute name="Division" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="RatePlanCandidates" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ContractNegotiatedRateCode" minOccurs="0" maxOccurs="8" type="xs:string"/>
                    <xs:element name="RateAccessCode" minOccurs="0" maxOccurs="3">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="Code" type="xs:string" use="required"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RatePlanCode" minOccurs="0" maxOccurs="3" type="xs:string"/>
                    <xs:element name="RateRange" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                        <xs:attribute name="Max" type="xs:string" use="optional"/>
                        <xs:attribute name="Min" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="PromotionalSpot" use="optional">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="C"/>
                        <xs:enumeration value="L"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="RateAssured" type="xs:boolean" use="optional"/>
                  <xs:attribute name="SuppressRackRate" type="xs:boolean" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="TimeSpan" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="End" type="sws:date" use="required"/>
                  <xs:attribute name="Start" type="sws:date" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.2.1" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be omitted. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/OTA_HotelAvailLLS2.2.1RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="OTA_HotelAvailRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="AdditionalAvail" minOccurs="0">
          <xs:complexType>
            <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="AvailabilityOptions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AvailabilityOption" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="BasicPropertyInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Address" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AddressLine" minOccurs="0" maxOccurs="4" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ContactNumbers" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ContactNumber" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Fax" type="xs:string" use="optional"/>
                                    <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ContractualRateCodeMatch" minOccurs="0" type="xs:string"/>
                          <xs:element name="DirectConnect" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Alt_Avail" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DC_AvailParticipant" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DC_SellParticipant" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="RatesExceedMax" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="UnAvail" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="LocationDescription" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="NegotiatedRateCodeMatch" minOccurs="0" type="xs:string"/>
                          <xs:element name="Property" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Rating" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PropertyOptionInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ADA_Accessible" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="AdultsOnly" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="BeachFront" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Breakfast" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="BusinessCenter" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="BusinessReady" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Conventions" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Dataport" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Dining" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DryClean" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="EcoCertified" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ExecutiveFloors" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FitnessCenter" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FreeLocalCalls" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FreeParking" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FreeShuttle" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FreeWifiInMeetingRooms" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FreeWifiInPublicSpaces" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FreeWifiInRooms" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FullServiceSpa" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="GameFacilities" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Golf" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="HighSpeedInternet" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="HypoallergenicRooms" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="IndoorPool" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="InRoomCoffeeTea" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="InRoomMiniBar" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="InRoomRefrigerator" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="InRoomSafe" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="InteriorDoorways" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Jacuzzi" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="KidsFacilities" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="KitchenFacilities" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="MealService" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="MeetingFacilities" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NoAdultTV" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NonSmoking" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="OutdoorPool" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Pets" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Pool" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PublicTransportationAdjacent" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="RateAssured" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Recreation" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="RestrictedRoomAccess" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="RoomService" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="RoomService24Hours" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="RoomsWithBalcony" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SkiInOutProperty" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SmokeFree" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SmokingRoomsAvail" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Tennis" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="WaterPurificationSystem" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Wheelchair" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RateRange" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Max" type="xs:string" use="optional"/>
                              <xs:attribute name="Min" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RoomRate" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AdditionalInfo" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CancelPolicy" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Option" type="xs:string" use="optional"/>
                                          <xs:attribute name="Numeric" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="HotelRateCode" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                <xs:element name="RateTypeCode" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="GuaranteeSurchargeRequired" type="xs:string" use="optional"/>
                              <xs:attribute name="RateLevelCode" type="xs:string" use="optional"/>
                              <xs:attribute name="XPM_GuaranteeRequired" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="SpecialOffers" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="AreaID" type="xs:string" use="optional"/>
                        <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                        <xs:attribute name="Distance" type="xs:string" use="optional"/>
                        <xs:attribute name="GEO_ConfidenceLevel" type="xs:string" use="optional"/>
                        <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                        <xs:attribute name="HotelCityCode" type="xs:string" use="optional"/>
                        <xs:attribute name="HotelName" type="xs:string" use="optional"/>
                        <xs:attribute name="Latitude" type="xs:string" use="optional"/>
                        <xs:attribute name="Longitude" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CityList" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Line" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="CountryStateCode" type="xs:string" use="optional"/>
                  <xs:attribute name="Latitude" type="xs:string" use="optional"/>
                  <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                  <xs:attribute name="Longitude" type="xs:string" use="optional"/>
                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	 Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation id="d457e313-83dd-437e-a39e-fae4ed17c3d7" isOneWay="false" action="OTA_HotelAvailLLSRQ" name="OTA_HotelAvailRQ" bindingOperationName="OTA_HotelAvailRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7c8e7d20-4de6-4fae-8e2a-2855600a9c20" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:mes="http://www.ebxml.org/namespaces/messageHeader" xmlns:ns="http://webservices.sabre.com/sabreXML/2011/10">\r
   <soapenv:Header>\r
      <sec:Security>\r
         <!--Optional:-->\r
         <sec:UsernameToken>\r
            <!--Optional:-->\r
            <sec:Username>?</sec:Username>\r
            <!--Optional:-->\r
            <sec:Password>?</sec:Password>\r
            <!--0 to 2 repetitions:-->\r
            <sec:NewPassword>?</sec:NewPassword>\r
            <!--Optional:-->\r
            <Organization>?</Organization>\r
            <!--Optional:-->\r
            <Domain>?</Domain>\r
         </sec:UsernameToken>\r
         <!--Optional:-->\r
         <sec:SabreAth>?</sec:SabreAth>\r
         <!--Optional:-->\r
         <sec:BinarySecurityToken>?</sec:BinarySecurityToken>\r
      </sec:Security>\r
      <mes:MessageHeader mes:id="?" mes:version="?">\r
         <mes:From>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:From>\r
         <mes:To>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:To>\r
         <mes:CPAId>?</mes:CPAId>\r
         <mes:ConversationId>?</mes:ConversationId>\r
         <mes:Service mes:type="?">?</mes:Service>\r
         <mes:Action>?</mes:Action>\r
         <mes:MessageData>\r
            <mes:MessageId>?</mes:MessageId>\r
            <mes:Timestamp>?</mes:Timestamp>\r
            <!--Optional:-->\r
            <mes:RefToMessageId>?</mes:RefToMessageId>\r
            <!--Optional:-->\r
            <mes:TimeToLive>?</mes:TimeToLive>\r
            <!--Optional:-->\r
            <mes:Timeout>?</mes:Timeout>\r
         </mes:MessageData>\r
         <!--Optional:-->\r
         <mes:DuplicateElimination>?</mes:DuplicateElimination>\r
         <!--Zero or more repetitions:-->\r
         <mes:Description xml:lang="?">?</mes:Description>\r
         <!--You may enter ANY elements at this point-->\r
      </mes:MessageHeader>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <ns:OTA_HotelAvailRQ ReturnHostCommand="?" TimeStamp="?" Version="2.2.1">\r
         <ns:AvailRequestSegment>\r
            <!--Optional:-->\r
            <ns:AdditionalAvail Ind="?"/>\r
            <!--Optional:-->\r
            <ns:Customer>\r
               <!--Optional:-->\r
               <ns:Corporate>\r
                  <ns:ID>?</ns:ID>\r
               </ns:Corporate>\r
               <!--Optional:-->\r
               <ns:ID>\r
                  <ns:Number>?</ns:Number>\r
               </ns:ID>\r
            </ns:Customer>\r
            <!--Optional:-->\r
            <ns:GuestCounts Count="?"/>\r
            <!--Optional:-->\r
            <ns:HotelSearchCriteria NumProperties="?">\r
               <!--Optional:-->\r
               <ns:Criterion>\r
                  <!--Optional:-->\r
                  <ns:Address>\r
                     <!--Optional:-->\r
                     <ns:CityName>?</ns:CityName>\r
                     <!--Optional:-->\r
                     <ns:CountryCode>?</ns:CountryCode>\r
                     <!--Optional:-->\r
                     <ns:PostalCode>?</ns:PostalCode>\r
                     <!--Optional:-->\r
                     <ns:StreetNmbr>?</ns:StreetNmbr>\r
                  </ns:Address>\r
                  <!--Optional:-->\r
                  <ns:Award Provider="?" Rating="?"/>\r
                  <!--Zero or more repetitions:-->\r
                  <ns:ContactNumbers>\r
                     <ns:ContactNumber Phone="?"/>\r
                  </ns:ContactNumbers>\r
                  <!--0 to 3 repetitions:-->\r
                  <ns:CommissionProgram>?</ns:CommissionProgram>\r
                  <!--0 to 3 repetitions:-->\r
                  <ns:HotelAmenity>?</ns:HotelAmenity>\r
                  <!--Optional:-->\r
                  <ns:HotelFeature FireSafetyApproved="?" AirportTransportation="?"/>\r
                  <!--Zero or more repetitions:-->\r
                  <ns:HotelRef ChainCode="?" UnitOfMeasure="?" HotelCityCode="?" HotelCode="?" HotelName="?" Latitude="?" Longitude="?"/>\r
                  <!--0 to 3 repetitions:-->\r
                  <ns:Package>?</ns:Package>\r
                  <!--Optional:-->\r
                  <ns:PointOfInterest CountryStateCode="?" NonUS="?" RPH="?">?</ns:PointOfInterest>\r
                  <!--0 to 3 repetitions:-->\r
                  <ns:PropertyType>?</ns:PropertyType>\r
                  <!--Zero or more repetitions:-->\r
                  <ns:RefPoint DistanceDirection="?" GeoCode="?" HotelCode="?" Index="?" Sort="?"/>\r
                  <!--Zero or more repetitions:-->\r
                  <ns:RoomAmenity>?</ns:RoomAmenity>\r
               </ns:Criterion>\r
            </ns:HotelSearchCriteria>\r
            <!--Optional:-->\r
            <ns:POS>\r
               <ns:Source>\r
                  <ns:BookingChannel>\r
                     <ns:CompanyName Division="?"/>\r
                  </ns:BookingChannel>\r
               </ns:Source>\r
            </ns:POS>\r
            <!--Optional:-->\r
            <ns:RatePlanCandidates PromotionalSpot="?" RateAssured="?" SuppressRackRate="?">\r
               <!--0 to 8 repetitions:-->\r
               <ns:ContractNegotiatedRateCode>?</ns:ContractNegotiatedRateCode>\r
               <!--0 to 3 repetitions:-->\r
               <ns:RateAccessCode Code="?">?</ns:RateAccessCode>\r
               <!--0 to 3 repetitions:-->\r
               <ns:RatePlanCode>?</ns:RatePlanCode>\r
               <!--Optional:-->\r
               <ns:RateRange CurrencyCode="?" Max="?" Min="?"/>\r
            </ns:RatePlanCandidates>\r
            <!--Optional:-->\r
            <ns:TimeSpan End="?" Start="?"/>\r
         </ns:AvailRequestSegment>\r
      </ns:OTA_HotelAvailRQ>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA_HotelAvailLLSRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="2dcf739c-a586-4ad2-9de0-fb2fc3adc234" wsaVersion="NONE" name="HotelPropertyDescriptionSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}HotelPropertyDescriptionSoapBinding" soapVersion="1_1" anonymous="optional" definition="https://files.developer.sabre.com/wsdl/tpfc/HotelPropertyDescriptionLLS2.3.0RQ.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://files.developer.sabre.com/wsdl/tpfc/HotelPropertyDescriptionLLS2.3.0RQ.wsdl"><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/HotelPropertyDescriptionLLS2.3.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="HotelPropertyDescriptionLLS2.3.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="HotelPropertyDescriptionInput">
    <wsdl:part name="header" element="eb:MessageHeader"/>
    <wsdl:part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:HotelPropertyDescriptionRQ"/>
  </wsdl:message>
  <wsdl:message name="HotelPropertyDescriptionOutput">
    <wsdl:part name="header" element="eb:MessageHeader"/>
    <wsdl:part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:HotelPropertyDescriptionRS"/>
  </wsdl:message>
  <wsdl:portType name="HotelPropertyDescriptionPortType">
    <wsdl:operation name="HotelPropertyDescriptionRQ">
      <wsdl:input message="sws:HotelPropertyDescriptionInput"/>
      <wsdl:output message="sws:HotelPropertyDescriptionOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HotelPropertyDescriptionSoapBinding" type="sws:HotelPropertyDescriptionPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="HotelPropertyDescriptionRQ">
      <soap:operation soapAction="HotelPropertyDescriptionLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:HotelPropertyDescriptionInput" part="header" use="literal"/>
        <soap:header message="sws:HotelPropertyDescriptionInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:HotelPropertyDescriptionOutput" part="header" use="literal"/>
        <soap:header message="sws:HotelPropertyDescriptionOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HotelPropertyDescriptionService">
    <wsdl:port name="HotelPropertyDescriptionPortType" binding="sws:HotelPropertyDescriptionSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/HotelPropertyDescriptionLLS2.3.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="HotelPropertyDescriptionLLS2.3.0RQ.xsd"/>
  &lt;include schemaLocation="HotelPropertyDescriptionLLS2.3.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/HotelPropertyDescriptionLLS2.3.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="HotelPropertyDescriptionRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="AvailRequestSegment">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Customer" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Corporate" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ID" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CustLoyalty" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="MembershipID" type="xs:string" use="required"/>
                        <xs:attribute name="ProgramID" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ID" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Number" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="GuestCounts" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="Count" type="xs:integer" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="HotelSearchCriteria" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Criterion">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="HotelRef">
                            <xs:complexType>
                              <xs:attribute name="HotelCode" type="xs:string" use="required"/>
                              <xs:attribute name="UnitOfMeasure" use="optional">
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:enumeration value="KM"/>
                                    <xs:enumeration value="MI"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="POS" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Source">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="CompanyName">
                            <xs:complexType>
                              <xs:attribute name="Division" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="RatePlanCandidates" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ContractNegotiatedRateCode" minOccurs="0" maxOccurs="8" type="xs:string"/>
                    <xs:element name="RateAccessCode" minOccurs="0" maxOccurs="3">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="Code" type="xs:string" use="required"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RatePlanCode" minOccurs="0" maxOccurs="3" type="xs:string"/>
                    <xs:element name="RateRange" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                        <xs:attribute name="Max" type="xs:string" use="optional"/>
                        <xs:attribute name="Min" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="AdditionalRateInfo" type="xs:boolean" use="optional"/>
                  <xs:attribute name="NoRateList" type="xs:boolean" use="optional"/>
                  <xs:attribute name="RateList" type="xs:boolean" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="TimeSpan" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="End" type="sws:date" use="required"/>
                  <xs:attribute name="Start" type="sws:date" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.3.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be omitted. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/HotelPropertyDescriptionLLS2.3.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="HotelPropertyDescriptionRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="AlternateAvailability" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BasicPropertyInfo" minOccurs="0" maxOccurs="5">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                  </xs:sequence>
                  <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RoomStay" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BasicPropertyInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Address" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AddressLine" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                          <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Awards" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AwardProvider" minOccurs="0" maxOccurs="5" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CheckInTime" minOccurs="0" type="sws:time"/>
                    <xs:element name="CheckOutTime" minOccurs="0" type="sws:time"/>
                    <xs:element name="ContactNumbers" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ContactNumber" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Fax" type="xs:string" use="optional"/>
                              <xs:attribute name="Phone" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="DirectConnect" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AdditionalData" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="CurrencyConverted" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="DC_AvailParticipant" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="DC_SellParticipant" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RequestFail" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="UnAvail" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="IndexData" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Index" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="CalculatedDistance" type="xs:string" use="optional"/>
                              <xs:attribute name="CountryState" type="xs:string" use="optional"/>
                              <xs:attribute name="DistanceDirection" type="xs:string" use="optional"/>
                              <xs:attribute name="Latitude" type="xs:string" use="optional"/>
                              <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Longitude" type="xs:string" use="optional"/>
                              <xs:attribute name="Point" type="xs:string" use="optional"/>
                              <xs:attribute name="TransportationCode" type="xs:string" use="optional"/>
                              <xs:attribute name="UnitOfMeasure" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PropertyOptionInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ADA_Accessible" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="AdultsOnly" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="AirportShuttle" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BeachFront" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Breakfast" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BusinessCenter" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BusinessReady" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="CarRentalCounter" minOccurs="0" type="xs:string"/>
                          <xs:element name="Conventions" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Dataport" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Dining" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="DryClean" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="EcoCertified" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ExecutiveFloors" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FamilyPlan" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FitnessCenter" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeLocalCalls" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeParking" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeShuttle" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeWifiInMeetingRooms" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeWifiInPublicSpaces" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeWifiInRooms" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FullServiceSpa" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="GameFacilities" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Golf" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="GovtSafetyFire" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="HighSpeedInternet" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="HypoallergenicRooms" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="IndoorPool" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="IndPetRestriction" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InRoomCoffeeTea" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InRoomMiniBar" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InRoomRefrigerator" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InRoomSafe" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InteriorDoorways" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Jacuzzi" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="KidsFacilities" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="KitchenFacilities" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MealService" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MeetingFacilities" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="NoAdultTV" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="NonSmoking" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="OutdoorPool" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Parking" minOccurs="0" type="xs:string"/>
                          <xs:element name="Pets" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Pool" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PublicTransportationAdjacent" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Recreation" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RestrictedRoomAccess" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RoomService" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RoomService24Hours" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RoomsWithBalcony" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="SkiInOutProperty" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="SmokeFree" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="SmokingRoomsAvail" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Tennis" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="WaterPurificationSystem" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Wheelchair" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PropertyTypeInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AllInclusive" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Apartments" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BedBreakfast" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Castle" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Conventions" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Economy" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ExtendedStay" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Farm" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="First" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Luxury" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Moderate" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Motel" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Resort" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Suites" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="SpecialOffers" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Text" minOccurs="0" maxOccurs="2" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Taxes" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Text" minOccurs="0" maxOccurs="3" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="VendorMessages" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AdditionalAttractions" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Attractions" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Awards" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Cancellation" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Deposit" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Description" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Dining" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Directions" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Facilities" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Guarantee" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Location" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MarketingInformation" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MiscServices" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Policies" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Recreation" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Rooms" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Safety" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Services" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Transportation" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                  <xs:attribute name="GeoConfidenceLevel" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelCityCode" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelName" type="xs:string" use="optional"/>
                  <xs:attribute name="Latitude" type="xs:string" use="optional"/>
                  <xs:attribute name="Longitude" type="xs:string" use="optional"/>
                  <xs:attribute name="NumFloors" type="xs:string" use="optional"/>
                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Guarantee" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="DepositsAccepted" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="PaymentCard" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="GuaranteesAccepted" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="PaymentCard" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="LongSellTimeIdentifier" minOccurs="0" type="xs:string"/>
              <xs:element name="RoomRates" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="RateList" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Rate" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="Description" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RoomRate" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AdditionalInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CancelPolicy" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Numeric" type="xs:string" use="optional"/>
                                    <xs:attribute name="Option" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Commission" minOccurs="0">
                                  <xs:complexType>
                                    <xs:simpleContent>
                                      <xs:extension base="xs:string">
                                        <xs:attribute name="NonCommission" type="xs:boolean" use="optional"/>
                                      </xs:extension>
                                    </xs:simpleContent>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Cancellation" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Deposit" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Guarantee" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Other" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PaymentCard" minOccurs="0" maxOccurs="10">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Taxes" minOccurs="0" type="xs:string"/>
                                <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="HotelRateCode" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                          <xs:element name="Rates" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Rate" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AdditionalGuestAmounts" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="AdditionalGuestAmount" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Charges" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="AdultRollAway" type="xs:string" use="optional"/>
                                                      <xs:attribute name="ChildRollaway" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Crib" type="xs:string" use="optional"/>
                                                      <xs:attribute name="ExtraPerson" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="MaxExtraPersonsAllowed" type="xs:string" use="optional"/>
                                                <xs:attribute name="NumAdults" type="xs:string" use="optional"/>
                                                <xs:attribute name="NumChildren" type="xs:string" use="optional"/>
                                                <xs:attribute name="NumCribs" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="HotelTotalPricing" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Disclaimer" minOccurs="0" maxOccurs="2" type="xs:string"/>
                                            <xs:element name="RateRange" minOccurs="0" maxOccurs="8">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="EffectiveDate" type="sws:date" use="optional"/>
                                                <xs:attribute name="ExpireDate" type="sws:date" use="optional"/>
                                                <xs:attribute name="Surcharges" type="xs:string" use="optional"/>
                                                <xs:attribute name="Taxes" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TotalSurcharges" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="SurchargeFour" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="SurchargeOne" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="SurchargeThree" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="SurchargeTwo" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="4" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TotalTaxes" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Tax" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="TaxFieldOne" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="TaxFieldThree" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="TaxFieldTwo" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="4" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="RateRange" minOccurs="0" maxOccurs="3">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="EffectiveDate" type="sws:date" use="optional"/>
                                          <xs:attribute name="ExpireDate" type="sws:date" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="ChangeIndicator" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="HighRate" type="xs:string" use="optional"/>
                                    <xs:attribute name="HRD_RequiredForSell" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="PackageIndicator" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="RateConversionInd" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="ReturnOfRateInd" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="RoomOnRequest" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="RoomLocationCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="RoomTypeCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="AdvanceReservationPeriod" type="xs:string" use="optional"/>
                        <xs:attribute name="ClientID" type="xs:string" use="optional"/>
                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                        <xs:attribute name="DirectConnect" type="xs:boolean" use="optional"/>
                        <xs:attribute name="GuaranteedRateProgram" type="xs:boolean" use="optional"/>
                        <xs:attribute name="GuaranteeSurchargeRequired" type="xs:string" use="optional"/>
                        <xs:attribute name="IATA_CharacteristicIdentification" type="xs:string" use="optional"/>
                        <xs:attribute name="IATA_ProductIdentification" type="xs:string" use="optional"/>
                        <xs:attribute name="LowInventoryThreshold" type="xs:boolean" use="optional"/>
                        <xs:attribute name="RateAccessCode" type="xs:string" use="optional"/>
                        <xs:attribute name="RateCategory" type="xs:string" use="optional"/>
                        <xs:attribute name="RateChangeInd" type="xs:boolean" use="optional"/>
                        <xs:attribute name="RateConversionInd" type="xs:boolean" use="optional"/>
                        <xs:attribute name="RateLevelCode" type="xs:string" use="optional"/>
                        <xs:attribute name="RoomLocationCode" type="xs:string" use="optional"/>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                        <xs:attribute name="SpecialOffer" type="xs:boolean" use="optional"/>
                        <xs:attribute name="XPM_GuaranteeRequired" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="TimeSpan" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="Duration" type="xs:string" use="optional"/>
                  <xs:attribute name="End" type="sws:date" use="optional"/>
                  <xs:attribute name="Start" type="sws:date" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	 Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation id="9b09710c-178c-4e6a-992a-fdb37266d074" isOneWay="false" action="HotelPropertyDescriptionLLSRQ" name="HotelPropertyDescriptionRQ" bindingOperationName="HotelPropertyDescriptionRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="7aa2fc98-f00a-4993-b4bd-3b237d0355b6" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:mes="http://www.ebxml.org/namespaces/messageHeader" xmlns:ns="http://webservices.sabre.com/sabreXML/2011/10">\r
   <soapenv:Header>\r
      <sec:Security>\r
         <!--Optional:-->\r
         <sec:UsernameToken>\r
            <!--Optional:-->\r
            <sec:Username>?</sec:Username>\r
            <!--Optional:-->\r
            <sec:Password>?</sec:Password>\r
            <!--0 to 2 repetitions:-->\r
            <sec:NewPassword>?</sec:NewPassword>\r
            <!--Optional:-->\r
            <Organization>?</Organization>\r
            <!--Optional:-->\r
            <Domain>?</Domain>\r
         </sec:UsernameToken>\r
         <!--Optional:-->\r
         <sec:SabreAth>?</sec:SabreAth>\r
         <!--Optional:-->\r
         <sec:BinarySecurityToken>?</sec:BinarySecurityToken>\r
      </sec:Security>\r
      <mes:MessageHeader mes:id="?" mes:version="?">\r
         <mes:From>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:From>\r
         <mes:To>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:To>\r
         <mes:CPAId>?</mes:CPAId>\r
         <mes:ConversationId>?</mes:ConversationId>\r
         <mes:Service mes:type="?">?</mes:Service>\r
         <mes:Action>?</mes:Action>\r
         <mes:MessageData>\r
            <mes:MessageId>?</mes:MessageId>\r
            <mes:Timestamp>?</mes:Timestamp>\r
            <!--Optional:-->\r
            <mes:RefToMessageId>?</mes:RefToMessageId>\r
            <!--Optional:-->\r
            <mes:TimeToLive>?</mes:TimeToLive>\r
            <!--Optional:-->\r
            <mes:Timeout>?</mes:Timeout>\r
         </mes:MessageData>\r
         <!--Optional:-->\r
         <mes:DuplicateElimination>?</mes:DuplicateElimination>\r
         <!--Zero or more repetitions:-->\r
         <mes:Description xml:lang="?">?</mes:Description>\r
         <!--You may enter ANY elements at this point-->\r
      </mes:MessageHeader>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <ns:HotelPropertyDescriptionRQ ReturnHostCommand="?" TimeStamp="?" Version="2.3.0">\r
         <ns:AvailRequestSegment>\r
            <!--Optional:-->\r
            <ns:Customer>\r
               <!--Optional:-->\r
               <ns:Corporate>\r
                  <ns:ID>?</ns:ID>\r
               </ns:Corporate>\r
               <!--Optional:-->\r
               <ns:CustLoyalty MembershipID="?" ProgramID="?"/>\r
               <!--Optional:-->\r
               <ns:ID>\r
                  <ns:Number>?</ns:Number>\r
               </ns:ID>\r
            </ns:Customer>\r
            <!--Optional:-->\r
            <ns:GuestCounts Count="?"/>\r
            <!--Optional:-->\r
            <ns:HotelSearchCriteria>\r
               <ns:Criterion>\r
                  <ns:HotelRef HotelCode="?" UnitOfMeasure="?"/>\r
               </ns:Criterion>\r
            </ns:HotelSearchCriteria>\r
            <!--Optional:-->\r
            <ns:POS>\r
               <ns:Source>\r
                  <ns:CompanyName Division="?"/>\r
               </ns:Source>\r
            </ns:POS>\r
            <!--Optional:-->\r
            <ns:RatePlanCandidates AdditionalRateInfo="?" NoRateList="?" RateList="?">\r
               <!--0 to 8 repetitions:-->\r
               <ns:ContractNegotiatedRateCode>?</ns:ContractNegotiatedRateCode>\r
               <!--0 to 3 repetitions:-->\r
               <ns:RateAccessCode Code="?">?</ns:RateAccessCode>\r
               <!--0 to 3 repetitions:-->\r
               <ns:RatePlanCode>?</ns:RatePlanCode>\r
               <!--Optional:-->\r
               <ns:RateRange CurrencyCode="?" Max="?" Min="?"/>\r
            </ns:RatePlanCandidates>\r
            <!--Optional:-->\r
            <ns:TimeSpan End="?" Start="?"/>\r
         </ns:AvailRequestSegment>\r
      </ns:HotelPropertyDescriptionRQ>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="HotelPropertyDescriptionLLSRQ"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="89a73e32-9e08-46c1-a3bf-5748d7a564cf" wsaVersion="NONE" name="HotelRateDescriptionSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}HotelRateDescriptionSoapBinding" soapVersion="1_1" anonymous="optional" definition="https://files.developer.sabre.com/wsdl/tpfc/HotelRateDescriptionLLS2.3.0RQ.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://files.developer.sabre.com/wsdl/tpfc/HotelRateDescriptionLLS2.3.0RQ.wsdl"><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/HotelRateDescriptionLLS2.3.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="HotelRateDescriptionLLS2.3.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="HotelRateDescriptionInput">
    <wsdl:part name="header" element="eb:MessageHeader"/>
    <wsdl:part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:HotelRateDescriptionRQ"/>
  </wsdl:message>
  <wsdl:message name="HotelRateDescriptionOutput">
    <wsdl:part name="header" element="eb:MessageHeader"/>
    <wsdl:part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:HotelRateDescriptionRS"/>
  </wsdl:message>
  <wsdl:portType name="HotelRateDescriptionPortType">
    <wsdl:operation name="HotelRateDescriptionRQ">
      <wsdl:input message="sws:HotelRateDescriptionInput"/>
      <wsdl:output message="sws:HotelRateDescriptionOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HotelRateDescriptionSoapBinding" type="sws:HotelRateDescriptionPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="HotelRateDescriptionRQ">
      <soap:operation soapAction="HotelRateDescriptionLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:HotelRateDescriptionInput" part="header" use="literal"/>
        <soap:header message="sws:HotelRateDescriptionInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:HotelRateDescriptionOutput" part="header" use="literal"/>
        <soap:header message="sws:HotelRateDescriptionOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HotelRateDescriptionService">
    <wsdl:port name="HotelRateDescriptionPortType" binding="sws:HotelRateDescriptionSoapBinding">
      <soap:address location="https://sws-crt.cert.sabre.com/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/HotelRateDescriptionLLS2.3.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="HotelRateDescriptionLLS2.3.0RQ.xsd"/>
  &lt;include schemaLocation="HotelRateDescriptionLLS2.3.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/HotelRateDescriptionLLS2.3.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="HotelRateDescriptionRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="AvailRequestSegment">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GuestCounts" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="Count" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="HotelSearchCriteria" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Criterion">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="HotelRef">
                            <xs:complexType>
                              <xs:attribute name="HotelCode" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="POS" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Source">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="BookingChannel">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CompanyName">
                                  <xs:complexType>
                                    <xs:attribute name="Division" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="RatePlanCandidates" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="RatePlanCandidate">
                      <xs:complexType>
                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                        <xs:attribute name="DCA_ProductCode" type="xs:string" use="optional"/>
                        <xs:attribute name="DecodeAll" type="xs:boolean" use="optional"/>
                        <xs:attribute name="RateCode" type="xs:string" use="optional"/>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="TimeSpan" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="End" type="sws:date" use="required"/>
                  <xs:attribute name="Start" type="sws:date" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.3.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be omitted. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/HotelRateDescriptionLLS2.3.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="HotelRateDescriptionRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="RoomStay" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BasicPropertyInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Address" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AddressLine" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                          <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Awards" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AwardProvider" minOccurs="0" maxOccurs="5" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CheckInTime" minOccurs="0" type="sws:time"/>
                    <xs:element name="CheckOutTime" minOccurs="0" type="sws:time"/>
                    <xs:element name="ContactNumbers" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ContactNumber" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Fax" type="xs:string" use="optional"/>
                              <xs:attribute name="Phone" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="DirectConnect" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AdditionalData" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="CurrencyConverted" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="DC_AvailParticipant" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="DC_SellParticipant" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RequestFail" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="UnAvail" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="IndexData" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Index" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="CalculatedDistance" type="xs:string" use="optional"/>
                              <xs:attribute name="CountryState" type="xs:string" use="optional"/>
                              <xs:attribute name="DistanceDirection" type="xs:string" use="optional"/>
                              <xs:attribute name="Latitude" type="xs:string" use="optional"/>
                              <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Longitude" type="xs:string" use="optional"/>
                              <xs:attribute name="Point" type="xs:string" use="optional"/>
                              <xs:attribute name="TransportationCode" type="xs:string" use="optional"/>
                              <xs:attribute name="UnitOfMeasure" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PropertyOptionInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ADA_Accessible" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="AdultsOnly" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="AirportShuttle" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BeachFront" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Breakfast" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BusinessCenter" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BusinessReady" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="CarRentalCounter" minOccurs="0" type="xs:string"/>
                          <xs:element name="Conventions" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Dataport" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Dining" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="DryClean" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="EcoCertified" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ExecutiveFloors" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FamilyPlan" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FitnessCenter" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeLocalCalls" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeParking" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeShuttle" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeWifiInMeetingRooms" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeWifiInPublicSpaces" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FreeWifiInRooms" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FullServiceSpa" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="GameFacilities" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Golf" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="GovtSafetyFire" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="HighSpeedInternet" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="HypoallergenicRooms" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="IndoorPool" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="IndPetRestriction" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InRoomCoffeeTea" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InRoomMiniBar" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InRoomRefrigerator" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InRoomSafe" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="InteriorDoorways" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Jacuzzi" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="KidsFacilities" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="KitchenFacilities" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MealService" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MeetingFacilities" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="NoAdultTV" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="NonSmoking" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="OutdoorPool" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Parking" minOccurs="0" type="xs:string"/>
                          <xs:element name="Pets" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Pool" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PublicTransportationAdjacent" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Recreation" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RestrictedRoomAccess" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RoomService" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RoomService24Hours" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="RoomsWithBalcony" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="SkiInOutProperty" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="SmokeFree" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="SmokingRoomsAvail" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Tennis" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="WaterPurificationSystem" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Wheelchair" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PropertyTypeInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AllInclusive" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Apartments" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BedBreakfast" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Castle" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Conventions" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Economy" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ExtendedStay" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Farm" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="First" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Luxury" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Moderate" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Motel" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Resort" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Suites" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="SpecialOffers" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Text" minOccurs="0" maxOccurs="2" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Taxes" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Text" minOccurs="0" maxOccurs="3" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="VendorMessages" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AdditionalAttractions" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Attractions" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Awards" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Cancellation" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Deposit" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Description" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Dining" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Directions" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Facilities" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Guarantee" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Location" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MarketingInformation" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MiscServices" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Policies" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Recreation" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Rooms" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Safety" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Services" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Transportation" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence minOccurs="0" maxOccurs="unbounded">
                                <xs:element name="Text" minOccurs="0" maxOccurs="1" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                  <xs:attribute name="GeoConfidenceLevel" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelCityCode" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                  <xs:attribute name="HotelName" type="xs:string" use="optional"/>
                  <xs:attribute name="Latitude" type="xs:string" use="optional"/>
                  <xs:attribute name="Longitude" type="xs:string" use="optional"/>
                  <xs:attribute name="NumFloors" type="xs:string" use="optional"/>
                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Guarantee" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="DepositsAccepted" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="PaymentCard" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="GuaranteesAccepted" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="PaymentCard" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="LongSellTimeIdentifier" minOccurs="0" type="xs:string"/>
              <xs:element name="RoomRates" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="RateList" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Rate" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="Description" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RoomRate" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AdditionalInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CancelPolicy" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Numeric" type="xs:string" use="optional"/>
                                    <xs:attribute name="Option" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Commission" minOccurs="0">
                                  <xs:complexType>
                                    <xs:simpleContent>
                                      <xs:extension base="xs:string">
                                        <xs:attribute name="NonCommission" type="xs:boolean" use="optional"/>
                                      </xs:extension>
                                    </xs:simpleContent>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Cancellation" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Deposit" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Guarantee" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DCA_Other" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PaymentCard" minOccurs="0" maxOccurs="10">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Taxes" minOccurs="0" type="xs:string"/>
                                <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="HotelRateCode" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                          <xs:element name="Rates" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Rate" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AdditionalGuestAmounts" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="AdditionalGuestAmount" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Charges" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="AdultRollAway" type="xs:string" use="optional"/>
                                                      <xs:attribute name="ChildRollaway" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Crib" type="xs:string" use="optional"/>
                                                      <xs:attribute name="ExtraPerson" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="MaxExtraPersonsAllowed" type="xs:string" use="optional"/>
                                                <xs:attribute name="NumAdults" type="xs:string" use="optional"/>
                                                <xs:attribute name="NumChildren" type="xs:string" use="optional"/>
                                                <xs:attribute name="NumCribs" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="HotelTotalPricing" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Disclaimer" minOccurs="0" maxOccurs="2" type="xs:string"/>
                                            <xs:element name="RateRange" minOccurs="0" maxOccurs="8">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="EffectiveDate" type="sws:date" use="optional"/>
                                                <xs:attribute name="ExpireDate" type="sws:date" use="optional"/>
                                                <xs:attribute name="Surcharges" type="xs:string" use="optional"/>
                                                <xs:attribute name="Taxes" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TotalSurcharges" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="SurchargeFour" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="SurchargeOne" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="SurchargeThree" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="SurchargeTwo" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="4" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TotalTaxes" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Tax" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="TaxFieldOne" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="TaxFieldThree" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="TaxFieldTwo" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="4" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="RateRange" minOccurs="0" maxOccurs="3">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="EffectiveDate" type="sws:date" use="optional"/>
                                          <xs:attribute name="ExpireDate" type="sws:date" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="ChangeIndicator" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="HighRate" type="xs:string" use="optional"/>
                                    <xs:attribute name="HRD_RequiredForSell" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="PackageIndicator" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="RateConversionInd" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="ReturnOfRateInd" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="RoomOnRequest" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="RoomLocationCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="RoomTypeCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="AdvanceReservationPeriod" type="xs:string" use="optional"/>
                        <xs:attribute name="ClientID" type="xs:string" use="optional"/>
                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                        <xs:attribute name="DirectConnect" type="xs:boolean" use="optional"/>
                        <xs:attribute name="GuaranteedRateProgram" type="xs:boolean" use="optional"/>
                        <xs:attribute name="GuaranteeSurchargeRequired" type="xs:string" use="optional"/>
                        <xs:attribute name="HRD_RequiredForSell" type="xs:boolean" use="optional"/>
                        <xs:attribute name="IATA_CharacteristicIdentification" type="xs:string" use="optional"/>
                        <xs:attribute name="IATA_ProductIdentification" type="xs:string" use="optional"/>
                        <xs:attribute name="LowInventoryThreshold" type="xs:boolean" use="optional"/>
                        <xs:attribute name="RateAccessCode" type="xs:string" use="optional"/>
                        <xs:attribute name="RateCategory" type="xs:string" use="optional"/>
                        <xs:attribute name="RateChangeInd" type="xs:boolean" use="optional"/>
                        <xs:attribute name="RateConversionInd" type="xs:boolean" use="optional"/>
                        <xs:attribute name="RateLevelCode" type="xs:string" use="optional"/>
                        <xs:attribute name="RoomLocationCode" type="xs:string" use="optional"/>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                        <xs:attribute name="SpecialOffer" type="xs:boolean" use="optional"/>
                        <xs:attribute name="XPM_GuaranteeRequired" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="TimeSpan" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="Duration" type="xs:string" use="optional"/>
                  <xs:attribute name="End" type="sws:date" use="optional"/>
                  <xs:attribute name="Start" type="sws:date" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	 Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://wsdl-crt.cert.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint></con:endpoints><con:operation id="eb729235-ae44-45a5-9dfb-c6b23a6e0f5c" isOneWay="false" action="HotelRateDescriptionLLSRQ" name="HotelRateDescriptionRQ" bindingOperationName="HotelRateDescriptionRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="268e844f-eca8-4c0d-84a4-656bf36aa346" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:mes="http://www.ebxml.org/namespaces/messageHeader" xmlns:ns="http://webservices.sabre.com/sabreXML/2011/10">\r
   <soapenv:Header>\r
      <sec:Security>\r
         <!--Optional:-->\r
         <sec:UsernameToken>\r
            <!--Optional:-->\r
            <sec:Username>?</sec:Username>\r
            <!--Optional:-->\r
            <sec:Password>?</sec:Password>\r
            <!--0 to 2 repetitions:-->\r
            <sec:NewPassword>?</sec:NewPassword>\r
            <!--Optional:-->\r
            <Organization>?</Organization>\r
            <!--Optional:-->\r
            <Domain>?</Domain>\r
         </sec:UsernameToken>\r
         <!--Optional:-->\r
         <sec:SabreAth>?</sec:SabreAth>\r
         <!--Optional:-->\r
         <sec:BinarySecurityToken>?</sec:BinarySecurityToken>\r
      </sec:Security>\r
      <mes:MessageHeader mes:id="?" mes:version="?">\r
         <mes:From>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:From>\r
         <mes:To>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:To>\r
         <mes:CPAId>?</mes:CPAId>\r
         <mes:ConversationId>?</mes:ConversationId>\r
         <mes:Service mes:type="?">?</mes:Service>\r
         <mes:Action>?</mes:Action>\r
         <mes:MessageData>\r
            <mes:MessageId>?</mes:MessageId>\r
            <mes:Timestamp>?</mes:Timestamp>\r
            <!--Optional:-->\r
            <mes:RefToMessageId>?</mes:RefToMessageId>\r
            <!--Optional:-->\r
            <mes:TimeToLive>?</mes:TimeToLive>\r
            <!--Optional:-->\r
            <mes:Timeout>?</mes:Timeout>\r
         </mes:MessageData>\r
         <!--Optional:-->\r
         <mes:DuplicateElimination>?</mes:DuplicateElimination>\r
         <!--Zero or more repetitions:-->\r
         <mes:Description xml:lang="?">?</mes:Description>\r
         <!--You may enter ANY elements at this point-->\r
      </mes:MessageHeader>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <ns:HotelRateDescriptionRQ ReturnHostCommand="?" TimeStamp="?" Version="2.3.0">\r
         <ns:AvailRequestSegment>\r
            <!--Optional:-->\r
            <ns:GuestCounts Count="?"/>\r
            <!--Optional:-->\r
            <ns:HotelSearchCriteria>\r
               <ns:Criterion>\r
                  <ns:HotelRef HotelCode="?"/>\r
               </ns:Criterion>\r
            </ns:HotelSearchCriteria>\r
            <!--Optional:-->\r
            <ns:POS>\r
               <ns:Source>\r
                  <ns:BookingChannel>\r
                     <ns:CompanyName Division="?"/>\r
                  </ns:BookingChannel>\r
               </ns:Source>\r
            </ns:POS>\r
            <!--Optional:-->\r
            <ns:RatePlanCandidates>\r
               <ns:RatePlanCandidate CurrencyCode="?" DCA_ProductCode="?" DecodeAll="?" RateCode="?" RPH="?"/>\r
            </ns:RatePlanCandidates>\r
            <!--Optional:-->\r
            <ns:TimeSpan End="?" Start="?"/>\r
         </ns:AvailRequestSegment>\r
      </ns:HotelRateDescriptionRQ>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="HotelRateDescriptionLLSRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="a36ad3c0-a549-408e-80b0-6a18aa6abd15" wsaVersion="NONE" name="PassengerDetailsSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}PassengerDetailsSoapBinding" soapVersion="1_1" anonymous="optional" definition="https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/PassengerDetails3.3.0RQ.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/PassengerDetails3.3.0RQ.wsdl"><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/PassengerDetails3.3.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:pd="http://services.sabre.com/sp/pd/v3_3" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://services.sabre.com/sp/pd/v3_3" schemaLocation="PassengerDetails3.3.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="built-ins/msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="built-ins/wsse.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="PassengerDetailsInput">
    <wsdl:part element="eb:MessageHeader" name="header"/>
    <wsdl:part element="wsse:Security" name="header2"/>
    <wsdl:part element="pd:PassengerDetailsRQ" name="body"/>
  </wsdl:message>
  <wsdl:message name="PassengerDetailsOutput">
    <wsdl:part element="eb:MessageHeader" name="header"/>
    <wsdl:part element="wsse:Security" name="header2"/>
    <wsdl:part element="pd:PassengerDetailsRS" name="body"/>
  </wsdl:message>
  <wsdl:portType name="PassengerDetailsPortType">
    <wsdl:operation name="PassengerDetailsRQ">
      <wsdl:input message="sws:PassengerDetailsInput"/>
      <wsdl:output message="sws:PassengerDetailsOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PassengerDetailsSoapBinding" type="sws:PassengerDetailsPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="PassengerDetailsRQ">
      <soap:operation soapAction="PassengerDetailsRQ"/>
      <wsdl:input>
        <soap:header message="sws:PassengerDetailsInput" part="header" use="literal"/>
        <soap:header message="sws:PassengerDetailsInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:PassengerDetailsOutput" part="header" use="literal"/>
        <soap:header message="sws:PassengerDetailsOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PassengerDetailsService">
    <wsdl:port binding="sws:PassengerDetailsSoapBinding" name="PassengerDetailsPortType">
      <soap:address location="https://webservices.sabre.com"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/PassengerDetails3.3.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://services.sabre.com/sp/pd/v3_3" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="PassengerDetails3.3.0RQ.xsd"/>
  &lt;include schemaLocation="PassengerDetails3.3.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/PassengerDetails3.3.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://services.sabre.com/sp/pd/v3_3" elementFormDefault="qualified" xmlns:spct="http://services.sabre.com/sp/common/simple/v3" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stlp="http://services.sabre.com/STL_Payload/v02_01">
  <xs:import namespace="http://services.sabre.com/STL_Payload/v02_01" schemaLocation="built-ins/STL2_Payload_v02_01.xsd"/>
  <xs:import namespace="http://services.sabre.com/sp/common/simple/v3" schemaLocation="built-ins/SpCommonSimpleTypes_v3.xsd"/>
  <xs:element name="PassengerDetailsRQ">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="stlp:STL_Request_Payload">
          <xs:sequence>
            <xs:element name="MiscSegmentSellRQ" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="MiscSegment">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="OriginLocation">
                          <xs:complexType>
                            <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="Text" type="xs:string"/>
                        <xs:element name="VendorPrefs">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Airline">
                                <xs:complexType>
                                  <xs:attribute name="Code" type="xs:string" use="required"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="DepartureDateTime" type="spct:date" use="required"/>
                      <xs:attribute name="InsertAfter" type="xs:integer" use="optional"/>
                      <xs:attribute name="NumberInParty" type="xs:integer" use="required"/>
                      <xs:attribute name="Status" type="xs:string" use="required"/>
                      <xs:attribute name="Type" use="required">
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:enumeration value="INS"/>
                            <xs:enumeration value="MCO"/>
                            <xs:enumeration value="OTH"/>
                            <xs:enumeration value="PTA"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="PostProcessing" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ARUNK_RQ" minOccurs="0"/>
                  <xs:element name="EndTransactionRQ" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="EndTransaction" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Email" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="eTicket" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="PDF" minOccurs="0">
                                            <xs:complexType>
                                              <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                        <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Invoice" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Itinerary" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="PDF" minOccurs="0">
                                            <xs:complexType>
                                              <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Segment" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                              <xs:attribute name="EndNumber" type="xs:integer" use="optional"/>
                                              <xs:attribute name="Number" type="xs:integer" use="required"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                        <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="PersonName" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="NameNumber" type="xs:string" use="required"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="Ind" type="xs:string" use="required"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="Source" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="ReceivedFrom" type="xs:string" use="required"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="QueuePlaceRQ" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="MultiQueuePlace" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="QueueIdentifier" maxOccurs="20">
                                <xs:complexType>
                                  <xs:attribute name="Number" type="xs:string" use="required"/>
                                  <xs:attribute name="PrefatoryInstructionCode" type="xs:string" use="required"/>
                                  <xs:attribute name="PseudoCityCode" type="xs:string" use="required"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="QueueInfo" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="QueueIdentifier" maxOccurs="3">
                                <xs:complexType>
                                  <xs:attribute name="Name" type="xs:string" use="optional"/>
                                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                                  <xs:attribute name="PrefatoryInstructionCode" type="xs:string" use="required"/>
                                  <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="UniqueID" minOccurs="0" maxOccurs="6">
                                <xs:complexType>
                                  <xs:attribute name="ID" type="xs:string" use="required"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="IgnoreAfter" type="xs:boolean" use="optional"/>
                <xs:attribute name="RedisplayReservation" type="xs:boolean" use="optional"/>
                <xs:attribute name="UnmaskCreditCard" type="xs:boolean" default="false"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="PreProcessing" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="UniqueID" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="ID" type="xs:string" use="required"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="IgnoreBefore" type="xs:boolean" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="PriceQuoteInfo" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Link" maxOccurs="98">
                    <xs:complexType>
                      <xs:attribute name="HostedCarrier" type="xs:boolean" use="optional"/>
                      <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                      <xs:attribute name="Record" type="xs:string" use="required"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="ProfileRQ" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="UniqueID">
                    <xs:complexType>
                      <xs:attribute name="ID" type="xs:string" use="required"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="SpecialReqDetails" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="AddRemarkRQ" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="RemarkInfo">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="FOP_Remark" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="CC_Info" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="PaymentCard">
                                            <xs:complexType>
                                              <xs:attribute name="AirlineCode" type="xs:string" use="optional"/>
                                              <xs:attribute name="CardSecurityCode" type="xs:string" use="optional"/>
                                              <xs:attribute name="Code" type="xs:string" use="required"/>
                                              <xs:attribute name="ExpireDate" type="spct:expireDate" use="required"/>
                                              <xs:attribute name="ExtendedPayment" type="xs:string" use="optional"/>
                                              <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                              <xs:attribute name="Number" type="xs:string" use="required"/>
                                              <xs:attribute name="SuppressApprovalCode" type="xs:boolean" use="optional"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                        <xs:attribute name="Suppress" type="xs:boolean" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="FutureQueuePlaceRemark" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="Date" type="spct:date" use="required"/>
                                  <xs:attribute name="PrefatoryInstructionCode" type="xs:string" use="required"/>
                                  <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                                  <xs:attribute name="QueueIdentifier" type="xs:string" use="required"/>
                                  <xs:attribute name="Time" type="spct:time" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Remark" minOccurs="0" maxOccurs="98">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Text" type="xs:string"/>
                                  </xs:sequence>
                                  <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                  <xs:attribute name="Type" use="required">
                                    <xs:simpleType>
                                      <xs:restriction base="xs:string">
                                        <xs:enumeration value="Alpha-Coded"/>
                                        <xs:enumeration value="Client Address"/>
                                        <xs:enumeration value="Corporate"/>
                                        <xs:enumeration value="Delivery Address"/>
                                        <xs:enumeration value="General"/>
                                        <xs:enumeration value="Group Name"/>
                                        <xs:enumeration value="Hidden"/>
                                        <xs:enumeration value="Historical"/>
                                        <xs:enumeration value="Invoice"/>
                                        <xs:enumeration value="Itinerary"/>
                                      </xs:restriction>
                                    </xs:simpleType>
                                  </xs:attribute>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="AirSeatRQ" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Seats">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Seat" maxOccurs="98">
                                <xs:complexType>
                                  <xs:attribute name="BoardingPass" type="xs:boolean" use="optional"/>
                                  <xs:attribute name="ChangeOfGauge" type="xs:boolean" use="optional"/>
                                  <xs:attribute name="NameNumber" type="xs:string" use="required"/>
                                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                                  <xs:attribute name="Preference" type="xs:string" use="optional"/>
                                  <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="SpecialServiceRQ" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="SpecialServiceInfo">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="AdvancePassenger" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Document" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="IssueCountry" minOccurs="0" type="xs:string"/>
                                          <xs:element name="NationalityCountry" minOccurs="0" type="xs:string"/>
                                          <xs:element name="Visa" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="ApplicableCountry" type="xs:string"/>
                                                <xs:element name="PlaceOfBirth" minOccurs="0" type="xs:string"/>
                                                <xs:element name="PlaceOfIssue" type="xs:string"/>
                                              </xs:sequence>
                                              <xs:attribute name="IssueDate" type="spct:fullDate" use="required"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                        <xs:attribute name="ExpirationDate" type="spct:fullDate" use="optional"/>
                                        <xs:attribute name="Number" type="xs:string" use="optional"/>
                                        <xs:attribute name="Type" type="xs:string" use="required"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="PersonName" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                                          <xs:element name="MiddleName" minOccurs="0" type="xs:string"/>
                                          <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                                        </xs:sequence>
                                        <xs:attribute name="DateOfBirth" type="spct:fullDate" use="optional"/>
                                        <xs:attribute name="DocumentHolder" type="xs:boolean" use="optional"/>
                                        <xs:attribute name="Gender" use="optional">
                                          <xs:simpleType>
                                            <xs:restriction base="xs:string">
                                              <xs:enumeration value="F"/>
                                              <xs:enumeration value="M"/>
                                              <xs:enumeration value="FI"/>
                                              <xs:enumeration value="MI"/>
                                              <xs:enumeration value="U"/>
                                            </xs:restriction>
                                          </xs:simpleType>
                                        </xs:attribute>
                                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="ResidentDestinationAddress" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="City" minOccurs="0" type="xs:string"/>
                                          <xs:element name="Country" type="xs:string"/>
                                          <xs:element name="Street" minOccurs="0" type="xs:string"/>
                                          <xs:element name="State" minOccurs="0" type="xs:string"/>
                                          <xs:element name="Zip" minOccurs="0" type="xs:string"/>
                                        </xs:sequence>
                                        <xs:attribute name="Type" type="xs:string" use="required"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="VendorPrefs" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="Airline">
                                            <xs:complexType>
                                              <xs:attribute name="Hosted" type="xs:boolean" use="optional"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="SecureFlight" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="KnownTravelerNumber" minOccurs="0" type="xs:string"/>
                                    <xs:element name="PersonName" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                                          <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                                        </xs:sequence>
                                        <xs:attribute name="DateOfBirth" type="xs:string" use="optional"/>
                                        <xs:attribute name="Gender" use="optional">
                                          <xs:simpleType>
                                            <xs:restriction base="xs:string">
                                              <xs:enumeration value="F"/>
                                              <xs:enumeration value="M"/>
                                              <xs:enumeration value="FI"/>
                                              <xs:enumeration value="MI"/>
                                            </xs:restriction>
                                          </xs:simpleType>
                                        </xs:attribute>
                                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="RedressNumber" minOccurs="0" type="xs:string"/>
                                    <xs:element name="VendorPrefs" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="Airline">
                                            <xs:complexType>
                                              <xs:attribute name="Hosted" type="xs:boolean" use="optional"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Service" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="PersonName" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                    <xs:element name="VendorPrefs" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="Airline">
                                            <xs:complexType>
                                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              <xs:attribute name="Hosted" type="xs:boolean" use="optional"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                  <xs:attribute name="SSR_Code" type="xs:string" use="required"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="TravelItineraryAddInfoRQ" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="AgencyInfo" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Address" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="AddressLine" type="xs:string" minOccurs="0"/>
                              <xs:element name="CityName" type="xs:string"/>
                              <xs:element name="CountryCode" type="xs:string" minOccurs="0"/>
                              <xs:element name="PostalCode" type="xs:string" minOccurs="0"/>
                              <xs:element name="StateCountyProv" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="StateCode" type="xs:string" use="required"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="StreetNmbr" type="xs:string" minOccurs="0"/>
                              <xs:element name="VendorPrefs" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Airline">
                                      <xs:complexType>
                                        <xs:attribute name="Hosted" type="xs:boolean" use="required"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="Ticketing" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                            <xs:attribute name="QueueNumber" type="xs:integer" use="optional"/>
                            <xs:attribute name="QueueName" type="xs:string" use="optional"/>
                            <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                            <xs:attribute name="TicketTimeLimit" type="spct:dateTime" use="optional"/>
                            <xs:attribute name="TicketType" type="xs:string" use="required"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="CustomerInfo" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="ContactNumbers" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="ContactNumber" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:attribute name="InsertAfter" type="xs:integer" use="optional"/>
                                  <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                  <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                  <xs:attribute name="Phone" type="xs:string" use="required"/>
                                  <xs:attribute name="PhoneUseType" type="xs:string" use="required"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="Corporate" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="ID" type="xs:string"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:attribute name="MembershipID" type="xs:string" use="required"/>
                            <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                            <xs:attribute name="ProgramID" type="xs:string" use="required"/>
                            <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                            <xs:attribute name="TravelingCarrierCode" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="CustomerIdentifier" type="xs:string" minOccurs="0"/>
                        <xs:element name="Email" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:attribute name="Address" type="xs:string" use="required"/>
                            <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                            <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                            <xs:attribute name="Type" use="optional">
                              <xs:simpleType>
                                <xs:restriction base="xs:string">
                                  <xs:enumeration value="BC"/>
                                  <xs:enumeration value="CC"/>
                                  <xs:enumeration value="FR"/>
                                  <xs:enumeration value="TO"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="GivenName" type="xs:string" minOccurs="0"/>
                              <xs:element name="GroupInfo" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="VendorPrefs" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="Airline">
                                            <xs:complexType>
                                              <xs:attribute name="Code" type="xs:string" use="required"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="Name" type="xs:string" use="required"/>
                                  <xs:attribute name="NumSeatsRemaining" type="xs:integer" use="required"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Surname" type="xs:string" minOccurs="0"/>
                            </xs:sequence>
                            <xs:attribute name="Infant" type="xs:boolean" use="optional"/>
                            <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                            <xs:attribute name="NameReference" type="xs:string" use="optional"/>
                            <xs:attribute name="PassengerType" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
          <xs:attribute name="IgnoreOnError" type="xs:boolean" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/built-ins/STL2_Payload_v02_01.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Payload/v02_01" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.0.0" xmlns="http://services.sabre.com/STL_Payload/v02_01" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msg="http://services.sabre.com/STL_MessageCommon/v02_01">
  <xsd:import namespace="http://services.sabre.com/STL_MessageCommon/v02_01" schemaLocation="STL2_MsgCommon_v02_01.xsd"/>
  <xsd:annotation>
    <xsd:documentation>Types and element definitions used as the base constructs for all message payloads.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:element name="STL_Request_Payload" substitutionGroup="STL_Payload" type="STL_Request_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Global message element for service requests.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Request_Payload">
    <xsd:annotation>
      <xsd:documentation>Base type for request messages.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="STL_Payload"/>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="STL_Response_Payload" substitutionGroup="STL_Payload" type="STL_Response_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Global message element for service responses.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Response_Payload">
    <xsd:annotation>
      <xsd:documentation>Base type for response messages.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="STL_Payload">
        <xsd:sequence>
          <xsd:element ref="ApplicationResults" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="STL_Notif_Payload" substitutionGroup="STL_Payload" type="STL_Notif_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Global message element for service notifications.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Notif_Payload">
    <xsd:annotation>
      <xsd:documentation>Base type for notification messages.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="STL_Payload">
        <xsd:sequence>
          <xsd:element ref="ApplicationResults" minOccurs="0"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"/>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="msg:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="msg:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="msg:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="msg:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="msg:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="msg:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
    <xsd:attribute name="reference" type="xsd:IDREF" use="optional">
      <xsd:annotation>
        <xsd:documentation>If present, this attribute provides an XML IDREF to the elemenet for which the results apply.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="msg:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/built-ins/STL2_MsgCommon_v02_01.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_MessageCommon/v02_01" elementFormDefault="qualified" attributeFormDefault="unqualified" version="2.0.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://services.sabre.com/STL_MessageCommon/v02_01">
  <xsd:annotation>
    <xsd:documentation>Common types used in the headers and payload sections of message envelopes.</xsd:documentation>
  </xsd:annotation>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/built-ins/SpCommonSimpleTypes_v3.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://services.sabre.com/sp/common/simple/v3" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be omitted. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/PassengerDetails3.3.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://services.sabre.com/sp/pd/v3_3" elementFormDefault="qualified" xmlns:spct="http://services.sabre.com/sp/common/simple/v3" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stlp="http://services.sabre.com/STL_Payload/v02_01" xmlns="http://services.sabre.com/sp/pd/v3_3">
  <xs:import namespace="http://services.sabre.com/STL_Payload/v02_01" schemaLocation="built-ins/STL2_Payload_v02_01.xsd"/>
  <xs:import namespace="http://services.sabre.com/sp/common/simple/v3" schemaLocation="built-ins/SpCommonSimpleTypes_v3.xsd"/>
  <xs:element name="PassengerDetailsRS">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="stlp:STL_Response_Payload">
          <xs:sequence>
            <xs:element name="ItineraryRef" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="ID" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="TravelItineraryReadRS" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="TravelItinerary" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="AccountingInfo" minOccurs="0" maxOccurs="unbounded">
                          <xs:annotation>
                            <xs:documentation>Place holder for the Accounting information details</xs:documentation>
                          </xs:annotation>
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="AccountVendor" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="Code" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>Place holder for Accounting vendor code associated with the accounting line.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Airline" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="Code" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>Place holder for the Airline vendor code associated with the accounting line	Example: Code="EY"</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="BaseFare" minOccurs="0">
                                <xs:complexType>
                                  <xs:annotation>
                                    <xs:documentation>Contains the Base Fare details. Contains the Base Fare amount, applicable currency code and Applicable Percentage Example: Amount="422"	CurrencyCode="USD"	Percent="0"</xs:documentation>
                                  </xs:annotation>
                                  <xs:attribute name="Amount" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"CurrencyCode" is used to return the applicable currency code.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="Percent" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"Percent" is used to return the applicable percentage.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="ChargeCategory" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                  <xs:documentation>Holds the charge category information</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                              <xs:element name="DocumentInfo" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:annotation>
                                      <xs:documentation>Holds the Document Number information	Example: Number="1234567890"</xs:documentation>
                                    </xs:annotation>
                                    <xs:element name="Document" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="Number" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="FareApplication" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                  <xs:documentation>Holds the Fare application information	Example: ONE</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                              <xs:element name="PaymentInfo" minOccurs="0">
                                <xs:complexType>
                                  <xs:annotation>
                                    <xs:documentation>PaymentInfo is used as a container for Payment information details</xs:documentation>
                                  </xs:annotation>
                                  <xs:sequence>
                                    <xs:element name="Commission" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>Commission is used as a place holder for commission associated with the particular accounting line	Example: Commission Amount="31.00" Percent="1"</xs:documentation>
                                      </xs:annotation>
                                      <xs:complexType>
                                        <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                        <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Payment" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="CC_Info" minOccurs="0">
                                            <xs:annotation>
                                              <xs:documentation>CC_Info is used as a container for payment Card details. Hold the payment card type, and the card number	Example: PaymentCard Code="AX" Number="3XXXXXXXXXX8431"</xs:documentation>
                                            </xs:annotation>
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="PaymentCard" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return credit card code associated with the particular accounting line if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Number" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Number" is used to return credit card number associated with the particular accounting line if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Form" type="xs:string" minOccurs="0"/>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="PersonName" minOccurs="0">
                                <xs:annotation>
                                  <xs:documentation>PersonName is used to return the passenger name associated with the particular accounting line	Example: NameNumber="1.1" TESTA TEST1"</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:simpleContent>
                                    <xs:extension base="xs:string">
                                      <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                    </xs:extension>
                                  </xs:simpleContent>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Taxes" minOccurs="0">
                                <xs:annotation>
                                  <xs:documentation>Taxes is used as a container for Tax details. It holds the details for GST, QST and Tax. For GST information about amount, Currency code and Percentage is present for QST and Tax along with information about amount, Currency code, Percentage Tax code details is also included.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="GST" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="Amount" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"CurrencyCode" is used to return the applicable currency code.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="Percent" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"Percent" is used to return the applicable percentage.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="QST" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                        <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                        <xs:attribute name="TaxCode" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"TaxCode" is used to return the tax code.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Tax" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                        <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                        <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Text" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                  <xs:documentation>"Text" is used to return miscellaneous free text-related information associated with the	particular ticketing information if applicable	Example: INCLUDES SERVICE CHARGE</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                              <xs:element name="TicketingInfo" minOccurs="0">
                                <xs:annotation>
                                  <xs:documentation>"TicketingInfo" is used as a container for Ticketing Information</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="eTicket" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>"eTicket" holds indicator to denote whether or not the flight segment associated with the accounting line is eticket eligible	Example: eTicket Ind="false"</xs:documentation>
                                      </xs:annotation>
                                      <xs:complexType>
                                        <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Exchange" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>"Exchange" holds indicator to denote whether or not the the accounting line relates to an exchange transaction	Example: Exchange Ind="false"</xs:documentation>
                                      </xs:annotation>
                                      <xs:complexType>
                                        <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="IssueDate" type="spct:date" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>"IssueDate" is used to return the issue date associated with the particular accounting line if applicable.</xs:documentation>
                                      </xs:annotation>
                                    </xs:element>
                                    <xs:element name="IssueLocation" type="xs:string" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>"IssueLocation" is used to return the issue location associated with the particular accounting line if applicable</xs:documentation>
                                      </xs:annotation>
                                    </xs:element>
                                    <xs:element name="OriginalInvoiceNumber" type="xs:string" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>"Number" is used to return the original invoice number associated with the particular accounting line if applicable.</xs:documentation>
                                      </xs:annotation>
                                    </xs:element>
                                    <xs:element name="OriginalTicketNumber" type="xs:string" minOccurs="0" maxOccurs="9">
                                      <xs:annotation>
                                        <xs:documentation>"OriginalTicketNumber" is used to return the original ticket number associated with the particular accounting line if applicable.</xs:documentation>
                                      </xs:annotation>
                                    </xs:element>
                                    <xs:element name="TariffBasis" type="xs:string" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>"TariffBasis" is used to return tarriff basis-related information associated with the particular accounting line if applicable.</xs:documentation>
                                      </xs:annotation>
                                    </xs:element>
                                    <xs:element name="Ticketing" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="ConjunctedCount" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"ConjunctedCount" is used to return the number of conjuncted eTicket coupons associated with the particular accounting line if applicable.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="CouponCount" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"CouponCount" is used to return the number of eTicket coupons associated with the particular accounting line if applicable.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                            <xs:attribute name="Type" type="xs:string" use="optional"/>
                            <xs:attribute name="Id" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="CustomerInfo" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Address" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="AddressLine" minOccurs="0" maxOccurs="unbounded">
                                      <xs:annotation>
                                        <xs:documentation>"AddressLine" is used to return customer address information.</xs:documentation>
                                      </xs:annotation>
                                      <xs:complexType>
                                        <xs:simpleContent>
                                          <xs:extension base="xs:string">
                                            <xs:attribute name="Id" type="xs:string" use="optional"/>
                                            <xs:attribute name="type" type="xs:string">
                                              <xs:annotation>
                                                <xs:documentation>Indicates type of information ex. O Other N Name A Address C City and State Z Zip code B Business</xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                          </xs:extension>
                                        </xs:simpleContent>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="ContactNumbers" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="ContactNumber" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                              <xs:annotation>
                                                <xs:documentation>PersonName is the passenger name</xs:documentation>
                                              </xs:annotation>
                                              <xs:simpleContent>
                                                <xs:extension base="xs:string">
                                                  <xs:attribute name="NameNumber" type="xs:string" use="optional">
                                                    <xs:annotation>
                                                      <xs:documentation>NameNumber is used to return the passenger name number associated with the particular passenger</xs:documentation>
                                                    </xs:annotation>
                                                  </xs:attribute>
                                                </xs:extension>
                                              </xs:simpleContent>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                        <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"LocationCode" is used to return the city code associated to the phone number.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="Phone" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"Phone" is used to return the telephone number.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="RPH" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"RPH" is used as a reference placeholder.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="Id" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:attribute name="TravelingCarrierCode" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"TravelingCarrierCode" is used to return the traveling airline code.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="MembershipID" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"MembershipID" is used to return the passenger's frequent flyer number.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="NameNumber" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"NameNumber" is used to associate the particular frequent flyer number to a particular passenger within the record.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="ProgramID" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"ProgramID" is used to return the passenger's frequent flyer airline code.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="RPH" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"RPH" is used as a reference placeholder.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="ShortText" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"ShortText" is used to return miscellaneous frequent flyer-related information.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="Status" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"Status" is used to return the status code associated with the particular flight segment within the record.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="Id" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Passport" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:attribute name="Number" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"Number" is used to return the passenger's passport number.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="RPH" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"RPH" is used as a reference placeholder.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="Id" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="PaymentInfo" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Payment" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="CC_Info" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="CardHolderInfo" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Address" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="4">
                                                              <xs:annotation>
                                                                <xs:documentation>"AddressLine" is used to return the address associated with the particular credit card holder.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="ContactNumbers" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="ContactNumber" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Phone" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Phone" is used to return the telephone number associated with the particular credit card holder.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="Name" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Name" is used to return the credit card holder's name.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="PreferredCustomer" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"PreferredCustomer" is used to indicate whether or not the cardholder is a preferred customer.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="ShortText" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"ShortText" is used to return miscellaneous credit card-related information.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Form" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Text" is used to return the form of payment.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="RPH" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"RPH" is used as a reference place holder.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Id" type="xs:string" use="optional"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Email" minOccurs="0" maxOccurs="unbounded">
                                      <xs:annotation>
                                        <xs:documentation>"Email" is used to return the passenger's email address.</xs:documentation>
                                      </xs:annotation>
                                      <xs:complexType>
                                        <xs:simpleContent>
                                          <xs:extension base="xs:string">
                                            <xs:attribute name="Id" type="xs:string" use="optional"/>
                                            <xs:attribute name="Comment" type="xs:string" use="optional"/>
                                          </xs:extension>
                                        </xs:simpleContent>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="GivenName" type="xs:string" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>"GivenName" is used to return the passenger's given (first) name.</xs:documentation>
                                      </xs:annotation>
                                    </xs:element>
                                    <xs:element name="GroupInfo" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="AssociatedReferenceInformation" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="AssociatedPNRSummaries" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="AssociatedPNRSummary" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="RecordLocator" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"RecordLocator" is used to return the Associated PNRs Record locator.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="NumberOfSeats" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"NumberOfSeats" is used to return the number of seats in the Associated PNR.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="TicketingTimeLimitInfo" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"TicketingTimeLimitInfo" is used to return the ticketing time limit for the Associated PNR.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="FreeText" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"FreeText" is used to return miscellaneous free text associated with the particular Associated PNR.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                        <xs:attribute name="Name" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"Name" is used to return the corporate/group name.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="OriginalNumberOfSeats" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"OriginalNumberOfSeats" is used to return the original number of seats requested in the BSG</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="GroupNameNumber" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"GroupNameNumber" is used to return the passenger name number in relation to the rest of the group.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="NumSeatsRemaining" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"NumSeatsRemaining" is used to return the number of remaining seats.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="SoldNumberOfSeats" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"SoldNumberOfSeats is used to return the number of seats sold from the BSG"</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="ProfileIndex" minOccurs="0" maxOccurs="unbounded">
                                      <xs:annotation>
                                        <xs:documentation>"ProfileIndex" is used to return the profile index if applicable.</xs:documentation>
                                      </xs:annotation>
                                      <xs:complexType>
                                        <xs:simpleContent>
                                          <xs:extension base="xs:string">
                                            <xs:attribute name="Id" type="xs:string" use="optional"/>
                                          </xs:extension>
                                        </xs:simpleContent>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Surname" type="xs:string" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>"Surname" is used to return the passenger's last name.</xs:documentation>
                                      </xs:annotation>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="WithInfant" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"WithInfant" is used to indicate whether or not the passenger is an infant.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="NameNumber" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"NameNumber" is used to return the passenger name number.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="NameReference" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"NameReference" is used to return miscellaneous name reference-related information if applicable.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="PassengerType" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"PassengerType" is used to return the passenger type associated with the particular passenger.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="RPH" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"RPH" is used as a reference place holder.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="Id" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="FileInfo" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="File" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:simpleContent>
                                    <xs:extension base="xs:string">
                                      <xs:attribute name="ProductCode" type="xs:string" use="optional">
                                        <xs:annotation>
                                          <xs:documentation>"ProductCode" is used to return the product code.</xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="RPH" type="xs:string" use="optional">
                                        <xs:annotation>
                                          <xs:documentation>"RPH" is used as a reference place holder.</xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="Id" type="xs:string" use="optional"/>
                                    </xs:extension>
                                  </xs:simpleContent>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="ItineraryInfo" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="ItineraryPricing" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="FuturePriceInfo" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="Text" type="xs:string" minOccurs="0">
                                            <xs:annotation>
                                              <xs:documentation>"Text" is used to return future pricing line-related information if applicable.</xs:documentation>
                                            </xs:annotation>
                                          </xs:element>
                                        </xs:sequence>
                                        <xs:attribute name="RPH" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"RPH" is used as a reference place holder.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="PriceQuote" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="MiscInformation" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="BaggageFees" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Text" is used to return baggage fee-related information.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="GlobalNetRemit" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="NetFare" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="BaseFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"CurrencyCode" is used to return the applicable currency code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="EquivFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"CurrencyCode" is used to return the applicable currency code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="Taxes" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="TotalAmount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"TotalAmount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="TotalFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="SellingFare" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="BaseFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"CurrencyCode" is used to return the applicable currency code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="EquivFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"CurrencyCode" is used to return the applicable currency code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="Taxes" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="TotalAmount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"TotalAmount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="TotalFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="Text" type="xs:string" minOccurs="0"/>
                                                    </xs:sequence>
                                                    <xs:attribute name="MethodType" type="xs:string" use="optional"/>
                                                    <xs:attribute name="ValueCode" type="xs:string" use="optional"/>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="SignatureLine" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Text" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"Text" is used to return PQ signature line-related information.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="Banner" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Banner" is used to return miscellaneous PQ banner-related information.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="CommissionAmount" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"CommissionAmount" is used to return the commission amount if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="CommissionID" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"CommissionID" is used to return the commission ID if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="ExpirationDateTime" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ExpirationDateTime" is used to return the PQ record expiration date/time.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="PQR_Ind" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"PQR_Ind" is used to indicate that the PQ record is a PQ Reissue versus a regular PQ record.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Source" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Source" is used to return the pricing source associated with the particular PQ record.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Status" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Status" is used to return the PQ record status.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="TicketingFees" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="FeeInformation" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:simpleContent>
                                                            <xs:extension base="xs:string">
                                                              <xs:attribute name="AccountData" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"AccountData" is used to return ticketing fee account-related information.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"Amount" is used to return the ticketing fee amount.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="DisplayOnOutputInd" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"DisplayOnOutputInd" is used to is used to indicate whether or not the fee is displayed on output.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="FunctionCode" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"FunctionCode" is used to return the ticketing fee function code.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="GuaranteeType" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"GuaranteeType" is used to return the ticketing fee guarantee type.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="NonCommissionInd" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"NonCommissionInd" is used to is used to indicate whether or not the fee is commission eligible.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="NonRefundableInd" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"NonRefundableInd" is used to is used to indicate whether or not the fee is refundable.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="OnlineInterlineService" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"OnlineInterlineService" is used to is used to return online/interline-related information.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="ServiceType" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"ServiceType" is used to return the ticketing fee service type.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="CurrenyCode" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>Ob Fee Currency Code.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="Description" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>Ob Fee Description.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="WaiverCode" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"WaiverCode" is used to return the Waiver code.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                            </xs:extension>
                                                          </xs:simpleContent>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="Disclaimer" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Disclaimer" is used to return ticketing fee disclaimer-related information.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="PricedItinerary" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="AirItineraryPricingInfo" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="ItinTotalFare" minOccurs="0" maxOccurs="7">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="BaseFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>CurrencyCode" is used to return the applicable currency code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="EquivFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>CurrencyCode" is used to return the applicable currency code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="Taxes" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="Tax" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="TaxCode" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"TaxCode" is used to return the applicable tax code.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="TaxBreakdownCode" minOccurs="0" maxOccurs="unbounded">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"TaxBreakdownCode" is used to return the applicable tax breakdown code.</xs:documentation>
                                                                    </xs:annotation>
                                                                    <xs:complexType>
                                                                      <xs:simpleContent>
                                                                        <xs:extension base="xs:string">
                                                                          <xs:attribute name="TaxPaid" type="xs:boolean"/>
                                                                        </xs:extension>
                                                                      </xs:simpleContent>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="TotalFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"CurrencyCode" is used to return the applicable currency code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="Totals" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="BaseFare" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="EquivFare" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="Taxes" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Tax" minOccurs="0">
                                                                          <xs:complexType>
                                                                            <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                              <xs:annotation>
                                                                                <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                              </xs:annotation>
                                                                            </xs:attribute>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="TotalFare" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Amount" is used to return the applicable amount.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="PassengerTypeQuantity" minOccurs="0" maxOccurs="7">
                                                        <xs:complexType>
                                                          <xs:attribute name="Code" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Code" is used to return the passenger type code associated with the particular price quote.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="Quantity" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Quantity" is used to return the number of passengers associated with the particular passenger type code.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="PrivateFareInformation" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="7">
                                                              <xs:annotation>
                                                                <xs:documentation>"Text" is used to return the miscellaneous private fare-related information if applicable.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                          <xs:attribute name="PrivateFareType" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"PrivateFareType" is used to return the miscellaneous private fare-related information if applicable.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="PrivateFareInd" type="xs:boolean" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"PrivateFareInd" is a private fare indicator.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="PTC_FareBreakdown" minOccurs="0" maxOccurs="7">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="NetRemits" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="NetRemit" minOccurs="0" maxOccurs="unbounded">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Text" type="xs:string"/>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="Endorsements" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="Endorsement" minOccurs="0" maxOccurs="unbounded">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Text" type="xs:string">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"Text" is used to return miscellaneous endorsement-related information associated with the particular price quote.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                      <xs:attribute name="type" type="xs:string" use="required"/>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="FareBasis" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:complexType>
                                                                <xs:attribute name="Code" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Code" is used to return the fare basis code associated with the particular price quote.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="FareCalculation" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"Text" is used to return the fare calculation line associated with the particular price quote.</xs:documentation>
                                                                    </xs:annotation>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="FareSource" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"FareSource" is used to return the fare source.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="BaggageAllowance" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Number" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Number" is used to return the baggage allowance type associated with the particular flight segment.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="FareBasis" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Code" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Code" is used to return the fare basis code associated with the particular flight segment.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="MarketingAirline" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Code" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Code" is used to return the marketing airline code associated with the particular flight segment.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"FlightNumber" is used to return the marketing airline flight number associated with the particular flight segment.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="OriginLocation" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"LocationCode" is used to return the airport code associated with the particular flight segment.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="ValidityDates" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="NotValidAfter" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"NotValidAfter" is used to return the ending validity date associated with the particular flight segment.	"NotValidAfter" follows this format: MM:DD</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                        <xs:element name="NotValidBefore" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"NotValidBefore" is used to return the beginning validity date associated with the particular flight segment. "NotValidBefore" follows this format: MM:DD</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                                <xs:attribute name="ConnectionInd" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"ConnectionInd" is used to return the connection indicator associated with the particular flight segment.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="DepartureDateTime" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"DepartureDateTime" is used to return the time and date of flight departure associated with the particular flight segment. "DepartureDateTime" follows this format: MM:DDTHH:MM</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"FlightNumber" is used to return the flight number associated with the particular flight segment.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"ResBookDesigCode" is used to return the booking class associated with the particular flight segment.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"SegmentNumber" is used to return the internal order segment number that was used to price the segments.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="Status" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="ResTicketingRestrictions" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:annotation>
                                                                <xs:documentation>"ResTicketingRestrictions" is used to return last day to purchase-related information</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="TourCode" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="Text" type="xs:string" minOccurs="0">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"Text" is used to return the tour code.</xs:documentation>
                                                                    </xs:annotation>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="NetTicketingInfo" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:annotation>
                                                      <xs:documentation>"NetTicketingInfo" holds the NetTicketing Information</xs:documentation>
                                                    </xs:annotation>
                                                    <xs:sequence>
                                                      <xs:element name="NetFareDetails" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="BaseFare" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"BaseFare" is used to return the Base fare details</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"CurrencyCode" is used to return the applicable currency code</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="EquivFare" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"EquivFare" is used to reflect the Equivalent fare details</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="TotalTax" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"TotalTax" is used to return the total tax details</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="TotalFare" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"TotalFare" is used to return the total fare details</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="Commission" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"Commission" is used to return commission-related information.</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="Percent" minOccurs="0">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"Percent" is used to return the commission type and the associated percentage.</xs:documentation>
                                                                    </xs:annotation>
                                                                    <xs:complexType>
                                                                      <xs:simpleContent>
                                                                        <xs:extension base="xs:string">
                                                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                                        </xs:extension>
                                                                      </xs:simpleContent>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="FareCalc" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"FareCalc" returns the fare calculation line .</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="Taxes" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"Taxes" is used to reflect the total tax details</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="Tax" minOccurs="0" maxOccurs="unbounded">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"Tax" returns the individual Tax details</xs:documentation>
                                                                    </xs:annotation>
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                      <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                                      <xs:attribute name="Exempt" type="xs:boolean" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Exempt" is used to indicate whether or not the itinerary is classified as tax exempt</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="SellingFareDetails" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="BaseFare" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"BaseFare" is used to return the Base fare details</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"CurrencyCode" is used to return the applicable currency code</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="EquivFare" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"EquivFare" is used to reflect the Equivalent fare details</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the applicable amount</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"CurrencyCode" is used to return the applicable currency code</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="TotalTax" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"TotalTax" is used to return the total tax details</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="TotalFare" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:annotation>
                                                                  <xs:documentation>"TotalFare" is used to return the total fare details</xs:documentation>
                                                                </xs:annotation>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="Commission" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"Commission" is used to return commission-related information.</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="Percent" minOccurs="0">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"Percent" is used to return the commission type and the associated percentage.</xs:documentation>
                                                                    </xs:annotation>
                                                                    <xs:complexType>
                                                                      <xs:simpleContent>
                                                                        <xs:extension base="xs:string">
                                                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                                        </xs:extension>
                                                                      </xs:simpleContent>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="FareCalc" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"FareCalc" returns the fare calculation line .</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="Taxes" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"Taxes" is used to reflect the total tax details</xs:documentation>
                                                              </xs:annotation>
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="Tax" minOccurs="0" maxOccurs="unbounded">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"Tax' returns the individual Tax details</xs:documentation>
                                                                    </xs:annotation>
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                      <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                                      <xs:attribute name="Exempt" type="xs:boolean" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Exempt" is used to indicate whether or not the itinerary is classified as tax exempt</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="AccountCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"AccountCode" returns the account code</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="CorporateId" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"CorporateId" returns the Corporate Id</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DeletedBy" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DeletedBy" is used to return deletion information associated with the particular price quote if applicable.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="DisplayOnly" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DisplayOnly" is used to indicate that the global net remit-related data is display only.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="InputMessage" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"InputMessage" is used to return the host command associated with the particular price quote.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="RPH" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"RPH" is used as a reference place holder.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="StatusCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"StatusCode" is used to return the status code associated with the particular price quote. --></xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="TaxExempt" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"TaxExempt" is used to indicate whether or not the particular priced itinerary is classified as tax exempt</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="ValidatingCarrier" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"ValidatingCarrier" is used to return validating carrier-related information associated with the particular price quote.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="ResponseHeader" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Text" is used to return response header-related information.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                              </xs:sequence>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="PriceQuotePlus" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="Header" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>When the value in the element is PQPLUS RESTRICTED, indicates the wholesaler does not have access to price quote the PNR</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="PassengerInfo" minOccurs="0" maxOccurs="1">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="PassengerData" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:simpleContent>
                                                            <xs:extension base="xs:string">
                                                              <xs:attribute name="NameNumber" type="xs:string"/>
                                                            </xs:extension>
                                                          </xs:simpleContent>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="TicketingInstructionsInfo" minOccurs="0" maxOccurs="1">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="TicketingInstruction" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:attribute name="Text" type="xs:string">
                                                            <xs:annotation>
                                                              <xs:documentation>"Text" is used to pass back miscellaneous remark-related free text</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="Id" type="xs:string" use="optional"/>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="FuturePricingInfo" minOccurs="0" maxOccurs="1">
                                                  <xs:complexType>
                                                    <xs:annotation>
                                                      <xs:documentation>"FuturePricingInfo" is used to reflect Future pricing information</xs:documentation>
                                                    </xs:annotation>
                                                    <xs:sequence>
                                                      <xs:element name="FuturePrice" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:attribute name="Text" type="xs:string"/>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="PACInfo" minOccurs="0" maxOccurs="1">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="PAC" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"PAC" is used to reflect Passenger Account Code Banner.</xs:documentation>
                                                        </xs:annotation>
                                                        <xs:complexType>
                                                          <xs:attribute name="Text" type="xs:string"/>
                                                          <xs:attribute name="Id" type="xs:string" use="optional"/>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DomesticIntlInd" type="xs:string">
                                                <xs:annotation>
                                                  <xs:documentation>DomesticIntlInd is used to indicate if Itinerary is domestic or international.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="PricingStatus" type="xs:string">
                                                <xs:annotation>
                                                  <xs:documentation>PricingStatus is used to indicate status of the fare stored in the PQ. The values can be different depending on invoking GDS (Sabre, Abacus, Infini).</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="VerifyFareCalc" type="xs:boolean">
                                                <xs:annotation>
                                                  <xs:documentation>VerifyFareCalc is used to denote if Fare Calc requires any update/verification.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="ItineraryChanged" type="xs:boolean">
                                                <xs:annotation>
                                                  <xs:documentation>ItineraryChanged is used to indicate if original Itinerary has changed.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="ManualFare" type="xs:boolean">
                                                <xs:annotation>
                                                  <xs:documentation>ManualFare is set when the PQ is created manually or when a fare is stored in the PQ as a manual fare.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NegotiatedFare" type="xs:boolean">
                                                <xs:annotation>
                                                  <xs:documentation>NegotiatedFare is an indicator Pricing sends for certain types of fares to denote that the fare is not a published fare but is negotiated between the Carrier and the Agency.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SystemIndicator" type="xs:string">
                                                <xs:annotation>
                                                  <xs:documentation>SystemIndicator can have following values S(System), M(Manual) or A(Amended).</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NUCSuppresion" type="xs:boolean">
                                                <xs:annotation>
                                                  <xs:documentation>NUCSuppresion is an indicator that INFINI uses to cause the amounts in the fare calculation to be overlaid with "IT" at time of ticket issuance.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SubjToGovtApproval" type="xs:boolean">
                                                <xs:annotation>
                                                  <xs:documentation>SubjToGovtApproval is and indicator that INFINI uses to denote that the fare is subject to Government approval.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="IT_BT_Fare" type="xs:string">
                                                <xs:annotation>
                                                  <xs:documentation>IT_BT_Fare is used to indicate if the amount in the Fare box and Total box on the ticket should be overlaid with Bulk Ticket or Inclusive Tour Fare.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="DisplayOnly" type="xs:boolean">
                                                <xs:annotation>
                                                  <xs:documentation>DisplayOnly is used to denote that stored fare cannot be ticketed for some reason.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="TourCode" type="xs:string">
                                                <xs:annotation>
                                                  <xs:documentation>TourCode is a code that the airline may require to be present on a ticket for a particular fare.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="DiscountAmount" type="xs:string">
                                                <xs:annotation>
                                                  <xs:documentation>DiscountAmount is used by Abacus to indicate amount of used discount on a negotiated fare ticket.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                        <xs:attribute name="RPH" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"RPH" is used as a reference placeholder.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="PriceQuoteTotals" minOccurs="0">
                                      <xs:complexType>
                                        <xs:annotation>
                                          <xs:documentation>"PriceQuoteTotals" is used to reflect the price quotes element in the response</xs:documentation>
                                        </xs:annotation>
                                        <xs:sequence>
                                          <xs:element name="BaseFare" minOccurs="0">
                                            <xs:complexType>
                                              <xs:annotation>
                                                <xs:documentation>"BaseFare" is used to reflect the Base fare details</xs:documentation>
                                              </xs:annotation>
                                              <xs:attribute name="Amount" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Amount" is used to return the applicable base fare amount</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="EquivFare" minOccurs="0">
                                            <xs:complexType>
                                              <xs:annotation>
                                                <xs:documentation>"EquivFare" is used to reflect the Equivalent fare details</xs:documentation>
                                              </xs:annotation>
                                              <xs:attribute name="Amount" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Amount" is used to return the applicable Equivalent fare amount</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Taxes" minOccurs="0">
                                            <xs:complexType>
                                              <xs:annotation>
                                                <xs:documentation>Taxes is used to reflect the total tax details</xs:documentation>
                                              </xs:annotation>
                                              <xs:sequence>
                                                <xs:element name="Tax" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="Amount" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Amount" is used to return the applicable tax amount</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="TotalFare" minOccurs="0">
                                            <xs:complexType>
                                              <xs:annotation>
                                                <xs:documentation>TotalFare is used to reflect the total fare details</xs:documentation>
                                              </xs:annotation>
                                              <xs:attribute name="Amount" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Amount" is used to return the applicable total fare amount</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="ReservationItems" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="AirTaxi" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="DestinationLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the destination location code associated with the particular segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="OriginLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the origin location code associated with the particular segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Text" is used to return miscellaneous free text associated with the particular segment.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="Vendor" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the vendor code associated with the particular segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DayOfWeekInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DayOfWeekInd" is used to return the day of the week indicator.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="DepartureDateTime" type="spct:date" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DepartureDateTime" is used to return the scheduled departure date/time associated with the particular segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="LinkCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"LinkCode" is used to return the link code</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NumberInParty" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"NumberInParty" is used to return the number of passengers associated with the particular cruise segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Type" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>Type" is used to return the segment type</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>It returns information if current segment is past or not. Attribute is populated based on AirTaxi - @DepartureDateTime, AirTaxi - OriginLocation - @LocationCode. There is no end date, thus it will be calculated like air segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Arunk" minOccurs="0">
                                            <xs:complexType>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Type" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Type" is used to return the segment type.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Cruise" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="Berth" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Berth" is used to return the berth associated with the particular cruise segment if applicable.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="Cabin" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Cabin" is used to return the cabin associated with the particular cruise segment if applicable.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="CarRate" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"CarRate" is used to return car rate-related information associated with the particular cruise segment if applicable.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"ConfirmationNumber" is used to return the confirmation number associated with the particular cruise segment.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="DestinationLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="ArrivalDate" type="spct:date" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>ArrivalDate" is used to return the arrival date associated with the particular cruise segment.	ArrivalDate" follows this format: MM:DD</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="ArrivalTime" type="spct:time" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>ArrivalTime" is used to return the arrival time associated with the particular cruise segment.	"ArrivalTime" follows this format: MM:DD</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Point" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Point" is used to return the arrival location point associated with the particular cruise segment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the location code associated with the particular cruise segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="LocationName" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationName" is used to return the arrival location name associated with the particular cruise segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="OriginLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="DepartureDate" type="spct:date" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"DepartureDate" is used to return the departure dates associated with the particular cruise segment. DepartureDate" follows this format: MM:DD</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="DepartureTime" type="spct:time" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"DepartureTime" is used to return the departure time associated with the particular cruise segment. "DepartureTime" follows this format: HH:MM</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Point" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Point" is used to return the departure location point associated with the particular cruise segment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the location code associated with the particular cruise segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="LocationName" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationName" is used to return the arrival location name associated with the particular cruise segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Passenger" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Passenger" is used to return passenger-related information associated with the particular cruise segment if applicable.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="Seat" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Seat" is used to return the seat number associated with the particular cruise segment if applicable.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="ServiceInformation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Text" is used to return miscellaneous service-related information.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="ShipName" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"ShipName" is used to return the ship name associated with the particular cruise segment.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="SpaceReserved" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"SpaceReserved" is used to return space reserved-related information.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Text" is used to return miscellaneous free text associated with the particular cruise segment if applicable.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="TotalFare" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"TotalFare" is used to return the total fare associated with the particular cruise segment if applicable.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="TrailerPrice" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"TrailerPrice" is used to return the trailer price associated with the particular cruise segment if applicable.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="Vendor" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the vendor code associated with the particular cruise segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DayOfWeekInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DayOfWeekInd" is used to return the day of the week indicator.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="LinkCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"LinkCode" is used to return the link code</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"MergedSegmentInd" is used to return the merged segment indicator associated with the particular tour reservation if applicable.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NumberInParty" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"NumberInParty" is used to return the number of passengers associated with the particular flight segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>It returns information if current segment is past or not. Attribute is populated based on Cruise - DestinationLocation - ArrivalDate, Cruise - DestinationLocation - ArrivalTime, Cruise - DestinationLocation - @LocationCode.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="BSG_Record" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="ID" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ID" is used to return the block space group record locator if applicable</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="BSGPNRCreatedDate" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"BSGPNRCreatedDate" is used to return the date BSG PNR was created</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="CheckInAirline" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the check in airline code associated with the particular flight segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="CompanyShortName" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"CompanyShortName" is used to return the check in airline name.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="CodeshareRecord" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="ID" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ID" is used to return the codeshare record locator if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="DestinationLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the arrival airport code.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Terminal" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Terminal" is used to return the arrival airport terminal.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="TerminalCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"TerminalCode" is used to return the arrival airport terminal code.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Equipment" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="AirEquipType" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"AirEquipType" is used to return the aircraft equipment type associated with the particular flight segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="MarketingAirline" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the marketing airline code associated with the particular flight segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"FlightNumber" is used to return the flight number associated with the particular flight segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="MarketingCodeshareRecord" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="ID" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ID" is used to return the marketing codeshare record locator if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="MarriageGrp" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="Group" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Group" is used to return the marraige group number if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Ind" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Ind" is used to indicate that the particular flight segment is part of a married connection.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Sequence" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Sequence" is used to return the marraige sequence number if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Meal" minOccurs="0" maxOccurs="3">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the meal code associated with the particular flight segment if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="OperatingAirline" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the operating airline code associated with the particular flight segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="CompanyShortName" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"CompanyShortName" is used to return the operating airline name.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"FlightNumber" is used to return the flight number associated with the operating airline's flight segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="OperatingAirlineRecord" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="ID" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ID" is used to return the operating airline record locator if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="OriginLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the departure airport code.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Terminal" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Terminal" is used to return the departure airport terminal.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="TerminalCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"TerminalCode" is used to return the departure airport terminal code.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="PartnerCarrier" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Banner" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"Banner" is used to return details of the operated airline related information.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the partner airline code associated with the particular flight segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"FlightNumber" is used to return the flight number associated with the particular flight segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ResBookDesigCode" is used to return the reservation booking designator number associated with the particular flight segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="SupplierRef" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="ID" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ID" is used to return the supplier record locator if applicable.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Text" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"Text" is used to return miscellaneous free text-based information.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="BSGIndicator" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"BSGIndicator" is used to indicate he flight segment has a BSG PNR</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="UpdatedArrivalTime" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"UpdatedArrivalTime" is used to return updated arrival information if applicable.	"UpdatedArrivalTime" follows this format: MM-DDTHH:MM</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="UpdatedDepartureTime" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"UpdatedDepartureTime" is used to return updated departure information if applicable.	"UpdatedDepartureTime" follows this format: MM-DDTHH:MM</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="AirMilesFlown" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"AirMilesFlown" is used to return the air miles flown associated with the particular flight segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="ArrivalDateTime" type="spct:dateTime" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"ArrivalDateTime" is used to return the scheduled arrival date/time associated with the particular flight segment. Please note that updated information is provided via .../Air/UpdatedArrivalTime if applicable. "ArrivalDateTime" follows this format: MM-DDTHH:MM</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="ConnectionInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"ConnectionInd" is used to return the connection indicator associated with the particular flight segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="DayOfWeekInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DayOfWeekInd" is used to return the day of the week indicator.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="DepartureDateTime" type="spct:dateTime" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DepartureDateTime" is used to return the scheduled departure date/time associated with the particular flight segment. Please note that updated information is provided via .../Air/UpdatedDepartureTime if applicable. "DepartureDateTime" follows this format: YYYY-MM-DDTHH:MM</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="ElapsedTime" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"ElapsedTime" is used to return the elapsed time associated with the particular flight segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="eTicket" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"eTicket" is used to indicate whether or not the particular flight segment is eTicket-eligible.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"FlightNumber" is used to return the flight number associated with the particular flight segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NumberInParty" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"NumberInParty" is used to return the number of passengers associated with the particular hotel segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"ResBookDesigCode" is used to return the booking class associated with the particular flight segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SmokingAllowed" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SmokingAllowed" is used to indicate whether or not smoking is permitted on the particular flight segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SpecialMeal" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SpecialMeal" is used to indicate whether or not a special meal is associated with the particular flight segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="StopQuantity" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"StopQuantity" is used to return the number of stops associated with the particular flight segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>It returns information if current segment is past or not. Attribute is populated based on FlightSegment - @DepartureDateTime, FlightSegment - OriginLocation - @LocationCode.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Hotel" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="BasicPropertyInfo" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Address" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="3">
                                                              <xs:annotation>
                                                                <xs:documentation>"AddressLine" is used to return hotel address-related information.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="CountryCode" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"CountryCode" is used to return hotel's particular country code.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="CancelPenalty" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:attribute name="PolicyCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"PolicyCode" is used to return cancellation penalty information associated with the particular hotel reservation.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"ConfirmationNumber" is used to return the booking confirmation number associated with the particular hotel reservation.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="DirectConnect" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"DirectConnect" is used to return miscellaneous direct connect-related information</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="ContactNumbers" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="ContactNumber" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:complexType>
                                                                <xs:attribute name="Fax" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Fax" is used to return the hotel's fax number.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="Phone" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Phone" is used to return the hotel's telephone number.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="ChainCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ChainCode" is used to return the hotel chain code associated with the particular hotel reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="HotelCityCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"HotelCityCode" is used to return the hotel location code associated with the particular hotel reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="HotelCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"HotelCode" is used to return the hotel property code associated with the particular hotel reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="HotelName" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"HotelName" is used to return the hotel name associated with the particular hotel reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="ServiceCityName" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ServiceCityName" is used to return the hotel location code associated with the particular hotel reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Customer" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Corporate" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="ID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:annotation>
                                                                <xs:documentation>"ID" is used to return the corporate ID associated with the particular hotel reservation if applicable.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:attribute name="MembershipID" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"MembershipID" is used to return the frequent flyer number associated with the particular hotel reservation if applicable.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="ID" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="Number" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:annotation>
                                                                <xs:documentation>"Number" is used to return the Number associated with the particular hotel reservation if applicable.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="ReserveUnderName" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"ReserveUnderName" is used to return name/reservation-related information.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Guarantee" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"Guarantee" is used to return guarantee-related information.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="POS" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Source" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="RequestorID" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:annotation>
                                                                <xs:documentation>"RequestorID" is used to return the ID of the individual who created the particular vehicle reservation.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="RoomRates" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Commission" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:simpleContent>
                                                            <xs:extension base="xs:string">
                                                              <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"Amount" is used to return the commission amount associated with the particular hotel reservation if applicable.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="NonCommission" type="xs:boolean" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"NonCommission" is used to return non-commission-related information.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                              <xs:attribute name="Percent" type="xs:string" use="optional">
                                                                <xs:annotation>
                                                                  <xs:documentation>"Percent" is used to return the commission percentage associated with the particular hotel reservation if applicable.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:attribute>
                                                            </xs:extension>
                                                          </xs:simpleContent>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="Rate" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="AdditionalGuestAmounts" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="NumCribs" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"NumCribs" is used to return the number of cribs associated with the particular hotel reservation if applicable.</xs:documentation>
                                                                    </xs:annotation>
                                                                  </xs:element>
                                                                  <xs:element name="NumExtraPersons" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"NumExtraPersons" is used to return the number of extra persons associated with the particular hotel reservation if applicable.</xs:documentation>
                                                                    </xs:annotation>
                                                                  </xs:element>
                                                                  <xs:element name="NumRollaways" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"NumRollaways" is used to return the number of rollaways associated with the particular hotel reservation if applicable.</xs:documentation>
                                                                    </xs:annotation>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="HotelRateDescripton" minOccurs="0" maxOccurs="1">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="RateDescriptions">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="RateDescription" minOccurs="0" maxOccurs="31">
                                                                          <xs:complexType>
                                                                            <xs:simpleContent>
                                                                              <xs:extension base="xs:string">
                                                                                <xs:attribute name="Id" type="xs:string"/>
                                                                              </xs:extension>
                                                                            </xs:simpleContent>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="CancelationsPolicy" type="xs:string" minOccurs="0" maxOccurs="1"/>
                                                                  <xs:element name="GuaranteePolicy" type="xs:string" minOccurs="0" maxOccurs="1"/>
                                                                  <xs:element name="DespositPolicy" type="xs:string" minOccurs="0" maxOccurs="1"/>
                                                                  <xs:element name="LateArrivalPolicy" type="xs:string" minOccurs="0" maxOccurs="1"/>
                                                                  <xs:element name="Additionals" minOccurs="0" maxOccurs="1">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Additional" minOccurs="0" maxOccurs="99">
                                                                          <xs:complexType>
                                                                            <xs:simpleContent>
                                                                              <xs:extension base="xs:string">
                                                                                <xs:attribute name="Id" type="xs:string"/>
                                                                              </xs:extension>
                                                                            </xs:simpleContent>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="HotelTotalPricing" minOccurs="0" maxOccurs="1">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="TotalTax" minOccurs="0" maxOccurs="1">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Tax" minOccurs="0" maxOccurs="4">
                                                                          <xs:complexType>
                                                                            <xs:simpleContent>
                                                                              <xs:extension base="xs:string">
                                                                                <xs:attribute name="Id" type="xs:string"/>
                                                                              </xs:extension>
                                                                            </xs:simpleContent>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                      <xs:attribute name="Amount" type="xs:string"/>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="TotalSurcharge" minOccurs="0" maxOccurs="1">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Surcharge" minOccurs="0" maxOccurs="4">
                                                                          <xs:complexType>
                                                                            <xs:simpleContent>
                                                                              <xs:extension base="xs:string">
                                                                                <xs:attribute name="Id" type="xs:string"/>
                                                                              </xs:extension>
                                                                            </xs:simpleContent>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                      <xs:attribute name="Amount" type="xs:string"/>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="ApproximateTotal" minOccurs="0" maxOccurs="1">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="AmountAndCurrency" type="xs:string"/>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="RateChange" minOccurs="0" maxOccurs="8">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Id" type="xs:string"/>
                                                                      <xs:attribute name="Amount" type="xs:string"/>
                                                                      <xs:attribute name="Effective" type="xs:string"/>
                                                                      <xs:attribute name="Surcharge" type="xs:string"/>
                                                                      <xs:attribute name="Tax" type="xs:string"/>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="Disclaimer" minOccurs="0" maxOccurs="2">
                                                                    <xs:complexType>
                                                                      <xs:simpleContent>
                                                                        <xs:extension base="xs:string">
                                                                          <xs:attribute name="Id" type="xs:string"/>
                                                                        </xs:extension>
                                                                      </xs:simpleContent>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="RateAccessCodeBooked" minOccurs="0" maxOccurs="1">
                                                              <xs:complexType>
                                                                <xs:annotation>
                                                                  <xs:documentation>"RateAccessCodeBooked" is used to return the number of Rate access code booked associated with the particular hotel reservation if applicable.</xs:documentation>
                                                                </xs:annotation>
                                                                <xs:sequence>
                                                                  <xs:element name="ClientIdentificationCode" type="xs:string" minOccurs="0">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"ClientIdentificationCode" is used to return the identification code for the vendor associated with the particular hotel reservation.</xs:documentation>
                                                                    </xs:annotation>
                                                                  </xs:element>
                                                                  <xs:element name="RateAccessCode" type="xs:string" minOccurs="0">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"RateAccessCode" is used to return the rate access code of the agency.</xs:documentation>
                                                                    </xs:annotation>
                                                                  </xs:element>
                                                                  <xs:element name="CategoryTypeCode" type="xs:string" minOccurs="0">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"CategoryTypeCode" is used to return the category type code associated with the particular hotel when applicable.</xs:documentation>
                                                                    </xs:annotation>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="RateAccessCodeRequested" type="xs:string" minOccurs="0" maxOccurs="1">
                                                              <xs:annotation>
                                                                <xs:documentation>"RateAccessCodeRequested" is used to return rate access code requested details for a particular hotel if applicable.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                          <xs:attribute name="Amount" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Amount" is used to return the rate amount.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"CurrencyCode" is used to return the currency code associated with the rate amount.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="DCS_AuxRateCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"DCS_AuxRateCode" is used to return the DCS rate code associated with the particular hotel reservation if applicable.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="RoomTypeCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"RoomTypeCode" is used to return the rate type code associated with the particular hotel reservation.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="SpecialPrefs" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Text" is used to return miscellaneous special preference-related information.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Text" is used to return miscellaneous hotel-related information.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="TimeSpan" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:annotation>
                                                      <xs:documentation>"TimeSpan" is used to return the specified stay dates associated with the particular hotel reservation.</xs:documentation>
                                                    </xs:annotation>
                                                    <xs:attribute name="Duration" type="xs:string" use="optional"/>
                                                    <xs:attribute name="End" type="spct:date" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"End" follows this format: MM-DDTHH:MM</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Start" type="spct:date" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Start" follows this format: MM-DDTHHMM</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DayOfWeekInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DayOfWeekInd" is used to return the day of the week indicator</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="LinkCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"LinkCode" is used to return the link code</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"MergedSegmentInd" is used to return the merged segment indicator associated with the particular itinerary segment if applicable.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NumberInParty" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"NumberInParty" is used to return the number of passengers associated with the particular hotel segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NumberOfUnits" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"NumberOfUnits" is used to return the number of rooms associated with the particular hotel segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Type" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Type" is used to return the segment type .</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>IsPast attribute is populated based on Hotel - TimeSpan - @End, Hotel - BasicPropertyInfo - @HotelCityCode.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Insurance" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="InsuranceDetails" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"ConfirmationNumber" is used to return the confirmation number associated with the particular insurance segment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Coverage" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="Amount" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:annotation>
                                                                <xs:documentation>"Amount" is used to return the coverage amount associated with the particular insurance segment.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="Type" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:annotation>
                                                                <xs:documentation>"Type" is used to return the coverage type associated with the particular insurance segment.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="DestinationLocation" minOccurs="0" maxOccurs="2">
                                                        <xs:complexType>
                                                          <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"LocationCode" is used to return the arrival location code associated with the particular insurance segment.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="OriginLocation" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"LocationCode" is used to return the departure location code associated with the particular insurance segment.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="Payment" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="Form" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"Form" is used to return the form of payment used to purchase the insurance.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="GivenName" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"GivenName" is used to return the policy holder's first name associated with the particular insurance segment.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                            <xs:element name="Surname" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"Surname" is used to return the policy holder's last name associated with the particular insurance segment.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="Text" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"Text" is used to return specialized instructions associated with the particular insurance segment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Vendor" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:attribute name="Code" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Code" is used to return the vendor code associated with the particular insurance segment.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="CompanyShortName" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"CompanyShortName" is used to return the vendor's name associated with the particular insurance segment.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"CurrencyCode" is used to return the insurance premium currency code associated with the particular insurance segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="End" type="spct:date" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"End" is used to return the end date of the insurance coverage. The formate is MM:DD</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="NumPolicies" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"NumPolicies" is used to return the number of policies associated with the particular insurance segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="PlanType" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"PlanType" is used to return the insurance plan type.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="PremiumAmount" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"PremiumAmount" is used to return the insurance premium amount associated with the particular insurance segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="PurchaseDate" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"PurchaseDate" is used to return the purchase date of the insurance. The formate is MM:DD</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Start" type="spct:date" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Start" is used to return the start date and time of the insurance coverage. The formate is MM:DDTHH:MM</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="StatusCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"StatusCode" is used to return the reservation status code.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Type" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Type" is used to return the type of Misc segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>It returns information if current segment is past or not. Attribute is populated based on Insurance - InsuranceDetails - @End. In this case there is no location available, thus DFW time zone will be used.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="MiscSegment" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="OriginLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the location code associated with the particular segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="LocationName" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationName" is used to return the location name associated with the particular segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                                <xs:element name="Vendor" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the vendor code associated with the particular segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DayOfWeekInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DayOfWeekInd" is used to return the day of the week indicator.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="DepartureDateTime" type="spct:date" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DepartureDateTime" is used to return the date of the segment associated with the particular segment. "DepartureDateTime" follows this format: MM:DD</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="LinkCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"LinkCode" is used to return the link code</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NumberInParty" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"NumberInParty" is used to return the number of passengers associated with the particular rail segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Type" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Type" is used to return the type of segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>It returns information if current segment is past or not. Attribute is populated based on MiscSegment - @DepartureDateTime, MiscSegment - OriginLocation - @LocationCode. There is no end date, thus it will be calculated like air segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Rail" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"ConfirmationNumber" is used to return the confirmation number associated with the particular rail segment.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="DestinationLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="ArrivalDate" type="spct:date" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"ArrivalDate" is used to return arrival date information associated with the particular rail segment.	"ArrivalDate" follows this format: MM:DD</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="ArrivalTime" type="spct:time" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"ArrivalTime" is used to return arrival time information associated with the particular rail segment. "ArrivalTime" follows this format: HH:MM</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="LocationName" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"LocationName" is used to return the arrival location name associated with the particular rail segment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Point" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Point" is used to return the arrival location point associated with the particular rail segment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the departure location code associated with the particular rail segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="IssueDate" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"IssueDate" is used to return ticket issue date-related information. "IssueDate" follows this format: MM:DD</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="OriginLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="DepartureDate" type="spct:date" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"DepartureDate" is used to return departure date information associated with the particular rail segment.	"DepartureDate" follows this format: MM-DD</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="DepartureTime" type="spct:time" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"DepartureTime" is used to return departure time information associated with the particular rail segment.	"DepartureTime" follows this format: HH:MM</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="LocationName" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"LocationName" is used to return the departure location name associated with the particular rail segment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Point" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Point" is used to return the departure location point associated with the particular rail segment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the departure location code associated with the particular rail segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="ServiceInformation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Text" is used to return miscellaneous service-related information.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="SNCF_Information" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Text" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"Text" is used to return miscellaneous SNCF-related information.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="SpaceReserved" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"SpaceReserved" is used to return space reserved-related information.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"Text" is used to return miscellaneous rail-related information.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="TicketControlNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:annotation>
                                                    <xs:documentation>"TicketControlNumber" is used to return ticket control number-related information.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="Train" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:complexType>
                                                    <xs:attribute name="Number" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Number" is used to return the number of the train, cruise, or bus associated with the particular rail segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="Vendor" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the vendor code associated with the particular rail segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DayOfWeekInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DayOfWeekInd" is used to return the day of the week indicator.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="LinkCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"LinkCode" is used to return the link code</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"MergedSegmentInd" is used to return the merged segment indicator associated with the particular rail segment if applicable.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NumberInParty" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"NumberInParty" is used to return the number of passengers associated with the particular rail segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"ResBookDesigCode" is used to return the booking class associated with the particular rail segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Type" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Type" is used to return the type of segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>It returns information if current segment is past or not. Attribute is populated based on Rail - OriginLocation - DepartureDate, Rail - OriginLocation - DepartureTime, Rail - OriginLocation - @LocationCode. There is end date included in schema, but it is never populated, this is why origin departure time and origin location will consider.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Seats" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="Seat" minOccurs="0" maxOccurs="unbounded">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="FlightSegment" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="DestinationLocation" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"LocationCode" is used to return the arrival airport code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="OriginLocation" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"LocationCode" is used to return the departure airport code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="Changed" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Changed" is used to indicate if the passenger's seat as been changed.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="NameNumber" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"NameNumber" is used return the passenger name number associated with the particular seat reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Number" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Number" is used to return the seat assignment associated with the particular seat reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"SegmentNumber" is used to return the itinerary segment number that the seat is related to.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="SegmentStatus" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"SegmentStatus" is used to return the segment status associated with the particular seat reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="SmokingPreference" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"SmokingPreference" is used to indicate the smoking preference associated with the particular seat reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Status" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Status" is used to return the seat status code.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Type" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Type" is used to return the seat type associated with the particular seat reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="TypeTwo" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"TypeTwo" is used to return the seat type associated with the particular seat reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Id" type="xs:string" use="optional"/>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Surface" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="ArrivalDepartureIdentifier" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"ArrivalDepartureIdentifier" is used to return the arrival/departure indicator associated with the particular segment.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="FlightSegment" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="DestinationLocation" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="MarketingAirline" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                          <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="OriginLocation" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"LocationCode" is used to return the service city location code associated with the particular segment.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="DepartureDateTime" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>DepartureDateTime" is used to return the departure date/time associated with the particular segment. "DepartureDateTime" follows this format: MM:DD</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"FlightNumber" is used to return the flight number associated with the particular segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="OriginLocation" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the service city location code associated with the particular segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="POS" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"POS" is used to return the point of sale location associated with the particular segment.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="Text" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"Text" is used to return miscellaneous free text associated with the particular segment.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="Vendor" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:attribute name="Code" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Code" is used to return the vendor code associated with the particular segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DepartureDateTime" type="spct:date" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DepartureDateTime" is used to return the date and time associated with the particular tour reservation.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NumberInParty" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"NumberInParty" is used to return the number of passengers associated with the particular tour reservation.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Type" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Type" is used to return the segment type.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>It returns information if current segment is past or not. Attribute is populated based on Surface - @DepartureDateTime, Surface - OriginLocation - @LocationCode. There is no end date, thus it will be calculated like air segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Tour" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="TourDetails" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"ConfirmationNumber" is used to return the confirmation number associated with the particular tour reservation.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Duration" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:attribute name="NumDays" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"NumDays" is used to return the number of days associated with the particular tour reservation.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="Extensions" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Extensions" is used to return extension-related information associated with the particular tour reservation.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Features" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Features" is used to return feature-related information associated with the particular tour reservation.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="HotelInformation" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="Room" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="OccupancyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"OccupancyCode" is used to return the hotel room occupancy code associated with the particular tour reservation if applicable.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="Type" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Type" is used to return the hotel room type associated with the particular tour reservation if applicable.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="Location" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Location" is used to return location-related information associated with the particular tour reservation.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Meals" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Meals" is used to return meal-related information associated with the particular tour reservation.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Options" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Options" is used to return option-related information associated with the particular tour reservation.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Price" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:complexType>
                                                          <xs:attribute name="Amount" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Amount" is used to return price-related information associated with the particular tour reservation.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="ServiceInformation" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:annotation>
                                                                <xs:documentation>"Text" is used to return miscellaneous service-related free text.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                          <xs:documentation>"Text" is used to return miscellaneous tour-related information.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="VehicleInformation" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                              <xs:annotation>
                                                                <xs:documentation>"Text" is used to return miscellaneous vehicle-related free text if applicable.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LocationCode" is used to return the location code associated with the particular tour reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Name" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Name" is used to return the name associated with the particular tour reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Number" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Number" is used to return number associated with the particular tour reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="ServiceCityName" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ServiceCityName" is used to return the service city name associated with the particular tour reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="Vendor" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"Vendor" is used to return the tour vendor code associated with the particular tour reservation.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DayOfWeekInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DayOfWeekInd" is used to return the day of the week indicator.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="DepartureDateTime" type="spct:date" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DepartureDateTime" is used to return the date and time associated with the particular tour reservation.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="LinkCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"LinkCode" is used to return the link code</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"MergedSegmentInd" is used to return the merged segment indicator associated with the particular itinerary segment if applicable.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="NumberInParty" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"NumberInParty" is used to return the number of passengers associated with the particular tour reservation.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>It returns information if current segment is past or not. Attribute is populated based on Tour - @DepartureDateTime, Tour - TourDetails - @LocationCode, Tour - TourDetails - Duration - NumDays. There is no end date, but here is duration time, thus end date will be calculated based on start date and duration time. If duration time will not be populated then IsPast attribute will be calculated like for air segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Vehicle" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"ConfirmationNumber" is used to return the vehicle rental confirmation number.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="DirectConnect" type="xs:string" minOccurs="0">
                                                  <xs:annotation>
                                                    <xs:documentation>"DirectConnect" is used to return miscellaneous direct connect-related information.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:element>
                                                <xs:element name="POS" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="Source" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="RequestorID" type="xs:string" minOccurs="0">
                                                              <xs:annotation>
                                                                <xs:documentation>"RequestorID" is used to return the ID of the individual who created the particular vehicle reservation.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="VehRentalCore" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:annotation>
                                                      <xs:documentation>"VehRentalCore" is used to return vehicle rental rental time-related information.</xs:documentation>
                                                    </xs:annotation>
                                                    <xs:sequence>
                                                      <xs:element name="DropOffLocationDetails" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"LocationCode" is used to return the vehicle drop offf rental location code.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="FlightSegment" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="MarketingAirline" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:attribute name="Code" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Code" is used to return the marketing airline code associated with the particular vehicle segment.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"FlightNumber" is used to return the flight number associated with the particular vehicle segment.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                          <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"FlightNumber" is used to return the flight number associated with the particular flight segment.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="LocationDetails" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="ContactNumbers" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="ContactNumber" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Fax" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Fax" is used to return the fax number associated with the particular location.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="Phone" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Phone" is used to return the phone number associated with the particular location.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                          <xs:attribute name="ExtendedLocationCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"ExtendedLocationCode" is used to return the extended vehicle pick up rental location code.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="LocationCode" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"LocationCode" is used to return the vehicle pick up rental location code.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="LocationName" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"LocationName" is used to return the vehicle pick up rental location name.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                    <xs:attribute name="PickUpDateTime" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"PickUpDateTime" follows this format: MM-DDTHH:MM</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="PickUpDay" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"PickUpDay" returns the Pick up day information</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="ReturnDateTime" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ReturnDateTime" follows this format: MM-DDTHH:MM</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                                <xs:element name="VehVendorAvail" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:sequence>
                                                      <xs:element name="VehResCore" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:sequence>
                                                            <xs:element name="CollectionDeliveryInfo" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="CollectionInfo" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Address" minOccurs="0">
                                                                          <xs:complexType>
                                                                            <xs:sequence>
                                                                              <xs:element name="AddressLine" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"AddressLine" is used to return the collection site address associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                              <xs:element name="CityName" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"CityName" is used to return the collection site city name associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                              <xs:element name="CountryCode" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"CountryCode" is used to return the collection site country code associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                              <xs:element name="PostalCode" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"PostalCode" is used to return the collection site postal code associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                              <xs:element name="StateCountyProv" minOccurs="0">
                                                                                <xs:complexType>
                                                                                  <xs:attribute name="StateCode" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>"StateCode" is used to return the collection site state code associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                </xs:complexType>
                                                                              </xs:element>
                                                                              <xs:element name="StreetNmbr" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"StreetNmbr" is used to return the collection site street address associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                            </xs:sequence>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                        <xs:element name="ContactNumbers" minOccurs="0">
                                                                          <xs:complexType>
                                                                            <xs:sequence>
                                                                              <xs:element name="ContactNumber" minOccurs="0">
                                                                                <xs:complexType>
                                                                                  <xs:attribute name="Phone" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>"Phone" is used to return the collection site phone number associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                </xs:complexType>
                                                                              </xs:element>
                                                                            </xs:sequence>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                      <xs:attribute name="SiteID" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"SiteID" is used to return the collection site ID associated with the vehicle reservation if applicable.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="SiteName" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"SiteName" is used to return the collection site name associated with the vehicle reservation if applicable.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="DeliveryInfo" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Address" minOccurs="0">
                                                                          <xs:complexType>
                                                                            <xs:sequence>
                                                                              <xs:element name="AddressLine" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"AddressLine" is used to return the delivery site address associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                              <xs:element name="CityName" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"CityName" is used to return the delivery site city name associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                              <xs:element name="CountryCode" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"CountryCode" is used to return the delivery site country code associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                              <xs:element name="PostalCode" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"PostalCode" is used to return the delivery site postal code associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                              <xs:element name="StateCountyProv" minOccurs="0">
                                                                                <xs:complexType>
                                                                                  <xs:attribute name="StateCode" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>"StateCode" is used to return the delivery site state code associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                </xs:complexType>
                                                                              </xs:element>
                                                                              <xs:element name="StreetNmbr" type="xs:string" minOccurs="0">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>"StreetNmbr" is used to return the delivery site street address associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                </xs:annotation>
                                                                              </xs:element>
                                                                            </xs:sequence>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                        <xs:element name="CollectionFee" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"CollectionFee" is used to return the Collection fee details associated with the vehicle reservation if applicable.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                        <xs:element name="ContactNumbers" minOccurs="0">
                                                                          <xs:complexType>
                                                                            <xs:sequence>
                                                                              <xs:element name="ContactNumber" minOccurs="0">
                                                                                <xs:complexType>
                                                                                  <xs:attribute name="Phone" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>"Phone" is used to return the delivery site phone number associated with the vehicle reservation if applicable.</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                </xs:complexType>
                                                                              </xs:element>
                                                                            </xs:sequence>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                        <xs:element name="Text" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"Text" is used to return miscellaneous delivery-related text.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                      <xs:attribute name="SiteID" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"SiteID" is used to return the collection site ID associated with the vehicle reservation if applicable.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="SiteName" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"SiteName" is used to return the collection site name associated with the vehicle reservation if applicable.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="GuaranteePrepaid" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="CancellationRefundAmount" minOccurs="0" maxOccurs="4">
                                                                    <xs:complexType>
                                                                      <xs:annotation>
                                                                        <xs:documentation>"CancellationRefundAmount" is used to return the .../CancellationRefundAmount amount or percentage.</xs:documentation>
                                                                      </xs:annotation>
                                                                      <xs:simpleContent>
                                                                        <xs:extension base="xs:string">
                                                                          <xs:attribute name="NumDays" type="xs:string" use="optional">
                                                                            <xs:annotation>
                                                                              <xs:documentation>"NumDays" is used to return the number of days associated with the particular .../CancellationRefundAmount.</xs:documentation>
                                                                            </xs:annotation>
                                                                          </xs:attribute>
                                                                        </xs:extension>
                                                                      </xs:simpleContent>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                                <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Amount" is used to return the guarantee amount.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="AmountPercentage" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"AmountPercentage" is used to indicate whether the CancellationRefundAmount is an amount or a percentage.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"CurrencyCode" is used to return the guarantee currency code.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="Ind" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>"Ind" is used to return the type of guarantee, i.e. guarantee or a prepaid.</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="PricedEquip" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="Equipment" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="EquipType" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"EquipType" is used to return the category of vehicle associated with the vehicle rental.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="Quantity" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Quantity" is used to return the number of reserved vehicles associated with the vehicle rental.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="SpecialEquip" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"SpecialEquip" is used to return special equipment-related information.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="SpecialEquipConfirmed" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"SpecialEquipConfirmed" is used to denote whether or not the special equipment is confirmed.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="RentalRate" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:annotation>
                                                                  <xs:documentation>"RentalRate" is used to return vehicle rate-related information.</xs:documentation>
                                                                </xs:annotation>
                                                                <xs:sequence>
                                                                  <xs:element name="Billing" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="Number" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Number" is used to return the billing number.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="Reference" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Reference" is used to return the billing reference number.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="Client" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="ID" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"ID" is used to return the client ID associated with the vehicle reservation if applicable.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="Corporate" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="ID" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"ID" is used to return the corporate ID associated with the vehicle reservation if applicable.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="CustLoyalty" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="MembershipID" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"MembershipID" is used to return the frequent flyer number associated with the vehicle reservation if applicable.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="InvoiceRemarks" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="5">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"Text" is used to return miscellaneous invoice remark-related information if applicable.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="Remarks" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Text" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"Text" is used to return miscellaneous remark-related information if applicable.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="ReserveUnderName" type="xs:string" minOccurs="0">
                                                                    <xs:annotation>
                                                                      <xs:documentation>"ReserveUnderName" is used to return the name of the customer associated with the vehicle reservation.</xs:documentation>
                                                                    </xs:annotation>
                                                                  </xs:element>
                                                                  <xs:element name="ServiceInformation" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Text" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"Text" is used to return service-related information.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="TourCode" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Text" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"Text" is used to return tour code-related information.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="VehicleTypes" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="VehType" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"VehType" is used to return the vehicle type associated with the vehicle reservation.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                        <xs:element name="UpgradedVehType" type="xs:string" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>Vehicle Upgrade field – indicates upgrade field provided by supplier – ‘/UPG-@ECAR’</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                  <xs:element name="Voucher" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:attribute name="BillingNumber" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"BillingNumber" used to return the voucher billing number associated with the vehicle reservation if applicable.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="Format" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Format" is used to return the voucher format associated with the vehicle reservation if applicable.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="ID" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"ID" is used to return the voucher ID associated with the vehicle reservation if applicable.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="Type" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"Type" is used to return the type of voucher associated with the vehicle reservation if applicable.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                                <xs:attribute name="Changed" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>‘@’ preceding rate item or any other car segment field indicating update by car supplier - /RG-¤USD52.72 UNL DY XH8.79 UNL</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="GuaranteedQuoted" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>Indication of Guaranteed or Subject to Change Rate – ‘/RG-’ and ‘/RQ-’</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="RateCode" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>Rate item Rate Code – ‘/RC-¤STDR’</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                                <xs:attribute name="STM_RatePlan" type="xs:string" use="optional">
                                                                  <xs:annotation>
                                                                    <xs:documentation>Rate item rate plan – ‘/RG-¤USD52.72 UNL DY XH8.79 UNL’</xs:documentation>
                                                                  </xs:annotation>
                                                                </xs:attribute>
                                                              </xs:complexType>
                                                            </xs:element>
                                                            <xs:element name="VehicleCharges" minOccurs="0">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="VehicleCharge" minOccurs="0">
                                                                    <xs:complexType>
                                                                      <xs:sequence>
                                                                        <xs:element name="Amount" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                                                          <xs:annotation>
                                                                            <xs:documentation>"Amount" is used to return the vehicle charge amount.</xs:documentation>
                                                                          </xs:annotation>
                                                                        </xs:element>
                                                                        <xs:element name="ChargeDetails" minOccurs="0">
                                                                          <xs:annotation>
                                                                            <xs:documentation>Car segment Approximate price fields – ‘/AP-¤USD281.27 UNL 3DY 0HR 41.97SSQ 123.11MC/RC-¤STDR/CF-G31214927E8-‘</xs:documentation>
                                                                          </xs:annotation>
                                                                          <xs:complexType>
                                                                            <xs:sequence>
                                                                              <xs:element name="ApproximateTotalCharge" minOccurs="0" maxOccurs="20">
                                                                                <xs:annotation>
                                                                                  <xs:documentation>‘/AP-¤USD281.27’</xs:documentation>
                                                                                </xs:annotation>
                                                                                <xs:complexType>
                                                                                  <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>‘/AP-¤USD281.27’</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                  <xs:attribute name="MileageAllowance" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>Unlimited or Free Miles allowed – ‘UNL’</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                  <xs:attribute name="NumDays" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>Number of days of rental – ‘3DY 0HR’</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                  <xs:attribute name="NumHours" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>Number of hours of rental – ‘3DY 0HR’</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                  <xs:attribute name="RateType" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>???</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                  <xs:attribute name="TotalMandatoryCharges" type="xs:string" use="optional">
                                                                                    <xs:annotation>
                                                                                      <xs:documentation>Mandatory Charges – Taxes + Fees + etc… - ‘123.11MC’</xs:documentation>
                                                                                    </xs:annotation>
                                                                                  </xs:attribute>
                                                                                </xs:complexType>
                                                                              </xs:element>
                                                                            </xs:sequence>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                        <xs:element name="Commission" minOccurs="0">
                                                                          <xs:complexType>
                                                                            <xs:attribute name="Amount" type="xs:string" use="optional">
                                                                              <xs:annotation>
                                                                                <xs:documentation>"Amount" is used to return the commission amount if applicable.</xs:documentation>
                                                                              </xs:annotation>
                                                                            </xs:attribute>
                                                                            <xs:attribute name="Percent" type="xs:string" use="optional">
                                                                              <xs:annotation>
                                                                                <xs:documentation>"Percent" is used to return the commission percentage if applicable.</xs:documentation>
                                                                              </xs:annotation>
                                                                            </xs:attribute>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                        <xs:element name="Mileage" minOccurs="0">
                                                                          <xs:complexType>
                                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional">
                                                                              <xs:annotation>
                                                                                <xs:documentation>"CurrencyCode" is used to return the currency code associated with mileage charges.</xs:documentation>
                                                                              </xs:annotation>
                                                                            </xs:attribute>
                                                                            <xs:attribute name="ExtraMileageCharge" type="xs:string" use="optional">
                                                                              <xs:annotation>
                                                                                <xs:documentation>"ExtraMileageCharge" is used to return extra mileage charge-related information.</xs:documentation>
                                                                              </xs:annotation>
                                                                            </xs:attribute>
                                                                            <xs:attribute name="UnitOfMeasure" type="xs:string" use="optional">
                                                                              <xs:annotation>
                                                                                <xs:documentation>"UnitOfMeasure" is used to return the unit of measurement, i.e. miles or kilometers.</xs:documentation>
                                                                              </xs:annotation>
                                                                            </xs:attribute>
                                                                          </xs:complexType>
                                                                        </xs:element>
                                                                      </xs:sequence>
                                                                      <xs:attribute name="DropOffCharge" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"DropOffCharge" is used to return drop off charge amount.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                      <xs:attribute name="GuaranteeInd" type="xs:string" use="optional">
                                                                        <xs:annotation>
                                                                          <xs:documentation>"GuaranteedInd" is used to return the type of guarantee associated with the vehicle rental.</xs:documentation>
                                                                        </xs:annotation>
                                                                      </xs:attribute>
                                                                    </xs:complexType>
                                                                  </xs:element>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="Vendor" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:attribute name="Code" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Code" is used to return the vehicle vendor code.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="CompanyShortName" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"CompanyShortName" is used to return the company name associated with the particular vehicle vendor code.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                    </xs:sequence>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                              <xs:attribute name="DayOfWeekInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"DayOfWeekInd" is used to return the day of the week indicator.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="LinkCode" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"LinkCode" is used to return the link code</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"MergedSegmentInd" is used to return the merged segment indicator associated with the particular itinerary segment if applicable.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="Status" type="xs:string" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>"Status" is used to return the status code associated with the particular itinerary segment.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                              <xs:attribute name="IsPast" type="xs:boolean" use="optional">
                                                <xs:annotation>
                                                  <xs:documentation>It returns information if current segment is past or not. Attribute is populated based on Vehicle - VehRentalCore - @ReturnDateTime, Vehicle - VehRentalCore - DropOffLocationDetails - @LocationCode.</xs:documentation>
                                                </xs:annotation>
                                              </xs:attribute>
                                            </xs:complexType>
                                          </xs:element>
                                          <xs:element name="Product" type="ProductType" minOccurs="0"/>
                                          <xs:element name="Ancillaries" minOccurs="0">
                                            <xs:complexType>
                                              <xs:sequence>
                                                <xs:element name="AncillaryService" minOccurs="0">
                                                  <xs:complexType>
                                                    <xs:annotation>
                                                      <xs:documentation>"AncillaryService" element is used as a container for information about particular ancillary service.</xs:documentation>
                                                    </xs:annotation>
                                                    <xs:sequence>
                                                      <xs:element name="CommercialName" type="xs:string">
                                                        <xs:annotation>
                                                          <xs:documentation>"CommercialName" indicates the name of requested ancillary service.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="RficCode" type="xs:string">
                                                        <xs:annotation>
                                                          <xs:documentation>"RficCode" indicates the reason of issuing the EMD for the service associated to the "RficSubcode".</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="RficSubcode" type="xs:string">
                                                        <xs:annotation>
                                                          <xs:documentation>"RficSubcode" is used to identify the individual ancillary service.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="EMDNumber" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"EMDNumber" returns the EMD Number issued for the service</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="EMDCoupon" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"EMDCoupon" is used to identify EMD coupon details for the service .</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="SSRCode" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"SSRCode" is used to identify the defined SSR code applicable for the service.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="OwningCarrierCode" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"OwningCarrierCode" indicates airline or ATPCO vendor code.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="SsimCode" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"SsimCode" indicates Standard Schedules Information Manual (SSIM) code</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Vendor" type="xs:string">
                                                        <xs:annotation>
                                                          <xs:documentation>"Vendor" indicates service provider like "VA" or "MMGR"(Merchandising manager).</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="EMDType" type="xs:string">
                                                        <xs:annotation>
                                                          <xs:documentation>"EMDType" indicates type of EMD for the service associated to the "Rfic Subcode".</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="EquivalentPrice" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:annotation>
                                                            <xs:documentation>"EquivalentPrice" provides with the details of the Equivalent Price in the response.</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:attribute name="Price" type="xs:decimal">
                                                            <xs:annotation>
                                                              <xs:documentation>"Price" is used to Equivalent price amount if applicable.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="Currency" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Currency" is used to return the currency used for pricing.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="TTLPrice" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:annotation>
                                                            <xs:documentation>"TTLPrice" indicates one unit price of the ancillary service after taxation</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:attribute name="Price" type="xs:decimal">
                                                            <xs:annotation>
                                                              <xs:documentation>"Price" is used to return the TTL price.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="Currency" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Currency" is used to return the currency used for pricing.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="PortionOfTravelIndicator" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"PortionOfTravelIndicator" Indicator for O and D / S - segment P - portion.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="OriginalBasePrice" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:annotation>
                                                            <xs:documentation>"OrginalBasePrice" indicates one unit price of the ancillary service before taxation.</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:attribute name="Price" type="xs:decimal">
                                                            <xs:annotation>
                                                              <xs:documentation>"Price" is used to return the Original base price .</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="Currency" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Currency" is used to return the currency used for pricing.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="PassengerTypeCode" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"PassengerTypeCode" indicates indicates the type of passenger to whom the record applies like adult / child.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="BoardPoint" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"BoardPoint" indicates departure city.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="OffPoint" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"OffPoint" indicates arrival city.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="TaxesIncluded" type="xs:boolean" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"TaxesIncluded" indicates if service fee amounts are inclusive of applicable taxes.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="Taxes" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:annotation>
                                                            <xs:documentation>"Taxes" element is used as container for taxes associated with particular ancillary.</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:sequence>
                                                            <xs:element name="Tax" minOccurs="0" maxOccurs="99">
                                                              <xs:complexType>
                                                                <xs:attribute name="TaxAmount" type="xs:decimal"/>
                                                                <xs:attribute name="TaxCode" type="xs:string"/>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="TicketCouponNumberAssociation" minOccurs="0" maxOccurs="4">
                                                        <xs:complexType>
                                                          <xs:annotation>
                                                            <xs:documentation>"TicketCouponNumberAssociation" indicates Etkt coupon number to which the EMD is associated.</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:sequence>
                                                            <xs:element name="TicketCouponNumber" type="xs:short" minOccurs="0" maxOccurs="16"/>
                                                          </xs:sequence>
                                                          <xs:attribute name="TicketReferenceNumber" type="xs:string" use="optional"/>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="TotalOriginalBasePrice" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:annotation>
                                                            <xs:documentation>"TotalOrginalBasePrice" indicates "OrginalBasePrice" multiplied by "NumberOfItems".</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:attribute name="Price" type="xs:decimal">
                                                            <xs:annotation>
                                                              <xs:documentation>"Price" is used to returns the total Original base price.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="Currency" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Currency" is used to return the currency used for pricing.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="TotalEquivalentPrice" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:annotation>
                                                            <xs:documentation>"TotalEquivalentPrice" indicates Total Equivalent Price.</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:attribute name="Price" type="xs:decimal">
                                                            <xs:annotation>
                                                              <xs:documentation>"Price" is used to returns the total Original base price.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="Currency" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Currency" is used to return the currency used for pricing.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="TotalTTLPrice" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:annotation>
                                                            <xs:documentation>"TotalTTLPrice" indicates "TTLPrice" multiplied by "NumberOfItems".</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:attribute name="Price" type="xs:decimal">
                                                            <xs:annotation>
                                                              <xs:documentation>"Price" is used to returns the total TTL price.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                          <xs:attribute name="Currency" type="xs:string" use="optional">
                                                            <xs:annotation>
                                                              <xs:documentation>"Currency" is used to return the currency used for pricing.</xs:documentation>
                                                            </xs:annotation>
                                                          </xs:attribute>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="TotalTaxes" minOccurs="0">
                                                        <xs:complexType>
                                                          <xs:annotation>
                                                            <xs:documentation>"TotalTaxes" element is used as a container for taxes associated with particular ancillary.</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:sequence>
                                                            <xs:element name="Tax" minOccurs="0" maxOccurs="99">
                                                              <xs:complexType>
                                                                <xs:sequence>
                                                                  <xs:element name="TaxAmount" type="xs:decimal"/>
                                                                  <xs:element name="TaxCode" type="xs:string"/>
                                                                </xs:sequence>
                                                              </xs:complexType>
                                                            </xs:element>
                                                          </xs:sequence>
                                                        </xs:complexType>
                                                      </xs:element>
                                                      <xs:element name="FrequentFlyerTier" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"FrequentFlyerTier" indicates FQTV carrier filed tier level</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="BookingSource" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"BookingSource" indicates source of ancillary service request e.g. 01=TTY GDS,02=TTY OA,03=SSW,04=Kiosk,05/06=Interact, 07=Arline Direct Channel, 08=PRS.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="FeeWaiveReason" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"FeeWaiveReason" indicates Reason for fee waive/override.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="FulfillmentType" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"FulfillmentType" indicates SSR to be sent for fulfilment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="AaPayOriginalSeat" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"AaPayOriginalSeat" indicates Support for AA Pay for seats - original seat assigned - will not be updated if seat is changed.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="PdcSeat" type="xs:string" minOccurs="0"/>
                                                      <xs:element name="EquipmentType" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"EquipmetType" indicates aircraft type used for the flight as per IATA standard.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="AaPayOptionalStatus" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"AaPayOptionalStatus" indicates Support for AA Pay for seats .</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="TTYConfirmationTimestamp" type="xs:dateTime" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"TTYConfirmationTimestamp" indicates Time stamp when AE teletype confirmation received from airline .</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="PurchaseTimestamp" type="xs:dateTime" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"PurchaseTimestamp" indicates Purchase by time stamp.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="BrandedFareId" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"BrandedFareId" indicates branded fare ID.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="GroupCode" type="xs:string">
                                                        <xs:annotation>
                                                          <xs:documentation>"GroupCode" indicates type of ancillary service as per IATA standard (2 letter code defined in ARIMP manual). Following codes can be displayed: BG(Baggage),GT(Ground transportation and non-air services),IE(In-flight entertainment),LG(Lounge),MD(Medical) ML(Meal),PT(Pets),SA(Pre-reserved seat assignment,UN(Unaccompanied travel(escort))</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="TourCode" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"TourCode" indicates the tour code used .</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="TicketUsedForEMDPricing" type="xs:string" minOccurs="0">
                                                        <xs:annotation>
                                                          <xs:documentation>"TicketUsedForEMDPricing" indicates Ticket used for EMD pricing.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:element>
                                                      <xs:element name="EMDConsummedAtIssuance" minOccurs="0">
                                                        <xs:simpleType>
                                                          <xs:annotation>
                                                            <xs:documentation>"EMDConsumedAtIssuance" indicates that a coupon of an EMD shall be considered "used" at issuance time as defined by the fee owner of the service. It can have following values: Y(Consumed at Issuance), Blank(No application).</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:restriction base="xs:string">
                                                            <xs:enumeration value="Y"/>
                                                            <xs:enumeration value="N"/>
                                                            <xs:enumeration value=" "/>
                                                          </xs:restriction>
                                                        </xs:simpleType>
                                                      </xs:element>
                                                      <xs:element name="TaxExemption" minOccurs="0">
                                                        <xs:simpleType>
                                                          <xs:annotation>
                                                            <xs:documentation>"TaxExemption" indicates if the tax is exempted</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:restriction base="xs:string">
                                                            <xs:enumeration value="Y"/>
                                                            <xs:enumeration value="N"/>
                                                          </xs:restriction>
                                                        </xs:simpleType>
                                                      </xs:element>
                                                      <xs:element name="PresentTo" type="xs:string" minOccurs="0"/>
                                                      <xs:element name="AtCity" type="xs:string" minOccurs="0"/>
                                                      <xs:element name="Endorsements" type="xs:string" minOccurs="0"/>
                                                      <xs:element name="StationIndicator" minOccurs="0">
                                                        <xs:simpleType>
                                                          <xs:restriction base="xs:string">
                                                            <xs:enumeration value="D"/>
                                                            <xs:enumeration value="I"/>
                                                          </xs:restriction>
                                                        </xs:simpleType>
                                                      </xs:element>
                                                      <xs:element name="ServiceCity" type="xs:string" minOccurs="0"/>
                                                      <xs:choice minOccurs="0">
                                                        <xs:element name="Segment" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:annotation>
                                                              <xs:documentation>"Segment" element is used as a container for segment, assiociated with particular ancillary service, details.</xs:documentation>
                                                            </xs:annotation>
                                                            <xs:sequence>
                                                              <xs:element name="AirlineCode" type="xs:string" minOccurs="0"/>
                                                              <xs:element name="FlightNumber" type="xs:string" minOccurs="0"/>
                                                              <xs:element name="ClassOfService" type="xs:string" minOccurs="0"/>
                                                              <xs:element name="DepartureDate" type="xs:date" minOccurs="0"/>
                                                              <xs:element name="BoardPoint" type="xs:string" minOccurs="0">
                                                                <xs:annotation>
                                                                  <xs:documentation>"BoardPoint" indicates departure city.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:element>
                                                              <xs:element name="OffPoint" type="xs:string" minOccurs="0">
                                                                <xs:annotation>
                                                                  <xs:documentation>"OffPoint" indicates arrival city.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:element>
                                                              <xs:element name="EquipmentType" type="xs:string" minOccurs="0">
                                                                <xs:annotation>
                                                                  <xs:documentation>"EquipmetType" indicates aircraft type used for the flight as per IATA standard.</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:element>
                                                              <xs:element name="ETicketNumber" type="xs:string" minOccurs="0">
                                                                <xs:annotation>
                                                                  <xs:documentation>"ETicketNumber" returns the ETicketNumber</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:element>
                                                              <xs:element name="ETicketCoupon" type="xs:string" minOccurs="0"/>
                                                              <xs:element name="EMDNumber" type="xs:string" minOccurs="0">
                                                                <xs:annotation>
                                                                  <xs:documentation>"EMDNumber" returns the EMD Number issued for the service</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:element>
                                                              <xs:element name="EMDCoupon" type="xs:string" minOccurs="0">
                                                                <xs:annotation>
                                                                  <xs:documentation>"EMDCoupon" is used to identify EMD coupon details for the service .</xs:documentation>
                                                                </xs:annotation>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="id" type="xs:string" use="optional"/>
                                                            <xs:attribute name="sequence" use="optional">
                                                              <xs:simpleType>
                                                                <xs:annotation>
                                                                  <xs:documentation>Used for Numeric values,	from 1 to 9999 inclusive.</xs:documentation>
                                                                </xs:annotation>
                                                                <xs:restriction base="xs:integer">
                                                                  <xs:minInclusive value="0"/>
                                                                  <xs:maxInclusive value="99999"/>
                                                                </xs:restriction>
                                                              </xs:simpleType>
                                                            </xs:attribute>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="TravelPortions" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:annotation>
                                                              <xs:documentation>"TravelPortions" element is used as a container for Travel portion, assiociated with particular ancillary service, details.</xs:documentation>
                                                            </xs:annotation>
                                                            <xs:sequence>
                                                              <xs:element name="TravelPortion" minOccurs="0" maxOccurs="unbounded">
                                                                <xs:complexType>
                                                                  <xs:annotation>
                                                                    <xs:documentation>"TravelPortions" element is used as a container for Travel portion, associated with particular ancillary service details.</xs:documentation>
                                                                  </xs:annotation>
                                                                  <xs:sequence>
                                                                    <xs:element name="AirlineCode" type="xs:string" minOccurs="0"/>
                                                                    <xs:element name="FlightNumber" type="xs:string" minOccurs="0"/>
                                                                    <xs:element name="ClassOfService" type="xs:string" minOccurs="0"/>
                                                                    <xs:element name="DepartureDate" type="xs:date" minOccurs="0"/>
                                                                    <xs:element name="BoardPoint" type="xs:string" minOccurs="0">
                                                                      <xs:annotation>
                                                                        <xs:documentation>"BoardPoint" indicates departure city.</xs:documentation>
                                                                      </xs:annotation>
                                                                    </xs:element>
                                                                    <xs:element name="OffPoint" type="xs:string" minOccurs="0">
                                                                      <xs:annotation>
                                                                        <xs:documentation>"OffPoint" indicates arrival city.</xs:documentation>
                                                                      </xs:annotation>
                                                                    </xs:element>
                                                                    <xs:element name="EquipmentType" type="xs:string" minOccurs="0">
                                                                      <xs:annotation>
                                                                        <xs:documentation>"EquipmetType" indicates aircraft type used for the flight as per IATA standard.</xs:documentation>
                                                                      </xs:annotation>
                                                                    </xs:element>
                                                                    <xs:element name="ETicketNumber" type="xs:string" minOccurs="0">
                                                                      <xs:annotation>
                                                                        <xs:documentation>"ETicketNumber" returns the ETicketNumber</xs:documentation>
                                                                      </xs:annotation>
                                                                    </xs:element>
                                                                    <xs:element name="ETicketCoupon" type="xs:string" minOccurs="0"/>
                                                                    <xs:element name="EMDNumber" type="xs:string" minOccurs="0">
                                                                      <xs:annotation>
                                                                        <xs:documentation>"EMDNumber" returns the EMD Number issued for the service</xs:documentation>
                                                                      </xs:annotation>
                                                                    </xs:element>
                                                                    <xs:element name="EMDCoupon" type="xs:string" minOccurs="0">
                                                                      <xs:annotation>
                                                                        <xs:documentation>"EMDCoupon" is used to identify EMD coupon details for the service .</xs:documentation>
                                                                      </xs:annotation>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                  <xs:attribute name="id" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="sequence" use="optional">
                                                                    <xs:simpleType>
                                                                      <xs:annotation>
                                                                        <xs:documentation>Used for Numeric	values, from 1 to 9999 inclusive.</xs:documentation>
                                                                      </xs:annotation>
                                                                      <xs:restriction base="xs:integer">
                                                                        <xs:minInclusive value="0"/>
                                                                        <xs:maxInclusive value="99999"/>
                                                                      </xs:restriction>
                                                                    </xs:simpleType>
                                                                  </xs:attribute>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:choice>
                                                    </xs:sequence>
                                                    <xs:attribute name="id" type="xs:string">
                                                      <xs:annotation>
                                                        <xs:documentation>"id" is used to return the id of AncillaryService</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="SequenceNumber" type="xs:string">
                                                      <xs:annotation>
                                                        <xs:documentation>"SequenceNumber" is used to return the sequence number of AncillaryService</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="NameNumber" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"NameNumber" is used to return the passenger name number associated with the particular seat reservation</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"SegmentNumber" is used to return the itinerary segment number.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="NumberOfItems" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"NumberOfItems" is is used to return number of items being requested/sold</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="ActionCode" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ActionCode" is used to return the request status</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="SegmentIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"SegmentIndicator" is used to indicates if ancillary service is associated with particular segment or more than one segment.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="FirstTravelDate" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"FirstTravelDate" is used to indicates the earliest travel date permitted for the service being processed</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="LastTravelDate" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"LastTravelDate" is used to indicate the last travel date permitted for the service being processed.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="BookingIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"BookingIndicator" is used to indicates booking method requirement e.g. carrier must be contacted. If blank then there is no specific booking requirement.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="RefundIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"RefundIndicator" is used to indicate if refund is applicable or not. If left blank then it suggests that this indicator is not applicable for particular ancillary service.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="CommisionIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"CommisionIndicator" is used to return if the ancillary service is commissionable. (service is commissionable),N(service is not commissionable). If left blank then it suggests that this indicator is not applicable for particular ancillary service</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="InterlineIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"InterlineIndicator" indicates if ancillary service allows interline settlement. Y(service allows interline settlement),N(service doesn't allow interline settlement. If left blank then it suggests that this indicator is not applicable for particular ancillary service</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="FeeApplicationIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"FeeApplicationIndicator" is used to return if indicates if the fee is based on a flight segment, multiple flight segments or entire ticket</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="RefundFormIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"RefundFormIndicator" is used to return refund form applicable . Y(service is refundable),N(service is non-refundable)</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="FareGuaranteedIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"FareGuaranteedIndicator" is used to conform the if the fare is guaranteed.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="ServiceChargeIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"ServiceChargeIndicator" is the fee for the service</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="AdvancePurchaseIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"AdvancePurchaseIndicator" Specifies that the data in the record only applies when the service is purchased at the same time as the passenger's (travel) ticket is issued.</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="TaxIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"TaxIndicator" is used to return the Tax indicator details in the response</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="TicketingIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"TicketingIndicator" is used to return the ticketing indicator</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="EmdPaperIndicator" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"EmdPaperIndicator" is used to specify if it EMD or paper doc</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                    <xs:attribute name="SeatRequestTransactionID" type="xs:string" use="optional">
                                                      <xs:annotation>
                                                        <xs:documentation>"SeatRequestTransactionID" is the transaction ID received from airlines regarding seat request</xs:documentation>
                                                      </xs:annotation>
                                                    </xs:attribute>
                                                  </xs:complexType>
                                                </xs:element>
                                              </xs:sequence>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                        <xs:attribute name="RPH" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"RPH" is used as a reference placeholder.</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                        <xs:attribute name="Id" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Ticketing" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="PersonName" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>PersonName is used to return the passenger name associated with the particular ticketing line	Example: NameNumber="1.1" TESTA TEST1"</xs:documentation>
                                      </xs:annotation>
                                      <xs:complexType>
                                        <xs:simpleContent>
                                          <xs:extension base="xs:string">
                                            <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                          </xs:extension>
                                        </xs:simpleContent>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="eTicketNumber" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"eTicketNumber" is used to return ticket-related information.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="RPH" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"RPH" is used as a reference place holder.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="TicketTimeLimit" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"TicketTimeLimit" is used to return the ticket time limit-related information.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="Id" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="ItineraryRef" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Header" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                <xs:annotation>
                                  <xs:documentation>"Header" is used to return miscellaneous record header-related text if applicable.</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                              <xs:element name="Source" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="AAA_PseudoCityCode" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"AAA_PseudoCityCode" is used to return the AAA pseudo-city code associated with the agent sine</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="CreateDateTime" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"CreateDateTime" is used to return the record creation date/time.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="CreationAgent" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"CreationAgent" is used to return the agent sine associated with the last record update.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="HomePseudoCityCode" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"HomePseudoCityCode" is used to return the home pseudo-city code associated with the agent sine.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="PseudoCityCode" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"PseudoCityCode" is used to return the pseudo-city code associated with the agent sine.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="ReceivedFrom" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"ReceivedFrom" is used to return received from information associated with the particular record.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="LastUpdateDateTime" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"LastUpdateDateTime" follows this format: YYYY-MM-DDTHH:MM</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="SequenceNumber" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"SequenceNumber" holds the numeric sequence number number</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="TravelPolicy" minOccurs="0" maxOccurs="2">
                                <xs:annotation>
                                  <xs:documentation>"TravelPolicy" is used to return the Travel Policy associated with the record if applicable.</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:simpleContent>
                                    <xs:extension base="xs:string">
                                      <xs:attribute name="Id" type="xs:string" use="optional"/>
                                    </xs:extension>
                                  </xs:simpleContent>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="AccountingCity" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"AccountingCity" is used to return the customer's accounting city.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="AccountingCode" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"AccountingCode" is used to return the customer's accounting code.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="AirExtras" type="xs:boolean" use="optional">
                              <xs:annotation>
                                <xs:documentation>"AirExtras" is used to indicate whether or not air extra-related information pertains to the particular record.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="CustomerIdentifier" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"CustomerIdentifier" is used to return the customer's DK number.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="ID" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"ID" is used to return the record locator.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="InhibitCode" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"InhibitCode" is utilized to return the viewership code associated with the particular record.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="OfficeStationCode" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"OfficeStationCode" is is used to return the customer's office/station code.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="OtherSystemID" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"OtherSystemID" is is used to return OA record locator information if applicable.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="PartitionID" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"PartitionID" is is used to return the host partition associated with the particular record.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="PrimeHostID" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"PrimeHostID" is is used to return the prime host ID associated with the particular record.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="TicketingCarrier" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"TicketingCarrier" is is used to return the ticketing carrier code.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="PhaseIVIndicator" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>Indicates presence of phase IV record. Possible values: A (active) I (inactive), empty or absent if no Phase IV exists.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="PayInfo" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:annotation>
                              <xs:documentation>PayInfo contains data in the PAY field in the PNR</xs:documentation>
                            </xs:annotation>
                            <xs:sequence>
                              <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:annotation>
                                    <xs:documentation>PersonName contains information about the passenger name</xs:documentation>
                                  </xs:annotation>
                                  <xs:simpleContent>
                                    <xs:extension base="xs:string">
                                      <xs:attribute name="NameNumber" type="xs:string" use="optional">
                                        <xs:annotation>
                                          <xs:documentation>NameNumber is used to return the passenger name number associated with the particular passenger</xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                    </xs:extension>
                                  </xs:simpleContent>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Text" type="xs:string" minOccurs="0">
                                <xs:annotation>
                                  <xs:documentation>Credit card number</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="FieldTagID" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>Optional field	Example: CC_Code</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="LinkSubkey" type="xs:string" use="optional"/>
                            <xs:attribute name="SectionID" type="xs:string" use="optional"/>
                            <xs:attribute name="SecurityIndicator" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>Holds Security indicator details	Example: E for Encryption , M for Masking, B for Both, X for Inhibit Display</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="Id" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="QueueInfo" minOccurs="0">
                          <xs:complexType>
                            <xs:annotation>
                              <xs:documentation>Holds Queue placement details</xs:documentation>
                            </xs:annotation>
                            <xs:sequence>
                              <xs:element name="Placement" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:annotation>
                                    <xs:documentation>"Placement" is used to return queue placement-related information associated with the particular record if applicable</xs:documentation>
                                  </xs:annotation>
                                  <xs:simpleContent>
                                    <xs:extension base="xs:string">
                                      <xs:attribute name="RPH" type="xs:string" use="optional">
                                        <xs:annotation>
                                          <xs:documentation>"Placement" is used to return queue placement-related information associated with the particular record if applicable</xs:documentation>
                                        </xs:annotation>
                                      </xs:attribute>
                                      <xs:attribute name="Id" type="xs:string" use="optional"/>
                                    </xs:extension>
                                  </xs:simpleContent>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="RemarkInfo" minOccurs="0">
                          <xs:complexType>
                            <xs:annotation>
                              <xs:documentation>"RemarkInfo" holds details of Remarks</xs:documentation>
                            </xs:annotation>
                            <xs:sequence>
                              <xs:element name="Remark" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Text" type="xs:string" minOccurs="0">
                                      <xs:annotation>
                                        <xs:documentation>"Text" is used to return the remark text</xs:documentation>
                                      </xs:annotation>
                                    </xs:element>
                                    <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:annotation>
                                          <xs:documentation>PersonName contains information about the passenger name</xs:documentation>
                                        </xs:annotation>
                                        <xs:simpleContent>
                                          <xs:extension base="xs:string">
                                            <xs:attribute name="NameNumber" type="xs:string" use="optional">
                                              <xs:annotation>
                                                <xs:documentation>NameNumber is used to return the passenger name number associated with the particular passenger</xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                          </xs:extension>
                                        </xs:simpleContent>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="Code" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"Code" is used to return the code associated with the particular remark line if applicable</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="RPH" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"RPH" is used as a reference placeholder	Example: 001</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="SegmentNumber" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"SegmentNumber" is used to return the segment number associated with the particular remark line if applicable	Example: 9</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="Type" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"Type" is used to return the type associated with the particular remark line if applicable; acceptable values are: "Client Address," "Alpha-Coded," "Historical," "General," "Delivery Address," "Itinerary," or "Invoice."</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="SpecialServiceInfo" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:annotation>
                              <xs:documentation>"SpecialServiceInfo" hold the SSR details</xs:documentation>
                            </xs:annotation>
                            <xs:sequence>
                              <xs:element name="Service" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Airline" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="Code" type="xs:string" use="optional">
                                          <xs:annotation>
                                            <xs:documentation>"Code" is used to return the airline associated with the particular SSR segment if applicable</xs:documentation>
                                          </xs:annotation>
                                        </xs:attribute>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:annotation>
                                          <xs:documentation>"PersonName" is used to return the passenger name associated with the particular SSR segment if applicable</xs:documentation>
                                        </xs:annotation>
                                        <xs:simpleContent>
                                          <xs:extension base="xs:string">
                                            <xs:attribute name="NameNumber" type="xs:string" use="optional">
                                              <xs:annotation>
                                                <xs:documentation>NameNumber" is used to return the passenger name number associated with the particular SSR segment if applicable</xs:documentation>
                                              </xs:annotation>
                                            </xs:attribute>
                                          </xs:extension>
                                        </xs:simpleContent>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                                      <xs:annotation>
                                        <xs:documentation>"Text" is used to return miscellaneous SSR-related free text if applicable</xs:documentation>
                                      </xs:annotation>
                                    </xs:element>
                                  </xs:sequence>
                                  <xs:attribute name="SSR_Code" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"SSR_Code is used to return the SSR code associated with the particular SSR segment</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                  <xs:attribute name="SSR_Type" type="xs:string" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>"SSR_Type" is used to return the SSR type associated with the particular SSR segment	Example: WCHR</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="RPH" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"RPH" is used as a reference placeholder</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="Type" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation>"Type" is used to return the type of the SSR segment. Returns the SSR code AFX for Host Airline, GFX for other Airline</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="Id" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="OpenReservationElements" minOccurs="0" maxOccurs="1">
                          <xs:complexType>
                            <xs:complexContent>
                              <xs:extension base="OpenReservationElementsType"/>
                            </xs:complexContent>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="CorporateIDInfo" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Number" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>Corporation or Agency Number ex. "1234"</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                              <xs:element name="Name" type="xs:string">
                                <xs:annotation>
                                  <xs:documentation>Corporation or Agency Name ex. "ABCCORPORATION"</xs:documentation>
                                </xs:annotation>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="primeHost" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>Owning PrimeHost ID ex. "1S" for Sabre</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="prefix" type="xs:string">
                              <xs:annotation>
                                <xs:documentation>Corporation or Agency qualifier ex. "C"</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="VCR" minOccurs="0" maxOccurs="1">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="TicketingDocument" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="ServiceCoupon" minOccurs="0" maxOccurs="16">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="ClassOfService" type="xs:string" minOccurs="0"/>
                                    <xs:element name="StartLocation" type="xs:string" minOccurs="0"/>
                                    <xs:element name="StartDateTime" type="xs:string" minOccurs="0"/>
                                    <xs:element name="EndLocation" type="xs:string" minOccurs="0"/>
                                    <xs:element name="CurrentStatus" type="xs:string" minOccurs="0"/>
                                  </xs:sequence>
                                  <xs:attribute name="coupon" type="xs:string"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="accountingCode" type="xs:string" use="optional"/>
                            <xs:attribute name="checkDigit" type="xs:string" use="optional"/>
                            <xs:attribute name="formNumber" type="xs:string" use="optional"/>
                            <xs:attribute name="number" type="xs:string"/>
                            <xs:attribute name="serialNumber" type="xs:string" use="optional"/>
                            <xs:attribute name="type" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="ProductType">
    <xs:sequence>
      <xs:element name="ProductBase" type="ProductBaseType" minOccurs="0"/>
      <xs:element name="ProductDetails" type="ProductDetailsType" minOccurs="0" maxOccurs="1"/>
      <xs:element name="AdditionalContent" type="AdditionalContentType" minOccurs="0" maxOccurs="99"/>
    </xs:sequence>
    <xs:attribute name="sequence" type="xs:short"/>
    <xs:attribute name="id" type="xs:string">
      <xs:annotation>
        <xs:documentation>to be used as Segment Reference</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="IsPast" type="xs:boolean" use="optional">
      <xs:annotation>
        <xs:documentation>It returns information if current element is past or not.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="OpenReservationElementsType">
    <xs:sequence>
      <xs:element name="OpenReservationElement" type="OpenReservationElementType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OpenReservationElementType">
    <xs:sequence>
      <xs:choice>
        <xs:element name="SocialMediaContact" type="SocialMediaContactType"/>
        <xs:element name="AgencyFees" type="AgencyFeesType"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string">
      <xs:annotation>
        <xs:documentation>hold reference ID</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string">
      <xs:annotation>
        <xs:documentation>open reservation element type, like SF for Agency Fees</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SocialMediaContactType">
    <xs:sequence>
      <xs:element name="FacebookID" type="xs:string" minOccurs="0"/>
      <xs:element name="TwitterID" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AgencyFeesType">
    <xs:sequence>
      <xs:element name="PassengerType" type="xs:string" minOccurs="0"/>
      <xs:element name="NumberOfPassengers" type="xs:int" minOccurs="0"/>
      <xs:element name="Date" type="xs:dateTime"/>
      <xs:element name="FeeDescription" type="xs:string"/>
      <xs:element name="RuleLineDescription" type="xs:string"/>
      <xs:element name="RuleDetails" type="xs:string"/>
      <xs:element name="Status" type="xs:string"/>
      <xs:element name="Amount" type="xs:decimal"/>
      <xs:element name="Tax" type="xs:decimal" minOccurs="0"/>
      <xs:element name="Currency" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ProductDetailsType">
    <xs:sequence>
      <xs:element name="ProductName" type="ProductNameType"/>
      <xs:choice>
        <xs:element name="Hotel" type="HotelProductType"/>
        <xs:element name="GroundTransportation" type="GroundTransportationType"/>
        <xs:element name="Rail" type="RailType"/>
      </xs:choice>
      <xs:element name="ExternalSystemReference" type="ExternalSystemReferenceType" minOccurs="0" maxOccurs="5">
        <xs:annotation>
          <xs:documentation>Hold reference ID given by external system/application which can be used to reference to product item that is in the external system</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TransactionInfo" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="RequestorInfo" type="RequestorSourceType"/>
          </xs:sequence>
          <xs:attribute name="LastUpdateTimeStamp" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ with
                                time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z).</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element name="CO2Value" type="CO2ValueType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="productCategory" type="xs:string">
      <xs:annotation>
        <xs:documentation>eg. TruTrip, passive, high level source/type</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="productType" type="xs:string"/>
    <xs:attribute name="vendorCode" type="xs:string"/>
    <xs:attribute name="statusCode" type="xs:string"/>
    <xs:attribute name="previousStatusCode" type="xs:string"/>
    <xs:attribute name="startPoint" type="xs:string"/>
    <xs:attribute name="startDateTime" type="xs:dateTime"/>
    <xs:attribute name="endPoint" type="xs:string"/>
    <xs:attribute name="endDateTime" type="xs:dateTime"/>
    <xs:attribute name="normalizedIndicator" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>when equals to "true" means this data has been normalized with Normalized Service</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="GroundTransportationType">
    <xs:sequence>
      <xs:element name="StatusCode" type="xs:string" minOccurs="0"/>
      <xs:element name="Vendor" type="CompanyType" minOccurs="0"/>
      <xs:element name="Service" type="ServiceType" minOccurs="0"/>
      <xs:element name="ServiceProvider" type="ServiceProviderType" minOccurs="0"/>
      <xs:element name="StartDetails" type="LocationDetailsType" minOccurs="0"/>
      <xs:element name="StopDetails" type="LocationDetailsType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="EndDetails" type="LocationDetailsType" minOccurs="0"/>
      <xs:element name="ExternalReservation" type="ExternalReservationType" minOccurs="0"/>
      <xs:element name="Restrictions" type="RestrictionsType" minOccurs="0"/>
      <xs:element name="POS" type="POSType"/>
      <xs:element name="AgentLoyalty" type="LoyaltyType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Passenger" type="PassengerType" minOccurs="0" maxOccurs="99"/>
      <xs:element name="RateQualifier" type="RateQualifierType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Charges" type="ChargesType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CO2ValueType">
    <xs:annotation>
      <xs:documentation>Holds information about CO2 emission</xs:documentation>
    </xs:annotation>
    <xs:attribute name="unit" type="xs:string">
      <xs:annotation>
        <xs:documentation>Holds information about CO2 emission unit</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ExternalSystemReferenceType">
    <xs:attribute name="ID" type="xs:string">
      <xs:annotation>
        <xs:documentation>hold reference ID</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Source" type="xs:string">
      <xs:annotation>
        <xs:documentation>Hold information of the source of this reference ID</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="HotelProductType">
    <xs:complexContent>
      <xs:extension base="HotelType">
        <xs:sequence>
          <xs:element name="RateDescription" type="MultilineTextType" minOccurs="0"/>
          <xs:element name="HotelPolicy" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DepositPolicy" type="xs:string" minOccurs="0"/>
                <xs:element name="GuaranteePolicy" type="xs:string" minOccurs="0"/>
                <xs:element name="LateArrivalPolicy" type="xs:string" minOccurs="0"/>
                <xs:element name="CancellationPolicy" type="xs:string" minOccurs="0"/>
                <xs:element name="AdditionalPolicy" type="MultilineTextType" minOccurs="0"/>
                <xs:element name="CheckInCheckOutPolicy" minOccurs="0">
                  <xs:complexType>
                    <xs:simpleContent>
                      <xs:extension base="xs:string">
                        <xs:attribute name="CheckIn" type="xs:time">
                          <xs:annotation>
                            <xs:documentation>The checkin time policy used to inform guest should check in after this check-in time.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="CheckOut" type="xs:time">
                          <xs:annotation>
                            <xs:documentation>The checkout time policy used to inform that guest needs to check-out by this time</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:extension>
                    </xs:simpleContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="SupplementalInformation" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="HotelUniqueIDType">
    <xs:annotation>
      <xs:documentation>Hold Hotel information that can be used as a reference to other systems</xs:documentation>
    </xs:annotation>
    <xs:attribute name="Source" type="xs:string">
      <xs:annotation>
        <xs:documentation>Application/System that is the source of this Hotel ID</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ID" type="xs:string">
      <xs:annotation>
        <xs:documentation>Hotel ID</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="AdditionalContentType">
    <xs:sequence>
      <xs:any namespace="##any" processContents="skip" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="persist" type="xs:boolean" default="false"/>
    <xs:attribute name="name" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="ProductBaseType">
    <xs:sequence>
      <xs:choice>
        <xs:sequence>
          <xs:element name="ProductType" type="xs:string"/>
          <xs:element name="VendorCode" type="xs:string"/>
          <xs:element name="StatusCode" type="xs:string" minOccurs="0"/>
          <xs:element name="StartPoint" type="xs:string"/>
          <xs:element name="StartDateTime" type="xs:dateTime"/>
          <xs:element name="EndPoint" type="xs:string" minOccurs="0"/>
          <xs:element name="EndDateTime" type="xs:dateTime" minOccurs="0"/>
          <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="99"/>
        </xs:sequence>
        <xs:element name="SegmentReference" type="xs:int"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ProductNameType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="type" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--types moved from PNRBuilder-->
  <xs:complexType name="HotelType">
    <xs:sequence>
      <xs:element name="Reservation" minOccurs="0">
        <xs:annotation>
          <xs:documentation xml:lang="en">Hotel reservation
                        information.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LineNumber" type="xs:integer" minOccurs="0"/>
            <xs:element name="LineType" type="xs:string" minOccurs="0"/>
            <xs:element name="LineStatus" type="xs:string" minOccurs="0"/>
            <xs:element name="POSRequestorID" type="xs:string" minOccurs="0"/>
            <xs:element name="SpecialPrefs" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="RoomType" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Summary version
                                            of the RoomTypeType, initially created for the
                                            Travel
                                            Itinerary Message set.</xs:documentation>
                  </xs:annotation>
                  <xs:element name="RoomTypeCode" type="xs:string" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Specfic system
                                                room type code, ex: A1K, A1Q etc.</xs:documentation>
                    </xs:annotation>
                  </xs:element>
                  <xs:element name="NumberOfUnits" type="xs:integer" minOccurs="0"/>
                  <xs:element name="ShortText" type="xs:string" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="RoomRates" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">Reservation
                                    rate(s).</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="AmountBeforeTax" type="xs:string" minOccurs="0"/>
                  <xs:element name="CurrencyCode" type="xs:string" minOccurs="0"/>
                  <xs:element name="Override" type="xs:boolean" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="RateAccessCodeBooked" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ClientIdentificationCode" type="xs:string" minOccurs="0"/>
                  <xs:element name="RateAccessCode" type="xs:string" minOccurs="0"/>
                  <xs:element name="CategoryTypeCode" type="xs:string" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="GuestCounts" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">Number of guests
                                    associated with this reservation.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="GuestCount" type="xs:integer" minOccurs="0"/>
                  <xs:element name="ExtraGuestCount" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                    <!--<xs:complexType> <xs:attribute name="Count" type="xs:string"
                                            use="optional"/> </xs:complexType>-->
                  </xs:element>
                  <xs:element name="RollAwayCount" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                    <!--<xs:complexType> <xs:attribute name="Count" type="xs:string"
                                            use="optional"/> </xs:complexType>-->
                  </xs:element>
                  <xs:element name="CribCount" type="xs:integer" minOccurs="0" maxOccurs="unbounded">
                    <!--<xs:complexType> <xs:attribute name="Count" type="xs:integer"
                                            use="optional"/> </xs:complexType>-->
                  </xs:element>
                  <xs:element name="ReserveUnderName" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Name" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="TimeSpanStart" type="xs:dateTime" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">The starting value
                                    of the time span.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="TimeSpanDuration" type="xs:string" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">The lexical
                                    representation for timeDuration is the [ISO 8601]
                                    extended
                                    format PnYn MnDTnH nMnS, where nY represents the number of
                                    years, nM the number of months, nD the number
                                    of days, 'T' is
                                    the date/time separator, nH the number of hours, nM the number
                                    of minutes and nS the number of
                                    seconds. The number of seconds
                                    can include decimal digits to arbitrary precision. As an
                                    example, 7 months, 2
                                    days, 2hours and 30 minutes would be
                                    expressed as P0Y7M2DT2H30M0S. Truncated representations are
                                    allowed provided
                                    they conform to ISO 8601 format.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="TimeSpanEnd" type="xs:dateTime" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">The ending value
                                    of the time span.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Guarantee" minOccurs="0">
              <xs:complexType>
                <xs:annotation>
                  <xs:documentation xml:lang="en">The guarantee
                                        information to hold a reservation</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                  <xs:element name="PaymentCardNumber" type="xs:string" minOccurs="0"/>
                  <xs:element name="Text" type="xs:string" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="ChainCode" type="xs:string" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">The code that
                                    identifies a hotel chain or management group. The
                                    hotel chain
                                    code is decided between vendors. This attribute is optional if
                                    the hotel is an independent property
                                    that can be identified by
                                    the HotelCode attribute.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="HotelCode" minOccurs="0" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation xml:lang="en">The code that
                                    uniquely identifies a single hotel property. The
                                    hotel code is
                                    decided between vendors.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="Source" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>Hold the source of this Hotel Code which could be external application or system</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
            <xs:element name="HotelCityCode" type="xs:string" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">The IATA city
                                    code; for example DCA, ORD.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="HotelName" type="xs:string" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">A text field used
                                    to communicate the proper name of the hotel.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="HotelTotalPricing" minOccurs="0" maxOccurs="1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="TotalTax" minOccurs="0" maxOccurs="1">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Tax" minOccurs="0" maxOccurs="4">
                          <xs:complexType>
                            <xs:simpleContent>
                              <xs:extension base="xs:string">
                                <xs:attribute name="Id" type="xs:string"/>
                              </xs:extension>
                            </xs:simpleContent>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="Amount" type="xs:string"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="TotalSurcharge" minOccurs="0" maxOccurs="1">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Surcharge" minOccurs="0" maxOccurs="4">
                          <xs:complexType>
                            <xs:simpleContent>
                              <xs:extension base="xs:string">
                                <xs:attribute name="Id" type="xs:string"/>
                              </xs:extension>
                            </xs:simpleContent>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="Amount" type="xs:string"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="ApproximateTotal" minOccurs="0" maxOccurs="1">
                    <xs:complexType>
                      <xs:attribute name="AmountAndCurrency" type="xs:string"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="RateChange" minOccurs="0" maxOccurs="8">
                    <xs:complexType>
                      <xs:attribute name="Id" type="xs:string"/>
                      <xs:attribute name="Amount" type="xs:string"/>
                      <xs:attribute name="Effective" type="xs:string"/>
                      <xs:attribute name="Surcharge" type="xs:string"/>
                      <xs:attribute name="Tax" type="xs:string"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Disclaimer" minOccurs="0" maxOccurs="2">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute name="Id" type="xs:string"/>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="CurrencyCode" type="xs:string">
                  <xs:annotation>
                    <xs:documentation>The code specifying a monetary unit. Use ISO 4217, three alpha code</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="HotelUniqueID" type="HotelUniqueIDType" minOccurs="0" maxOccurs="5"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AdditionalInformation" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="Source" type="xs:string">
                      <xs:annotation>
                        <xs:documentation>Source of this confirmation Number</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="DirectConnect" type="xs:boolean" default="false">
                      <xs:annotation>
                        <xs:documentation>set if hotel was sold via DirectConnect</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
            <xs:element name="Address" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="CountryCode" type="xs:string" minOccurs="0"/>
                  <xs:element name="City" type="xs:string" minOccurs="0"/>
                  <xs:element name="State" type="xs:string" minOccurs="0"/>
                  <xs:element name="ZipCode" type="xs:string" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="ContactNumbers" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="PhoneNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="FaxNumber" type="xs:string" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="CancelPenaltyPolicyCode" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="CustLoyaltyMembershipID" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="IDNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="CorporateIDNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Commission" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Indicator" type="xs:string" minOccurs="0"/>
                  <xs:element name="PerNight" type="xs:string" minOccurs="0"/>
                  <xs:element name="Text" type="xs:string" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="WrittenConfirmation" type="xs:boolean" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SegmentText" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="index" type="Numeric0to99999"/>
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="sequence" type="xs:short">
      <xs:annotation>
        <xs:documentation>Identifies sequence number of Itinerary</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="SupplementaryServiceType">
    <xs:sequence>
      <xs:element name="Description" maxOccurs="unbounded">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="lang" type="xs:string"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Charges" type="ChargesType" minOccurs="0"/>
      <xs:element name="PassengerReferences" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="PassengerRef" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="id"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="type"/>
    <xs:attribute name="code"/>
    <xs:attribute name="codeContext"/>
  </xs:complexType>
  <xs:simpleType name="Numeric0to99999">
    <xs:annotation>
      <xs:documentation>Used for Numeric values, from 1 to 9999 inclusive.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:integer">
      <xs:minInclusive value="0"/>
      <xs:maxInclusive value="99999"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DetailType">
    <xs:attribute name="type"/>
    <xs:attribute name="code"/>
    <xs:attribute name="codeContext"/>
  </xs:complexType>
  <xs:complexType name="RailwayStationInfoType"/>
  <xs:complexType name="RailAccommodationType">
    <xs:sequence>
      <xs:element name="PassengerRef" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="id"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="Placement">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Coach" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element type="xs:string" name="CoachNumber"/>
                  <xs:element name="PlacementNumber" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute name="compartmentRefId"/>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                  <xs:element type="xs:string" name="CompartmentNumber"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="Detail" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="code"/>
          <xs:attribute name="type"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="Meal" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CompanyType">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
      <xs:element name="Code" minOccurs="0">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="codeContext"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Telephone" type="PhoneType" minOccurs="0" maxOccurs="99"/>
      <xs:element name="Address" type="AddressType" minOccurs="0" maxOccurs="9"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RailType">
    <xs:sequence>
      <xs:element name="StatusCode" type="xs:string" minOccurs="0"/>
      <xs:element name="Open" type="xs:boolean" minOccurs="0"/>
      <xs:element name="CrossBorder" type="xs:boolean" minOccurs="0"/>
      <xs:element name="Duration" type="xs:string" minOccurs="0"/>
      <xs:element name="MarketingCarrier" minOccurs="0">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="CompanyType"/>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="OperatingCarrier" type="ServiceProviderType" minOccurs="0"/>
      <xs:element name="Passengers" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Passenger" type="PassengerType" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
          <xs:attribute name="quantity" type="xs:string"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="SupplementaryServices" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="SupplementaryService" type="SupplementaryServiceType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="TrainInfo" type="TrainDetailsType" minOccurs="0"/>
      <xs:element name="Accommodation" type="RailAccommodationType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="StartDetails" type="LocationDetailsType" minOccurs="0"/>
      <xs:element name="StopDetails" type="LocationDetailsType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="EndDetails" type="LocationDetailsType" minOccurs="0"/>
      <xs:element name="RailFares" type="RailFareType" minOccurs="0"/>
      <xs:element name="Documents" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Document" type="DocumentType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Details" minOccurs="0">
        <xs:annotation>
          <xs:documentation>added by Rail Team - to be checked what for</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Detail" type="xs:string" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PhoneType">
    <xs:sequence>
      <xs:element name="PhoneUseType" type="xs:string" minOccurs="0"/>
      <xs:element name="PhoneCountryCode" type="xs:string" minOccurs="0"/>
      <xs:element name="PhoneCountryName" type="xs:string" minOccurs="0"/>
      <xs:element name="PhoneNumber" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TrainDetailsType">
    <xs:sequence>
      <xs:element name="Number" type="xs:string" minOccurs="0"/>
      <xs:element name="Code" type="xs:string" minOccurs="0"/>
      <xs:element name="ShortName" type="xs:string" minOccurs="0"/>
      <xs:element name="LongName" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AddressType">
    <xs:sequence>
      <xs:element name="LocationType" type="xs:string" minOccurs="0"/>
      <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="9"/>
      <xs:element name="CityName" type="xs:string" minOccurs="0"/>
      <xs:element name="CityCodes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Code" maxOccurs="unbounded">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="codeContext"/>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="LocalCityName" type="xs:string" minOccurs="0"/>
      <xs:element name="StateProvince" type="CodeDescriptionType" minOccurs="0"/>
      <xs:element name="StateProviceCodes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Code" maxOccurs="unbounded">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="codeContext"/>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PostCode" type="xs:string" minOccurs="0"/>
      <xs:element name="Country" type="CodeDescriptionType" minOccurs="0"/>
      <xs:element name="CountryCodes" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Code" maxOccurs="unbounded">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="codeContext"/>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Latitude" type="xs:string" minOccurs="0"/>
      <xs:element name="Longitude" type="xs:string" minOccurs="0"/>
      <xs:element name="Altitude" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DocumentType">
    <xs:sequence>
      <xs:element name="DocumentID" type="xs:string"/>
      <xs:element name="AgencyAccountNumber" type="xs:string" minOccurs="0"/>
      <xs:element name="CreationChannel" type="xs:string" minOccurs="0"/>
      <xs:element name="PassengerReferences" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="PassengerRef" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="id"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SegmentReferences" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="SegmentRef" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="id"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IssueTimeLimit" type="xs:string" minOccurs="0"/>
      <xs:element name="IssueDateTime" type="xs:string" minOccurs="0"/>
      <xs:element name="DocumentStatus" type="xs:string" minOccurs="0"/>
      <xs:element name="Charges" type="ChargesType" minOccurs="0"/>
      <xs:element name="FormOfPayment" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="CreditCard" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Number" type="xs:string" minOccurs="0"/>
                  <xs:element name="Issuer" type="xs:string" minOccurs="0"/>
                  <xs:element name="ExpirationMonth" type="xs:string" minOccurs="0"/>
                  <xs:element name="ExpirationYear" type="xs:string" minOccurs="0"/>
                  <xs:element name="CardHolder" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="PersonName" type="PersonNameType" minOccurs="0"/>
                        <xs:element name="Address" type="AddressType" minOccurs="0"/>
                        <xs:element name="Telephone" type="PhoneType" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="Email" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="Cash" type="xs:string" minOccurs="0"/>
            <xs:element name="Check" type="xs:string" minOccurs="0"/>
            <xs:element name="Voucher" type="xs:string" minOccurs="0"/>
            <xs:element name="Other" type="xs:string" minOccurs="0"/>
          </xs:sequence>
          <xs:attribute name="transactionID"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="File" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Representation" type="xs:string" minOccurs="0"/>
            <xs:element name="URL" type="xs:string" minOccurs="0"/>
          </xs:sequence>
          <xs:attribute name="type" use="optional"/>
          <xs:attribute name="coding" use="optional"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="IssueType" type="xs:string" minOccurs="0"/>
      <xs:element name="DocumentRules" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Exchangable" type="xs:string" minOccurs="0"/>
            <xs:element name="Refundable" type="xs:string" minOccurs="0"/>
            <xs:element name="Rule" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="type" type="xs:string"/>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="type"/>
    <xs:attribute name="code"/>
    <xs:attribute name="codeContext"/>
  </xs:complexType>
  <xs:complexType name="CodeDescriptionType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="code" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ServiceType">
    <xs:sequence>
      <xs:element name="ServiceLevel" type="ServiceLevelType" minOccurs="0"/>
      <xs:element name="Equipment" type="EquipmentType" minOccurs="0"/>
      <xs:element name="MeetAndGreetInd" type="xs:boolean" minOccurs="0"/>
      <xs:element name="MaximumBaggage" type="xs:int" minOccurs="0"/>
      <xs:element name="MaximumPassengers" type="xs:int" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ServiceLevelType">
    <xs:sequence>
      <xs:element type="xs:string" name="Code"/>
      <xs:element type="xs:string" name="Description" minOccurs="0"/>
      <xs:element type="xs:string" name="Level" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EquipmentType">
    <xs:sequence>
      <xs:element name="Code" type="xs:string"/>
      <xs:element name="Type" type="xs:string" minOccurs="0"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ServiceProviderType">
    <xs:sequence>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
      <xs:element name="Code" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="codeContext"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="Telephone" type="PhoneType" minOccurs="0" maxOccurs="99"/>
      <xs:element name="Address" type="AddressType" minOccurs="0" maxOccurs="9"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LocationDetailsType">
    <xs:sequence>
      <xs:element name="Address" type="AddressType" minOccurs="0"/>
      <xs:element name="DateTime" type="xs:dateTime" minOccurs="0"/>
      <xs:choice minOccurs="0">
        <xs:element name="AirportInfo" type="AirportInfoType" minOccurs="0"/>
        <xs:element name="RailwayStationInfo" minOccurs="0">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="RailwayStationInfoType">
                <xs:sequence>
                  <xs:element name="StationName" minOccurs="0">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute name="lang" type="xs:string"/>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="LocalStationName" minOccurs="0">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute name="lang" type="xs:string"/>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="LocationCodes" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Code" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:attribute name="codeContext"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Amenities" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Amenity" type="xs:string" maxOccurs="unbounded"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="borderPoint"/>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
      </xs:choice>
      <xs:element name="Comments" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AirportInfoType">
    <xs:sequence>
      <xs:element name="Airline" type="AirlineType" minOccurs="0"/>
      <xs:element name="AirportName" type="xs:string" minOccurs="0"/>
      <xs:element name="LocationCode" type="xs:string" minOccurs="0"/>
      <xs:element name="Terminal" type="xs:string" minOccurs="0"/>
      <xs:element name="Gate" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="AirlineType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="code" type="xs:string"/>
        <xs:attribute name="flightNumber" type="xs:string"/>
        <xs:attribute name="flightDateTime" type="xs:dateTime"/>
        <xs:attribute name="flightType" type="FlightDirectionType"/>
        <xs:attribute name="privateAviation" type="xs:boolean"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="FlightDirectionType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="D">
        <xs:annotation>
          <xs:documentation>Departing flight</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="A">
        <xs:annotation>
          <xs:documentation>Arriving flight</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="ExternalReservationType">
    <xs:sequence>
      <xs:element name="SourceSystem" type="xs:string"/>
      <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0"/>
      <xs:element name="CancellationNumber" type="xs:string" minOccurs="0"/>
      <xs:element name="ReferenceNumber" type="xs:string" minOccurs="0"/>
      <xs:element name="ReservationStatus" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RestrictionsType">
    <xs:sequence>
      <xs:element name="CancelPolicy" type="MultilineTextType" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MultilineTextType">
    <xs:sequence>
      <xs:element name="TextLine" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LoyaltyType">
    <xs:sequence>
      <xs:element name="ProgramName" type="xs:string"/>
      <xs:element name="MembershipID" type="xs:string"/>
      <xs:element name="LoyaltyLevel" type="CodeDescriptionType" minOccurs="0"/>
      <xs:element name="EffectiveDate" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="ExpireDate" type="xs:dateTime" minOccurs="0"/>
      <xs:element name="Remark" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PassengerType">
    <xs:sequence>
      <xs:element name="Type" minOccurs="0">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="code"/>
              <xs:attribute name="codeContext"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="PersonName" type="PersonNameType" minOccurs="0"/>
      <xs:element name="Telephone" type="PhoneType" minOccurs="0" maxOccurs="99"/>
      <xs:element name="Email" type="xs:string" minOccurs="0" maxOccurs="99"/>
    </xs:sequence>
    <xs:attribute name="passengerID"/>
    <xs:attribute name="primary" type="xs:boolean"/>
  </xs:complexType>
  <xs:complexType name="RateQualifierType">
    <xs:sequence>
      <xs:element name="AccountID" type="xs:string" minOccurs="0"/>
      <xs:element name="AccountName" type="xs:string" minOccurs="0"/>
      <xs:element name="PromotionCode" type="xs:string" minOccurs="0"/>
      <xs:element name="SpecialInput" minOccurs="0" maxOccurs="unbounded" type="SpecialInputType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SpecialInputType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ChargesType">
    <xs:sequence>
      <xs:element name="GeneralNotes" type="xs:string" minOccurs="0"/>
      <xs:element name="Charge" minOccurs="0" maxOccurs="unbounded" type="ChargeType"/>
      <xs:element name="GrandTotal" minOccurs="0" type="MoneyType"/>
      <xs:element name="GeneralBillingType" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MoneyType">
    <!--TODO: move to bindings.xml-->
    <!--<xs:annotation> <xs:appinfo> <jxb:property> <jxb:baseType> <jxb:javaType
            name="java.lang.Float"/> </jxb:baseType> </jxb:property> </xs:appinfo> </xs:annotation>-->
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="currencyCode" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ChargeType">
    <xs:sequence>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="Notes" type="xs:string" minOccurs="0"/>
      <xs:element name="Name" type="xs:string" minOccurs="0"/>
      <xs:element name="Calculation" type="CalculationType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="BillingType" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="currencyCode" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="CalculationType">
    <xs:sequence>
      <xs:element name="UnitName" type="xs:string" minOccurs="0"/>
      <xs:element name="UnitCharge" type="MinMaxType" minOccurs="0"/>
      <xs:element name="Quantity" type="MinMaxType" minOccurs="0"/>
      <xs:element name="Total" type="MinMaxType" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MinMaxType">
    <!--TODO: move to bindings.xml-->
    <!--<xs:annotation> <xs:appinfo> <jxb:property> <jxb:baseType> <jxb:javaType
            name="java.lang.Float"/> </jxb:baseType> </jxb:property> </xs:appinfo> </xs:annotation>-->
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="min" type="xs:decimal">
          <!--TODO: move to bindings.xml-->
          <!--<xs:annotation> <xs:appinfo> <jxb:property> <jxb:baseType> <jxb:javaType
                        name="java.lang.Float"/> </jxb:baseType> </jxb:property> </xs:appinfo> </xs:annotation>-->
        </xs:attribute>
        <xs:attribute name="max" type="xs:decimal">
          <!--TODO: move to bindings.xml-->
          <!--<xs:annotation> <xs:appinfo> <jxb:property> <jxb:baseType> <jxb:javaType
                        name="java.lang.Float"/> </jxb:baseType> </jxb:property> </xs:appinfo> </xs:annotation>-->
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="POSType">
    <xs:annotation>
      <xs:documentation>Point of Sale (POS) is the details identifying the
                party or connection channel making the request.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Source" type="SourceType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>This holds details regarding the requestor. It
                        may be repeated to also accommodate the delivery
                        systems.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SourceType">
    <xs:annotation>
      <xs:documentation>Provides information on the source of a request.
                This is from the OTA xsd.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="RequestorID" type="RequestorIDType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>An identifier of the
                        entity making the request
                        (e.g. ATA/IATA/ID number, Electronic
                        Reservation
                        Service Provider
                        (ERSP), Association of British Travel
                        Agents (ABTA)).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="BookingChannel" type="BookingChannelType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Specifies the
                        booking channel type and whether it
                        is the primary means of
                        connectivity of the
                        source.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="TTYRecordLocator" type="TTYRecordLocatorType" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="OAC" type="OACType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Office Account Code. Defines agency PCC
                        extension</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="BookingSource" type="xs:string">
      <xs:annotation>
        <xs:documentation>Identifies
                    the booking source within the
                    requesting entity.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AgentSine" type="xs:string">
      <xs:annotation>
        <xs:documentation>Identifies
                    the party within the requesting entity.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="PseudoCityCode" type="xs:string">
      <xs:annotation>
        <xs:documentation>An identification
                    code assigned to an
                    office/agency by a reservation system.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ISOCountry" type="xs:string">
      <xs:annotation>
        <xs:documentation>The country code of
                    the requesting party.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ISOCurrency" type="xs:string"/>
    <xs:attribute name="AgentDutyCode" type="xs:string">
      <xs:annotation>
        <xs:documentation>An authority code
                    assigned to a requestor.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AirlineVendorID" type="xs:string">
      <xs:annotation>
        <xs:documentation>The IATA assigned
                    airline code.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AirportCode" type="xs:string">
      <xs:annotation>
        <xs:documentation>The IATA assigned
                    airport code.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="FirstDepartPoint" type="xs:string">
      <xs:annotation>
        <xs:documentation>The point of first departure in a trip.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="SourceSystem" type="xs:string">
      <xs:annotation>
        <xs:documentation>e.g., CSS, CSI</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TerminalID" type="xs:string">
      <xs:annotation>
        <xs:documentation>This is the
                    electronic address of the device from
                    which information is entered.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="BookingChannelType">
    <xs:sequence>
      <xs:element name="CompanyName" type="CompanyNameType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Identifies the company that is associated with
                        the booking channel.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>The type of booking
                    channel (e.g. Global
                    Distribution System (GDS), Alternative
                    Distribution System
                    (ADS),
                    Sales and Catering System (SCS),
                    Property Management System (PMS),
                    Central Reservation System (CRS),
                    Tour
                    Operator System (TOS),
                    Internet and ALL). Refer to OTA Code
                    List Booking Channel Type
                    (BCT).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Primary" type="xs:boolean">
      <xs:annotation>
        <xs:documentation>Indicates
                    whether the enumerated booking channel
                    is the primary means of
                    connectivity used by the
                    source.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="TTYRecordLocatorType">
    <xs:sequence>
      <xs:element name="CRSLocator" type="xs:string" minOccurs="0"/>
      <xs:element name="CRSCode" type="xs:string" minOccurs="0"/>
      <xs:element name="RecordLocator" type="xs:string" minOccurs="0"/>
      <xs:element name="AgencyId" type="xs:string" minOccurs="0"/>
      <xs:element name="IataNumber" type="xs:string" minOccurs="0"/>
      <xs:element name="AgencyLocation" type="xs:string" minOccurs="0"/>
      <xs:element name="UserType" type="xs:string" minOccurs="0"/>
      <xs:element name="CountryCode" type="xs:string" minOccurs="0"/>
      <xs:element name="Currency" type="xs:string" minOccurs="0"/>
      <xs:element name="DutyCode" type="xs:string" minOccurs="0"/>
      <xs:element name="ERSPUserId" type="xs:string" minOccurs="0"/>
      <xs:element name="FirstPointOfDeparture" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="OACType">
    <xs:sequence>
      <xs:element name="PartitionId" type="xs:string" minOccurs="0"/>
      <xs:element name="AccountingCityCode" type="xs:string" minOccurs="0"/>
      <xs:element name="AccountingCode" type="xs:string" minOccurs="0"/>
      <xs:element name="AccountingOfficeStationCode" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="FeeType">
    <xs:sequence>
      <xs:element name="Amount" type="xs:string"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="name"/>
    <xs:attribute name="type"/>
    <xs:attribute name="currencyCode"/>
  </xs:complexType>
  <xs:complexType name="PriceType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="currencyCode" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="RequestorIDType">
    <xs:sequence>
      <xs:element name="CompanyName" type="CompanyNameType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Identifies
                        the company that is associated with
                        the UniqueID.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ArrangerDetails" type="ArrangerDetailsType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="URL" type="xs:string">
      <xs:annotation>
        <xs:documentation>URL that identifies the location associated with
                    the record identified by the UniqueID.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>A reference to the type of object defined by the
                    UniqueID element. Refer to OTA Code List Unique
                    ID Type (UIT).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Instance" type="xs:string">
      <xs:annotation>
        <xs:documentation>The identification of a record as it exists at a
                    point in time. An instance is used in update
                    messages where the
                    sender must assure the server that the update sent refers to the
                    most recent modification level
                    of
                    the object being updated.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ID" use="required" type="xs:string">
      <xs:annotation>
        <xs:documentation>A unique identifying
                    value assigned by the
                    creating system. The ID attribute may be used
                    to
                    reference a
                    primary-key value within a database or in a
                    particular
                    implementation.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ID_Context" type="xs:string">
      <xs:annotation>
        <xs:documentation>Used to identify the source of the identifier
                    (e.g., IATA, ABTA).</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="MessagePassword" type="xs:string">
      <xs:annotation>
        <xs:documentation>This password
                    provides an additional level of
                    security that the recipient can
                    use to validate the
                    sending party's
                    authority to use the
                    message.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CompanyNameType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="CompanyShortName" type="xs:string">
          <xs:annotation>
            <xs:documentation>Used to provide the company common name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="TravelSector" type="xs:string">
          <xs:annotation>
            <xs:documentation>Refer to OTA Code List Travel Sector (TVS).</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Code" type="xs:string">
          <xs:annotation>
            <xs:documentation>Identifies a company by the company code.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="CodeContext" type="xs:string">
          <xs:annotation>
            <xs:documentation>Identifies the context of the identifying code,
                            such as DUNS, IATA or internal code, etc.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Division" type="xs:string">
          <xs:annotation>
            <xs:documentation>The division name or ID with which the contact
                            is associated.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Department" type="xs:string">
          <xs:annotation>
            <xs:documentation>The department name or ID with which the
                            contact is associated.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ArrangerDetailsType">
    <xs:sequence>
      <xs:element name="PersonName" type="PersonNameType"/>
      <xs:element name="Telephone" type="PhoneType" minOccurs="0" maxOccurs="99"/>
      <xs:element name="Email" type="xs:string" minOccurs="0" maxOccurs="99"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PersonNameType">
    <xs:sequence>
      <xs:element name="Prefix" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Salutation of honorific. (e.g., Mr. Mrs., Ms.,
                        Miss, Dr.)</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Given" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Given name, first name or names</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Middle" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The middle name of the person name</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Surname" type="xs:string">
        <xs:annotation>
          <xs:documentation>Family name aslo known as last name.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Suffix" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Hold various name suffixes and letters (e.g.
                        Jr., Sr., III, Ret., Esq.).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Type" type="xs:string" minOccurs="0"/>
      <xs:element name="PreferredFirstName" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Any preferred names for first name used instead
                        of GivenName</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="PreferredSurname" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Any preferred names for last names used instead
                        of surname</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RailFareType">
    <xs:sequence>
      <xs:element name="Fare" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="PassengerReferences" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="PassengerRef" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="id"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="SegmentReferences" minOccurs="0">
              <xs:annotation>
                <xs:documentation>to be checked</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="SegmentRef" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="id"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="ClassOfService" type="xs:string" minOccurs="0"/>
            <xs:element name="FareDescription" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Name" type="xs:string" minOccurs="0"/>
                  <xs:element name="Code" type="xs:string" minOccurs="0"/>
                  <xs:element name="Detail" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Condition" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute name="lang" type="xs:string"/>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Fees" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Fee" type="FeeType" maxOccurs="unbounded"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="FarePrice" type="PriceType" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RequestorSourceType">
    <xs:annotation>
      <xs:documentation source="Description" xml:lang="en">Provides information on the source of a request.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="AgentSine" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation source="Description" xml:lang="en">Identifies the party within the requesting entity.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="PseudoCityCode" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation source="Description" xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AgentDutyCode" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation source="Description" xml:lang="en">An authority code assigned to a requestor.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="AirportCode" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation source="Description" xml:lang="en">The IATA assigned airport code.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="TerminalID" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation source="Description" xml:lang="en">This is the electronic address of the device from which payload is submitted.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ApplicationID" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation source="Description" xml:lang="en">The identifier of the calling application that used by this requestor to submit this
                    payload.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/built-ins/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/built-ins/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/built-ins/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/built-ins/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/built-ins/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>https://files.developer.sabre.com/wsdl/sabreXML1.0.00/ServicesPlatform/built-ins/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com</con:endpoint></con:endpoints><con:operation id="38ab2d89-8114-42fd-ad72-b38bad0fd7b9" isOneWay="false" action="PassengerDetailsRQ" name="PassengerDetailsRQ" bindingOperationName="PassengerDetailsRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fbe7b9ff-28f3-4a88-a169-3e7bf2648842" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:mes="http://www.ebxml.org/namespaces/messageHeader" xmlns:v3="http://services.sabre.com/sp/pd/v3_3">\r
   <soapenv:Header>\r
      <sec:Security>\r
         <!--Optional:-->\r
         <sec:UsernameToken>\r
            <!--Optional:-->\r
            <sec:Username>?</sec:Username>\r
            <!--Optional:-->\r
            <sec:Password>?</sec:Password>\r
            <!--0 to 2 repetitions:-->\r
            <sec:NewPassword>?</sec:NewPassword>\r
            <!--Optional:-->\r
            <Organization>?</Organization>\r
            <!--Optional:-->\r
            <Domain>?</Domain>\r
         </sec:UsernameToken>\r
         <!--Optional:-->\r
         <sec:SabreAth>?</sec:SabreAth>\r
         <!--Optional:-->\r
         <sec:BinarySecurityToken>?</sec:BinarySecurityToken>\r
      </sec:Security>\r
      <mes:MessageHeader mes:id="?" mes:version="?">\r
         <mes:From>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:From>\r
         <mes:To>\r
            <!--1 or more repetitions:-->\r
            <mes:PartyId mes:type="?">?</mes:PartyId>\r
            <!--Optional:-->\r
            <mes:Role>?</mes:Role>\r
         </mes:To>\r
         <mes:CPAId>?</mes:CPAId>\r
         <mes:ConversationId>?</mes:ConversationId>\r
         <mes:Service mes:type="?">?</mes:Service>\r
         <mes:Action>?</mes:Action>\r
         <mes:MessageData>\r
            <mes:MessageId>?</mes:MessageId>\r
            <mes:Timestamp>?</mes:Timestamp>\r
            <!--Optional:-->\r
            <mes:RefToMessageId>?</mes:RefToMessageId>\r
            <!--Optional:-->\r
            <mes:TimeToLive>?</mes:TimeToLive>\r
            <!--Optional:-->\r
            <mes:Timeout>?</mes:Timeout>\r
         </mes:MessageData>\r
         <!--Optional:-->\r
         <mes:DuplicateElimination>?</mes:DuplicateElimination>\r
         <!--Zero or more repetitions:-->\r
         <mes:Description xml:lang="?">?</mes:Description>\r
         <!--You may enter ANY elements at this point-->\r
      </mes:MessageHeader>\r
   </soapenv:Header>\r
   <soapenv:Body>\r
      <v3:PassengerDetailsRQ version="?" HaltOnError="?" IgnoreOnError="?">\r
         <!--Optional:-->\r
         <v3:MiscSegmentSellRQ>\r
            <v3:MiscSegment DepartureDateTime="?" InsertAfter="?" NumberInParty="?" Status="?" Type="?">\r
               <v3:OriginLocation LocationCode="?"/>\r
               <v3:Text>?</v3:Text>\r
               <v3:VendorPrefs>\r
                  <v3:Airline Code="?"/>\r
               </v3:VendorPrefs>\r
            </v3:MiscSegment>\r
         </v3:MiscSegmentSellRQ>\r
         <!--Optional:-->\r
         <v3:PostProcessing IgnoreAfter="?" RedisplayReservation="?" UnmaskCreditCard="false">\r
            <!--Optional:-->\r
            <v3:ARUNK_RQ>?</v3:ARUNK_RQ>\r
            <!--Optional:-->\r
            <v3:EndTransactionRQ>\r
               <!--Optional:-->\r
               <v3:EndTransaction Ind="?">\r
                  <!--Optional:-->\r
                  <v3:Email Ind="?">\r
                     <!--Optional:-->\r
                     <v3:eTicket Ind="?">\r
                        <!--Optional:-->\r
                        <v3:PDF Ind="?"/>\r
                     </v3:eTicket>\r
                     <!--Optional:-->\r
                     <v3:Invoice Ind="?"/>\r
                     <!--Optional:-->\r
                     <v3:Itinerary Ind="?">\r
                        <!--Optional:-->\r
                        <v3:PDF Ind="?"/>\r
                        <!--Zero or more repetitions:-->\r
                        <v3:Segment EndNumber="?" Number="?"/>\r
                     </v3:Itinerary>\r
                     <!--Optional:-->\r
                     <v3:PersonName NameNumber="?"/>\r
                  </v3:Email>\r
               </v3:EndTransaction>\r
               <!--Optional:-->\r
               <v3:Source ReceivedFrom="?"/>\r
            </v3:EndTransactionRQ>\r
            <!--Optional:-->\r
            <v3:QueuePlaceRQ>\r
               <!--Optional:-->\r
               <v3:MultiQueuePlace>\r
                  <!--1 to 20 repetitions:-->\r
                  <v3:QueueIdentifier Number="?" PrefatoryInstructionCode="?" PseudoCityCode="?"/>\r
               </v3:MultiQueuePlace>\r
               <!--Optional:-->\r
               <v3:QueueInfo>\r
                  <!--1 to 3 repetitions:-->\r
                  <v3:QueueIdentifier Name="?" Number="?" PrefatoryInstructionCode="?" PseudoCityCode="?"/>\r
                  <!--0 to 6 repetitions:-->\r
                  <v3:UniqueID ID="?"/>\r
               </v3:QueueInfo>\r
            </v3:QueuePlaceRQ>\r
         </v3:PostProcessing>\r
         <!--Optional:-->\r
         <v3:PreProcessing IgnoreBefore="?">\r
            <!--Optional:-->\r
            <v3:UniqueID ID="?"/>\r
         </v3:PreProcessing>\r
         <!--Optional:-->\r
         <v3:PriceQuoteInfo>\r
            <!--1 to 98 repetitions:-->\r
            <v3:Link HostedCarrier="?" NameNumber="?" Record="?"/>\r
         </v3:PriceQuoteInfo>\r
         <!--Optional:-->\r
         <v3:ProfileRQ>\r
            <v3:UniqueID ID="?"/>\r
         </v3:ProfileRQ>\r
         <!--Optional:-->\r
         <v3:SpecialReqDetails>\r
            <!--Optional:-->\r
            <v3:AddRemarkRQ>\r
               <v3:RemarkInfo>\r
                  <!--Optional:-->\r
                  <v3:FOP_Remark Type="?">\r
                     <!--Optional:-->\r
                     <v3:CC_Info Suppress="?">\r
                        <v3:PaymentCard AirlineCode="?" CardSecurityCode="?" Code="?" ExpireDate="?" ExtendedPayment="?" ManualApprovalCode="?" Number="?" SuppressApprovalCode="?"/>\r
                     </v3:CC_Info>\r
                  </v3:FOP_Remark>\r
                  <!--Optional:-->\r
                  <v3:FutureQueuePlaceRemark Date="?" PrefatoryInstructionCode="?" PseudoCityCode="?" QueueIdentifier="?" Time="?"/>\r
                  <!--0 to 98 repetitions:-->\r
                  <v3:Remark Code="?" SegmentNumber="?" Type="?">\r
                     <v3:Text>?</v3:Text>\r
                  </v3:Remark>\r
               </v3:RemarkInfo>\r
            </v3:AddRemarkRQ>\r
            <!--Optional:-->\r
            <v3:AirSeatRQ>\r
               <v3:Seats>\r
                  <!--1 to 98 repetitions:-->\r
                  <v3:Seat BoardingPass="?" ChangeOfGauge="?" NameNumber="?" Number="?" Preference="?" SegmentNumber="?"/>\r
               </v3:Seats>\r
            </v3:AirSeatRQ>\r
            <!--Optional:-->\r
            <v3:SpecialServiceRQ>\r
               <v3:SpecialServiceInfo>\r
                  <!--Zero or more repetitions:-->\r
                  <v3:AdvancePassenger SegmentNumber="?">\r
                     <!--Optional:-->\r
                     <v3:Document ExpirationDate="?" Number="?" Type="?">\r
                        <!--Optional:-->\r
                        <v3:IssueCountry>?</v3:IssueCountry>\r
                        <!--Optional:-->\r
                        <v3:NationalityCountry>?</v3:NationalityCountry>\r
                        <!--Optional:-->\r
                        <v3:Visa IssueDate="?">\r
                           <v3:ApplicableCountry>?</v3:ApplicableCountry>\r
                           <!--Optional:-->\r
                           <v3:PlaceOfBirth>?</v3:PlaceOfBirth>\r
                           <v3:PlaceOfIssue>?</v3:PlaceOfIssue>\r
                        </v3:Visa>\r
                     </v3:Document>\r
                     <!--Optional:-->\r
                     <v3:PersonName DateOfBirth="?" DocumentHolder="?" Gender="?" NameNumber="?">\r
                        <!--Optional:-->\r
                        <v3:GivenName>?</v3:GivenName>\r
                        <!--Optional:-->\r
                        <v3:MiddleName>?</v3:MiddleName>\r
                        <!--Optional:-->\r
                        <v3:Surname>?</v3:Surname>\r
                     </v3:PersonName>\r
                     <!--Optional:-->\r
                     <v3:ResidentDestinationAddress Type="?">\r
                        <!--Optional:-->\r
                        <v3:City>?</v3:City>\r
                        <v3:Country>?</v3:Country>\r
                        <!--Optional:-->\r
                        <v3:Street>?</v3:Street>\r
                        <!--Optional:-->\r
                        <v3:State>?</v3:State>\r
                        <!--Optional:-->\r
                        <v3:Zip>?</v3:Zip>\r
                     </v3:ResidentDestinationAddress>\r
                     <!--Optional:-->\r
                     <v3:VendorPrefs>\r
                        <v3:Airline Hosted="?"/>\r
                     </v3:VendorPrefs>\r
                  </v3:AdvancePassenger>\r
                  <!--Zero or more repetitions:-->\r
                  <v3:SecureFlight SegmentNumber="?">\r
                     <!--Optional:-->\r
                     <v3:KnownTravelerNumber>?</v3:KnownTravelerNumber>\r
                     <!--Optional:-->\r
                     <v3:PersonName DateOfBirth="?" Gender="?" NameNumber="?">\r
                        <!--Optional:-->\r
                        <v3:GivenName>?</v3:GivenName>\r
                        <!--Optional:-->\r
                        <v3:Surname>?</v3:Surname>\r
                     </v3:PersonName>\r
                     <!--Optional:-->\r
                     <v3:RedressNumber>?</v3:RedressNumber>\r
                     <!--Optional:-->\r
                     <v3:VendorPrefs>\r
                        <v3:Airline Hosted="?"/>\r
                     </v3:VendorPrefs>\r
                  </v3:SecureFlight>\r
                  <!--Zero or more repetitions:-->\r
                  <v3:Service SegmentNumber="?" SSR_Code="?">\r
                     <!--Optional:-->\r
                     <v3:PersonName NameNumber="?"/>\r
                     <!--Optional:-->\r
                     <v3:Text>?</v3:Text>\r
                     <!--Optional:-->\r
                     <v3:VendorPrefs>\r
                        <v3:Airline Code="?" Hosted="?"/>\r
                     </v3:VendorPrefs>\r
                  </v3:Service>\r
               </v3:SpecialServiceInfo>\r
            </v3:SpecialServiceRQ>\r
         </v3:SpecialReqDetails>\r
         <!--Optional:-->\r
         <v3:TravelItineraryAddInfoRQ>\r
            <!--Optional:-->\r
            <v3:AgencyInfo>\r
               <!--Optional:-->\r
               <v3:Address>\r
                  <!--Optional:-->\r
                  <v3:AddressLine>?</v3:AddressLine>\r
                  <v3:CityName>?</v3:CityName>\r
                  <!--Optional:-->\r
                  <v3:CountryCode>?</v3:CountryCode>\r
                  <!--Optional:-->\r
                  <v3:PostalCode>?</v3:PostalCode>\r
                  <!--Optional:-->\r
                  <v3:StateCountyProv StateCode="?"/>\r
                  <!--Optional:-->\r
                  <v3:StreetNmbr>?</v3:StreetNmbr>\r
                  <!--Optional:-->\r
                  <v3:VendorPrefs>\r
                     <v3:Airline Hosted="?"/>\r
                  </v3:VendorPrefs>\r
               </v3:Address>\r
               <!--Optional:-->\r
               <v3:Ticketing PseudoCityCode="?" QueueNumber="?" QueueName="?" ShortText="?" TicketTimeLimit="?" TicketType="?"/>\r
            </v3:AgencyInfo>\r
            <!--Optional:-->\r
            <v3:CustomerInfo>\r
               <!--Optional:-->\r
               <v3:ContactNumbers>\r
                  <!--1 or more repetitions:-->\r
                  <v3:ContactNumber InsertAfter="?" LocationCode="?" NameNumber="?" Phone="?" PhoneUseType="?"/>\r
               </v3:ContactNumbers>\r
               <!--Optional:-->\r
               <v3:Corporate>\r
                  <v3:ID>?</v3:ID>\r
               </v3:Corporate>\r
               <!--Zero or more repetitions:-->\r
               <v3:CustLoyalty MembershipID="?" NameNumber="?" ProgramID="?" SegmentNumber="?" TravelingCarrierCode="?"/>\r
               <!--Optional:-->\r
               <v3:CustomerIdentifier>?</v3:CustomerIdentifier>\r
               <!--Zero or more repetitions:-->\r
               <v3:Email Address="?" NameNumber="?" ShortText="?" Type="?"/>\r
               <!--Zero or more repetitions:-->\r
               <v3:PersonName Infant="?" NameNumber="?" NameReference="?" PassengerType="?">\r
                  <!--Optional:-->\r
                  <v3:GivenName>?</v3:GivenName>\r
                  <!--Optional:-->\r
                  <v3:GroupInfo Name="?" NumSeatsRemaining="?">\r
                     <!--Optional:-->\r
                     <v3:VendorPrefs>\r
                        <v3:Airline Code="?"/>\r
                     </v3:VendorPrefs>\r
                  </v3:GroupInfo>\r
                  <!--Optional:-->\r
                  <v3:Surname>?</v3:Surname>\r
               </v3:PersonName>\r
            </v3:CustomerInfo>\r
         </v3:TravelItineraryAddInfoRQ>\r
      </v3:PassengerDetailsRQ>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="PassengerDetailsRQ"/></con:call></con:operation></con:interface><con:testSuite id="95a0acc7-f841-41d1-916d-42438077b503" name="TestSuite 1"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="65a8cc49-251f-4ad8-86e0-19e51a05bf06" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="951c5609-8db0-4737-ac14-67b26199f7f9"><con:settings/><con:config><script>testRunner.testCase.setPropertyValue("Username","773400")
testRunner.testCase.setPropertyValue("Password","PASSWORD_GOES_HERE")
testRunner.testCase.setPropertyValue("CPAId","7TZA")
testRunner.testCase.setPropertyValue("Domain","AA")</script></con:config></con:testStep><con:testStep type="request" name="Step 1-SessionCreateRQ-1.0.0" id="0cb3b1d2-a90e-4608-b831-5afcfb073707"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OTA_HotelResSoapBinding</con:interface><con:operation>OTA_HotelResRQ</con:operation><con:request name="Step 1-SessionCreateRQ-1.0.0" id="1471c86c-f033-4570-9171-d277a15490de"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.havail.sabre.com</con:endpoint><con:request><![CDATA[<!--<SessionCreateRQ is utilized to initiate a SOAP API session. >-->

<soap-env:Envelope xmlns:soap-env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <soap-env:Header>
      <eb:MessageHeader soap-env:mustUnderstand="1" eb:version="1.0">
          <eb:From>
            <eb:PartyId></eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId></eb:PartyId>
         </eb:To>
         <eb:CPAId>${#TestCase#CPAId}</eb:CPAId>
         <eb:ConversationId>V1@280b16ec-5eac-46c0-893f-c88f8e8cb632@310b16ec-5dad-46c0-893f-c88f8e8cb643@780b16ec-5eac-46c0-893f-c88f8e8cb699</eb:ConversationId>
         <eb:Service>SessionCreateRQ</eb:Service>
         <eb:Action>SessionCreateRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(new Date())}</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:UsernameToken>
            <wsse:Username>${#TestCase#Username}</wsse:Username>
            <wsse:Password>${#TestCase#Password}</wsse:Password>
            <Organization>${#TestCase#CPAId}</Organization>
            <Domain>${#TestCase#Domain}</Domain>
         </wsse:UsernameToken>
      </wsse:Security>
   </soap-env:Header>
   <soap-env:Body>
      <eb:Manifest soap-env:mustUnderstand="1" eb:version="1.0">
         <eb:Reference xlink:href="cid:rootelement" xlink:type="simple"/>
      </eb:Manifest>
      <SessionCreateRQ>
         <POS>
            <Source PseudoCityCode="${#TestCase#CPAId}"/>
         </POS>
      </SessionCreateRQ>
      <ns:SessionCreateRQ xmlns:ns="http://www.opentravel.org/OTA/2002/11"/>
   </soap-env:Body>
</soap-env:Envelope>
]]></con:request><con:assertion type="SOAP Response" id="5049a9b5-9d4d-428e-a016-1d9c4200def5"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script-BinarySecurityToken" id="ab4ca3cf-1cc1-4678-a83b-576a0c55abd8"><con:settings/><con:config><script>def response=context.expand('${Step 1-SessionCreateRQ-1.0.0#Response#//wsse:BinarySecurityToken}')
testRunner.testCase.setPropertyValue("Response",response)
def getLocalPropValue=testRunner.testCase.getPropertyValue("Response")
log.info(getLocalPropValue)</script></con:config></con:testStep><con:testStep type="request" name="Step 2 -OTA_HotelAvailLLSRQ-2.3.0" id="3bb7a2b7-063a-4c59-8e9d-6eb1fe96f25c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OTA_HotelAvailSoapBinding</con:interface><con:operation>OTA_HotelAvailRQ</con:operation><con:request name="Step 2 -OTA_HotelAvailLLSRQ-2.3.0" id="3821eeec-56da-4f1d-91f5-b588d6fd68df"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.havail.sabre.com</con:endpoint><con:request><![CDATA[<!--OTA_HotelAvailLLSRQ request is typically the first step in the shopping process and provides you with rate ranges and real time availability across a broad set of properties using a basic airport code, city code, or city name search, with the optional addition of other search criteria.
-->

<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <soapenv:Header>
      <eb:MessageHeader soapenv:mustUnderstand="0" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader">
          <eb:From>
            <eb:PartyId></eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId></eb:PartyId>
         </eb:To>
         <eb:CPAId>${#TestCase#CPAId}</eb:CPAId>
         <eb:ConversationId>V1@280b16ec-5eac-46c0-893f-c88f8e8cb632@310b16ec-5dad-46c0-893f-c88f8e8cb643@780b16ec-5eac-46c0-893f-c88f8e8cb699</eb:ConversationId>
         <eb:Service>OTA_HotelAvailLLSRQ</eb:Service>
         <eb:Action>OTA_HotelAvailLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(new Date())}</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <eb:Security soapenv:mustUnderstand="0" xmlns:eb="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <eb:BinarySecurityToken>${#TestCase#Response#//wsse:BinarySecurityToken/text()}</eb:BinarySecurityToken>
      </eb:Security>
   </soapenv:Header>
   <soapenv:Body>
     <OTA_HotelAvailRQ Version="2.3.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <AvailRequestSegment>
        <Customer>
            <Corporate>
                <ID>ABC123</ID>
            </Corporate>
        </Customer>
        <GuestCounts Count="2" />
        <HotelSearchCriteria>
            <Criterion>
                <HotelRef HotelCityCode="OAK" />
            </Criterion>
        </HotelSearchCriteria>
        <TimeSpan End="${=new java.text.SimpleDateFormat("MM-dd").format(new Date()+17)}" Start="${=new java.text.SimpleDateFormat("MM-dd").format(new Date()+10)}" />
    </AvailRequestSegment>
</OTA_HotelAvailRQ>
   </soapenv:Body>
</soapenv:Envelope>
]]></con:request><con:assertion type="SOAP Response" id="f09a403e-8582-477b-bf09-069721c100a7"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="a7aeaa14-b31e-4cce-a96f-81ee2edb5cb3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>HotelCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step 2 -OTA_HotelAvailLLSRQ-2.3.0</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='https://webservices.sabre.com/websvc';
declare namespace ns2='http://services.sabre.com/STL_Header/v120';
declare namespace ns3='http://www.w3.org/2000/09/xmldsig#';
declare namespace ns4='http://services.sabre.com/STL/v01';
declare namespace ns5='http://webservices.sabre.com/sabreXML/2011/10';
//ns5:AvailabilityOptions/ns5:AvailabilityOption[1]/ns5:BasicPropertyInfo/@HotelCode
</con:sourcePath><con:targetType>HotelCode</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>RPH</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Step 2 -OTA_HotelAvailLLSRQ-2.3.0</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='https://webservices.sabre.com/websvc';
declare namespace ns2='http://services.sabre.com/STL_Header/v120';
declare namespace ns3='http://www.w3.org/2000/09/xmldsig#';
declare namespace ns4='http://services.sabre.com/STL/v01';
declare namespace ns5='http://webservices.sabre.com/sabreXML/2011/10';
//ns5:AvailabilityOptions/ns5:AvailabilityOption/@RPH</con:sourcePath><con:targetType>RPH</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="Step 3 -HotelPropertyDescriptionLLSRQ-2.3.0" id="d5ae720c-583d-4365-8a66-ae63dad7599d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>HotelPropertyDescriptionSoapBinding</con:interface><con:operation>HotelPropertyDescriptionRQ</con:operation><con:request name="Step 3 -HotelPropertyDescriptionLLSRQ-2.3.0" id="3316f0c1-f65e-426d-b2d8-bfdcae162b61"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.havail.sabre.com</con:endpoint><con:request><![CDATA[<!--<HotelPropertyDescriptionLLSRQ request provides details on available room rates by room and rate type for a single property. Responses are based on real time requests to hotel suppliers with actual rates and rooms available at the time of request.>-->

<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <soapenv:Header>
      <eb:MessageHeader soapenv:mustUnderstand="0" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader">
          <eb:From>
            <eb:PartyId></eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId></eb:PartyId>
         </eb:To>
         <eb:CPAId>${#TestCase#CPAId}</eb:CPAId>
         <eb:ConversationId>V1@280b16ec-5eac-46c0-893f-c88f8e8cb632@310b16ec-5dad-46c0-893f-c88f8e8cb643@780b16ec-5eac-46c0-893f-c88f8e8cb699</eb:ConversationId>
         <eb:Service>HotelPropertyDescriptionLLSRQ</eb:Service>
         <eb:Action>HotelPropertyDescriptionLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(new Date())}</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <eb:Security soapenv:mustUnderstand="0" xmlns:eb="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <eb:BinarySecurityToken>${#TestCase#Response#//wsse:BinarySecurityToken/text()}</eb:BinarySecurityToken>
      </eb:Security>
   </soapenv:Header>
   <soapenv:Body>
      <HotelPropertyDescriptionRQ Version="2.3.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <AvailRequestSegment>
            <GuestCounts Count="2"/>
            <HotelSearchCriteria>
               <Criterion>
                  <HotelRef HotelCode="${#TestCase#HotelCode}"/>
               </Criterion>
            </HotelSearchCriteria>
             <TimeSpan End="${=new java.text.SimpleDateFormat("MM-dd").format(new Date()+17)}" Start="${=new java.text.SimpleDateFormat("MM-dd").format(new Date()+10)}" />
         </AvailRequestSegment>
      </HotelPropertyDescriptionRQ>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="27362848-d0f8-40a3-aba8-05583f90ba65"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Step 4 -PassengerDetailsRQ-3.3.0" id="375ae1a5-d0f5-4b35-88cc-65bf8db2e27c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PassengerDetailsSoapBinding</con:interface><con:operation>PassengerDetailsRQ</con:operation><con:request name="Step 4 -PassengerDetailsRQ-3.3.0" id="77f2b81e-d7c0-4d26-9022-b17db626c5da"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.havail.sabre.com</con:endpoint><con:request><![CDATA[<!--<PassengerDetailsRQ request provides traveler information plus agency and ticketing information.>-->

<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <soapenv:Header>
      <eb:MessageHeader soapenv:mustUnderstand="0" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader">
          <eb:From>
            <eb:PartyId></eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId></eb:PartyId>
         </eb:To>
         <eb:CPAId>${#TestCase#CPAId}</eb:CPAId>
         <eb:ConversationId>V1@280b16ec-5eac-46c0-893f-c88f8e8cb632@310b16ec-5dad-46c0-893f-c88f8e8cb643@780b16ec-5eac-46c0-893f-c88f8e8cb699</eb:ConversationId>
         <eb:Service>PassengerDetailsRQ</eb:Service>
         <eb:Action>PassengerDetailsRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(new Date())}</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <eb:Security soapenv:mustUnderstand="0" xmlns:eb="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <eb:BinarySecurityToken>${#TestCase#Response#//wsse:BinarySecurityToken/text()}</eb:BinarySecurityToken>
      </eb:Security>
   </soapenv:Header>
   <soapenv:Body>
      <PassengerDetailsRQ version="3.3.0" IgnoreOnError="false" HaltOnError="false" xmlns="http://services.sabre.com/sp/pd/v3_3">
         <PostProcessing IgnoreAfter="false" RedisplayReservation="true" UnmaskCreditCard="true"/>
         <TravelItineraryAddInfoRQ>
            <AgencyInfo>
               <Address>
                  <AddressLine>SABRE Drive</AddressLine>
                  <CityName>SOUTHLAKE</CityName>
                  <CountryCode>US</CountryCode>
                  <PostalCode>76092</PostalCode>
                  <StateCountyProv StateCode="TX"/>
                  <StreetNmbr>3150 SABRE DRIVE</StreetNmbr>
               </Address>
            </AgencyInfo>
            <CustomerInfo>
            <ContactNumbers>
               <ContactNumber LocationCode="DFW" NameNumber="1.1" Phone="682-605-1000" PhoneUseType="H" />
            </ContactNumbers>
            <PersonName NameReference="ABC123">
               <GivenName>Ram</GivenName>
               <Surname>Jee</Surname>
            </PersonName>
         </CustomerInfo>
         </TravelItineraryAddInfoRQ>
      </PassengerDetailsRQ>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0b6eab6a-ae2a-4f49-bff6-fab2b6231c40"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Step 5 -OTA_HotelResLLSRQ-2.2.0" id="547b09e4-9c21-4ebe-b6a4-29121f8a4c3a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OTA_HotelResSoapBinding</con:interface><con:operation>OTA_HotelResRQ</con:operation><con:request name="Step 5 -OTA_HotelResLLSRQ-2.2.0" id="9cd9c255-5c7a-4ceb-9923-c9501aad3e5a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.havail.sabre.com</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <soapenv:Header>
      <eb:MessageHeader soapenv:mustUnderstand="0" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader">
          <eb:From>
            <eb:PartyId></eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId></eb:PartyId>
         </eb:To>
         <eb:CPAId>${#TestCase#CPAId}</eb:CPAId>
         <eb:ConversationId>V1@280b16ec-5eac-46c0-893f-c88f8e8cb632@310b16ec-5dad-46c0-893f-c88f8e8cb643@780b16ec-5eac-46c0-893f-c88f8e8cb699</eb:ConversationId>
         <eb:Service>OTA_HotelResLLSRQ</eb:Service>
         <eb:Action>OTA_HotelResLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(new Date())}</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <eb:Security soapenv:mustUnderstand="0" xmlns:eb="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <eb:BinarySecurityToken>${#TestCase#Response#//wsse:BinarySecurityToken/text()}</eb:BinarySecurityToken>
      </eb:Security>
   </soapenv:Header>
   <soapenv:Body>
     <OTA_HotelResRQ Version="2.2.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <Hotel>
            <BasicPropertyInfo RPH="${#TestCase#RPH}"/>
            <Guarantee Type="G">
               <CC_Info>
                  <PaymentCard Code="VI" ExpireDate="2018-12" Number="4400661815400699"/>
                  <PersonName>
                     <Surname>Jee</Surname>
                  </PersonName>
               </CC_Info>
            </Guarantee>
            <RoomType NumberOfUnits="1"/>
         </Hotel>
      </OTA_HotelResRQ>
  </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8c4ee87c-0ef3-4cdf-9565-9bb59e6d1cdd"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Step 6 -EndTransactionLLSRQ-2.0.8" id="86a4ea5d-3d92-4b87-bf26-c31ea54201c5"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OTA_HotelResSoapBinding</con:interface><con:operation>OTA_HotelResRQ</con:operation><con:request name="Step 6 -EndTransactionLLSRQ-2.0.8" id="4d13e541-bed6-4910-8b38-6404c4be953a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.havail.sabre.com</con:endpoint><con:request><![CDATA[<!--EndTransactionLLSRQ request is used to complete and store changes made to a Passenger Name Record (PNR)
-->

<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
   <soapenv:Header>
      <eb:MessageHeader soapenv:mustUnderstand="0" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader">
          <eb:From>
            <eb:PartyId></eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId></eb:PartyId>
         </eb:To>
         <eb:CPAId>${#TestCase#CPAId}</eb:CPAId>
         <eb:ConversationId>V1@280b16ec-5eac-46c0-893f-c88f8e8cb632@310b16ec-5dad-46c0-893f-c88f8e8cb643@780b16ec-5eac-46c0-893f-c88f8e8cb699</eb:ConversationId>
         <eb:Service>EndTransactionLLSRQ</eb:Service>
         <eb:Action>EndTransactionLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(new Date())}</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <eb:Security soapenv:mustUnderstand="0" xmlns:eb="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <eb:BinarySecurityToken>${#TestCase#Response#//wsse:BinarySecurityToken/text()}</eb:BinarySecurityToken>
      </eb:Security>
   </soapenv:Header>
   <soapenv:Body>
      <EndTransactionRQ xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="2.0.8">
<EndTransaction Ind="true" />
<Source ReceivedFrom="SWS TEST"/>
</EndTransactionRQ>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c1bce27f-b00a-44f5-a6c6-c9ccaa62b71d"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Step 7 -SessionCloseRQ-1.0.1" id="8fc31372-3d4b-4fb4-94d2-92ddd7668be4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OTA_HotelResSoapBinding</con:interface><con:operation>OTA_HotelResRQ</con:operation><con:request name="Step 7 -SessionCloseRQ-1.0.1" id="d11e6cfe-edf0-420e-902c-b7250a173619"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.havail.sabre.com</con:endpoint><con:request><![CDATA[<!--<SessionCloseRQ is utilized to close a SOAP API session. >-->


<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns="http://www.opentravel.org/OTA/2002/11">
   <soapenv:Header>
      <eb:MessageHeader xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" soapenv:mustUnderstand="0">
         <eb:From>
            <eb:PartyId />
         </eb:From>
         <eb:To>
            <eb:PartyId />
         </eb:To>
         <eb:CPAId>${Properties#CPAId}</eb:CPAId>
         <eb:ConversationId>V1@280b16ec-5eac-46c0-893f-c88f8e8cb632@310b16ec-5dad-46c0-893f-c88f8e8cb643@780b16ec-5eac-46c0-893f-c88f8e8cb699</eb:ConversationId>
         <eb:Service>SessionCloseRQ</eb:Service>
         <eb:Action>SessionCloseRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>${=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(new Date())}</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <eb:Security xmlns:eb="http://schemas.xmlsoap.org/ws/2002/12/secext" soapenv:mustUnderstand="0">
         <eb:BinarySecurityToken>${#TestCase#Response#//wsse:BinarySecurityToken/text()}</eb:BinarySecurityToken>
      </eb:Security>
   </soapenv:Header>
   <soapenv:Body xmlns:eb="http://www.opentravel.org/OTA/2002/11">
      <eb:SessionCloseRQ>
         <eb:POS>
            <eb:Source PseudoCityCode="${Properties#CPAId}" />
         </eb:POS>
      </eb:SessionCloseRQ>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="a188afd2-ca7a-41e9-85c3-4fb8b1e21de4"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>Username</con:name><con:value>773400</con:value></con:property><con:property><con:name>Password</con:name><con:value>PASSWORD_GOES_HERE</con:value></con:property><con:property><con:name>CPAId</con:name><con:value>7TZA</con:value></con:property><con:property><con:name>Domain</con:name><con:value>AA</con:value></con:property><con:property><con:name>Response</con:name><con:value>&lt;wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/ACPCRTC!ICESMSLB\/CRT.LB!-3198580165607863666!1534354!0&lt;/wsse:BinarySecurityToken></con:value></con:property><con:property><con:name>HotelCode</con:name><con:value>0012350</con:value></con:property><con:property><con:name>RPH</con:name><con:value>001</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>